# vim: set ft=python ts=8 sw=4 et :vim #

# Fields will be stored in history file. Some fields may have mru histories.
# eg. BUILD#BUILDDIR=${COGX_ROOT}/BUILD
# eg. [PLAYER#CONFIG-MRU]
#     ${COGX_ROOT}/player/robot.cfg
#     ${COGX_ROOT}/player/fakerobot.cfg
#
# setVar():
# The variable is only set if it is not defined in castcontrol.conf.
# This way a user doesn't need to change the code, but only the configuration file.
# Vars are not stored in history.

#from extserver import Server

disp=Server("Display", label="Standalone Display Server")
disp.setCommand("${COGX_ROOT}/output/bin/display-server")


player = Server("Player", label="Player")
player.filenameField("CONFIG", label="Configuration", filter="Player Config (*.cfg);;All files (*)")
player.stringItemField("DEBUG", label="Debug level", items=["-d %d" % l for l in range(10)] )
player.setCommand("player  [DEBUG]  [CONFIG]")


pbot = Server("Peekabot", label="Peekabot")
pbot.setCommand("peekabot")


abducer = Server("Abducer", label="Abducer Server")
abducer.integerField("PORT",
        label="Port", range=(10000,50000), default=10000)
#TODO: maybe server and engine should also be configurable
abducer.setVar("ABDUCER_ROOT", "${COGX_ROOT}/subarchitectures/dialogue.sa/external/abducer-2.0.0")
abducer.setCommand("""
      ${ABDUCER_ROOT}/abducer-server-bin
      -n "AbducerServer"
      -e "default -p [PORT]"
      -a ${ABDUCER_ROOT}/abduction-engine
      """)


mary = Server("Mary.tts", label="Mary TTS Server")
mary.setVar("MARY_ROOT", "${COGX_ROOT}/tools/mary")
mary.setPathList("MARY_CLASSPATH", """
      ${MARY_ROOT}/java/mary-common.jar
      ${MARY_ROOT}/java/log4j-1.2.15.jar
      """)
mary.setCommand("""
      java -ea -Xms40m -Xmx1g -classpath ${MARY_CLASSPATH}
      -Dmary.base=${MARY_ROOT} 
      marytts.server.Mary
      """)


golem = Server("Golem", label="Golem")
golem.filenameField("CONFIG", label="Configuration", filter="Golem Config (*.cfg);;All files (*)")
golem.setCommand("golem [CONFIG]")


cleanup = Server("Cleanup", label="Cleanup shell script (bash)", group='B')
cleanup.filenameField("SCRIPT", label="Script", filter="SH Files (*.sh);;All files (*)")
cleanup.setCommand("bash [SCRIPT]")


# * An external sever must be configured to run on an agent
#    - confiugration in xml or ini; like setLog4jProperties (eg. rename to setServerProperties)
#    - select the agent(s) on which to run
#    - retrieve effective settings from an agent; agents may have local settings
#      in their castcontrol.conf; read-only

