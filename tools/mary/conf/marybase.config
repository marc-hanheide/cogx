##########################################################################
# Copyright (C) 2006 DFKI GmbH.
# All rights reserved. Use is subject to license terms.
#
# Permission is hereby granted, free of charge, to use and distribute
# this software and its documentation without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of this work, and to
# permit persons to whom this work is furnished to do so, subject to
# the following conditions:
# 
#  1. The code must retain the above copyright notice, this list of
#     conditions and the following disclaimer.
#  2. Any modifications must be clearly marked as such.
#  3. Original authors' names are not deleted.
#  4. The authors' names are not used to endorse or promote products
#     derived from this software without specific prior written
#     permission.
# 
# DFKI GMBH AND THE CONTRIBUTORS TO THIS WORK DISCLAIM ALL WARRANTIES WITH 
# REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL DFKI GMBH NOR THE 
# CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR 
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF 
# THIS SOFTWARE.
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = marybase
marybase.version = 3.5.0

# Declare "group names" as component that other components can require.
# These correspond to abstract "groups" of which this component is an instance.
#provides = \
#    group-name-1 \
#    group-name-2

# List the dependencies, as a whitespace-separated list.
# We can require a component by name or by an abstract "group name" 
# as listed under the "provides" element.
#requires = \
#    module-name-1 \
#    group-name-2

requires = a-language
   
# For each required component, an optional minimum version and an optional
# download url can be given.
# requires.module-name-1.version = 3.0.0
# requires.module-name-1.download = http://mary.dfki.de/download/mary-install-3.x.x.jar

requires.a-language.download = http://mary.dfki.de/download/mary-install-3.x.x.jar
requires.a-language.download.package-name = english

###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.

# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        de.dfki.lt.mary.modules.Synthesis \
        de.dfki.lt.mary.modules.SableParser \
        de.dfki.lt.mary.modules.SSMLParser \
        de.dfki.lt.mary.modules.APMLParser \
        de.dfki.lt.mary.modules.MaryXMLToMbrola \
        de.dfki.lt.mary.modules.XML2UttAcoustParams \
        de.dfki.lt.mary.modules.Utt2XMLAcoustParams \
        de.dfki.lt.mary.modules.FreeTTS2FestivalUtt \
        de.dfki.lt.mary.modules.RealisedAcoustparamsExtractor \
        de.dfki.lt.mary.modules.RealisedDurationsExtractor

# Optionally, one component can request a module declared in another module
# to be ignored. This can make sense if the component provides a better
# version of the same functionality as some base implementation.
# ignore.modules.classes.list = \
#         de.dfki.lt.mary.modules.SomeBasicModule \
#         de.dfki.lt.mary.modules.AnotherBasicModule


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.synthesis.WaveformSynthesizer.

synthesizers.classes.list = \
		de.dfki.lt.mary.unitselection.UnitSelectionSynthesizer
`
# Java classes to use as the audio effects post-processors, as a whitespace-separated list.
# These have to implement de.dfki.lt.signalproc.effects.AudioEffect


audioeffects.classes.list = \
        de.dfki.lt.signalproc.effects.VocalTractLinearScalerEffect \
	de.dfki.lt.signalproc.effects.RobotiserEffect \
        de.dfki.lt.signalproc.effects.LPCWhisperiserEffect \
        de.dfki.lt.signalproc.effects.StadiumEffect \
        de.dfki.lt.signalproc.effects.ChorusEffectBase \
        de.dfki.lt.signalproc.effects.FilterEffectBase \
        de.dfki.lt.signalproc.effects.JetPilotEffect \
        de.dfki.lt.signalproc.effects.VolumeEffect \
        de.dfki.lt.signalproc.effects.HMMF0ScaleEffect \
        de.dfki.lt.signalproc.effects.HMMF0AddEffect \
        de.dfki.lt.signalproc.effects.HMMDurationScaleEffect

####################################################################
####################### Global settings  ###########################
####################################################################

# Run as a socket server? (true/false)
server = true

# server socket port:
socket.port = 59125

# module timeout (in milliseconds):
modules.timeout = 60000

# Perform a power-on self test for each module:
# auto (true in server mode, false in command-line mode)
# true
# false
modules.poweronselftest = auto

# If less than the following number of bytes can be allocated, report
# a low memory condition which may affect system behaviour.
mary.lowmemory = 20000000

# Whether to validate MaryXML module output
# (only useful for debugging):
maryxml.validate.modules = false

# Whether to validate MaryXML input:
maryxml.validate.input = true

# Local schemas.
# Note: If schema B <xsd:import>s A, then A must be listed before B!
schema.local = MARY_BASE/lib/xml.xsd \
               MARY_BASE/lib/MaryXML.xsd

# Log destination: Write to screen or to file
# - auto: Write to file if running as server, to screen otherwise
# - true: write to file
# - false: write to screen
log.tofile = auto

# Possible logging priority thresholds are:
# DEBUG (the lowest), INFO, WARN, and ERROR (the highest).
log.level = INFO

# Log filename: MARY_BASE is replaced by the mary base directory
# (i.e., the value of the system property mary.base)
log.filename = MARY_BASE/log/server.log

####################################################################
####################### Module settings  ###########################
####################################################################

# When converting plain text into RAWMARYXML, split into paragraphs at
# empty lines?
texttomaryxml.splitintoparagraphs = true

# Where to find the config files for the tokeniser module
tokeniser.root = MARY_BASE/lib/modules/tokeniser

# How to store the audio data we get from synthesis modules:
# ram = in ram
# file = in file
# auto = if in "low memory condition", in file, else in ram
# (see mary.lowmemory above)
synthesis.audiostore = auto

# Preload the freetts lexicon at system startup?
# - auto: preload if running as server, do not preload otherwise
# - true
# - false
freetts.lexicon.preload = auto

###########################
# Unit selection settings #
###########################

# Relative weight of the target cost function vs. the join cost function
viterbi.wTargetCosts = 0.5

# Relative weight of the signal-based join costs relative to the
# phonetic join costs computed from the target 
joincostfunction.wSignal = 0.5


###############
# External to mary: tritonus mp3 encoder using LAME
# (these have an effect because they will be copied to the system properties)

# Bitrates:
# MPEG1L3: sampling rates 32000 / 44100 / 48000
#                 bitrates 32 40 48 56 64 80 96 ...
# MPEG2L3: sampling rates 16000 / 22050 / 24000
#                 bitrates 8 16 24 32 40 48 56 64 ...
# MPEG2DOT5L3: sampling rates 8000 / 11025 / 12000
#                 bitrates 8 16 24 32 ...
# Recommended settings: 16 or 24 or 32
tritonus.lame.bitrate = 32

# Quality: lowest, low, middle, high, highest
tritonus.lame.quality = middle

# Variable bitrate: false, true
tritonus.lame.vbr = false

