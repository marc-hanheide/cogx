//
// (C) 2010, Aitor Aldoma Buchaca,
//           Johann Prankl,
//           Gerhard Obernberger <gerhard@obernberger.at>
//
//

#define _USE_MATH_DEFINES

#include <math.h>


NAMESPACE_CLASS_BEGIN( RTE )

static const double eps = 1e-12;
static const double pi = M_PI;
static const double two_pi = 2*M_PI;

/**
 * Returns true if the value is near zero (+/- epsilon)
 * Our epsion is 1e-12
 */
inline bool IsZero(double d)
{
   return fabs(d) < eps;
}

/**
 * Returns true if the values are equal (+/- epsilon)
 * Our epsion is 1e-12
 */
inline bool IsEqual(double a, double b)
{
   return fabs(a - b) < eps;
}

template <class Num>
inline Num Sqr(Num x)
{
   return x*x;
}

template <class Num>
inline Num Max(Num a, Num b)
{
   return (a >= b ? a : b);
}

template <class Num>
inline Num Min(Num a, Num b)
{
   return (a <= b ? a : b);
}

/**
 * Scale angle to [0..2pi[
 */
inline double ScaleAngle_0_2pi(double a)
{
   while(a >= two_pi) a -= two_pi;
   while(a < 0.) a += two_pi;
   return a;
}

NAMESPACE_CLASS_END()

