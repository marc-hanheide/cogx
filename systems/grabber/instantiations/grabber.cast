
VARDEFAULT cfgdir=%(CURRENT_DIR)/config/2011-11-16

HOSTNAME  Main  localhost

# lists of device ids
VARDEFAULT firewire_cameras=
VARDEFAULT firewire_devices=%(firewire_cameras)
VARDEFAULT firewire_config=--devclass FIREWIRE

# lists of device ids
VARDEFAULT v4l_cameras=
VARDEFAULT v4l_devices=%(v4l_cameras)
VARDEFAULT v4l_config=

# lists of device ids
VARDEFAULT pointgrey_cameras=
VARDEFAULT pointgrey_devices=%(pointgrey_cameras)
VARDEFAULT pointgrey_config=<multiline>
   --imgsize "1280 960"
   --framerate_fps "3"
   --camconfigs "%(cfgdir)/camcalib-left.xml %(cfgdir)/camcalib-right.xml"
   --swapredblue
   # --setAutPropAdj "1 1 1 1 1 0"
   # --format7 "640 480 0 0 1 1600" 
   # --log --debug
</multiline>

VARDEFAULT kinect_internal_file=%(cfgdir)/KinectConfig.xml
VARDEFAULT kinect_config_file=%(cfgdir)/camcalib-kinect.xml
VARDEFAULT kinect_pc_camera=
VARDEFAULT kinect_pc_devices=
VARDEFAULT kinect_pc_config=<multiline>
   --kconfig    "%(kinect_internal_file)"
   --camconfigs "%(kinect_config_file)"
   #--displayserver "display.srv"
</multiline>
OPTDEFAULT kinect_pc_grab=points !depth !rectimg

VARDEFAULT kinect_video_cameras=
VARDEFAULT kinect_video_devices=%(kinect_video_cameras)
VARDEFAULT kinect_video_config=<multiline>
   --kconfig    "%(kinect_internal_file)"
   --camconfigs "%(kinect_config_file)"
   #--displayserver "display.srv"
</multiline>

HOST [Main]

SUBARCHITECTURE visualization.sa 
CPP WM SubarchitectureWorkingMemory
CPP TM AlwaysPositiveTaskManager
CPP MG display.srv DisplayServer --redirect-to-host localhost

SUBARCHITECTURE vision.sa
CPP WM SubarchitectureWorkingMemory
CPP TM AlwaysPositiveTaskManager

IFNEQ(%(firewire_cameras),)
   SETVAR vsparams=<multiline>
      %(firewire_config)
      --camids "%(firewire_cameras)"
   </multiline>
   CPP MG VideoServer.fw OpenCvLiveServer %(vsparams)
ENDIF

IFNEQ(%(v4l_cameras),)
   SETVAR vsparams=<multiline>
      %(v4l_config)
      --camids "%(v4l_cameras)"
   </multiline>
   CPP MG VideoServer.v4l OpenCvLiveServer %(vsparams)
ENDIF

IFNEQ(%(pointgrey_cameras),)
   SETVAR vsparams=<multiline>
      %(pointgrey_config)
      --camids "%(pointgrey_cameras)"
   </multiline>
   CPP MG VideoServer.pg PointGreyServer %(vsparams)
ENDIF

IFNEQ(%(kinect_video_cameras),)
   SETVAR kvparams=<multiline>
      %(kinect_video_config)
      --camids "%(kinect_video_cameras)"
   </multiline>
    CPP MG VideoServer.k KinectVideoServer %(kvparams)
ENDIF

IFNEQ(%(kinect_pc_camera),)
   SETVAR kpcparams=<multiline>
      %(kinect_pc_config)
      --camids "%(kinect_pc_camera)"
   </multiline>
   #EXPAND kpcparams=%(kpcparams)
   CPP MG PcServer.k KinectPCServer %(kpcparams)
ENDIF

# Grabber GUI
SETVAR vgparams=<multiline>
   --displayserver "display.srv"
</multiline>
SETVAR devicenames=
IFNEQ(%(firewire_cameras),)
   SETVAR vgparams=%(vgparams) --camids.fw "%(firewire_cameras)" --videoname.fw "VideoServer.fw"
   SETVAR devicenames=%(devicenames) %(firewire_devices)
ENDIF
IFNEQ(%(v4l_cameras),)
   SETVAR vgparams=%(vgparams) --camids.v4l "%(v4l_cameras)" --videoname.v4l "VideoServer.v4l"
   SETVAR devicenames=%(devicenames) %(v4l_devices)
ENDIF
IFNEQ(%(pointgrey_cameras),)
   SETVAR vgparams=%(vgparams) --camids.pg "%(pointgrey_cameras)" --videoname.pg "VideoServer.pg"
   SETVAR devicenames=%(devicenames) %(pointgrey_devices)
ENDIF
IFNEQ(%(kinect_video_cameras),)
   SETVAR vgparams=%(vgparams) --camids.k "%(kinect_video_cameras)" --videoname.k "VideoServer.k"
   SETVAR devicenames=%(devicenames) %(kinect_video_devices)
ENDIF
IFNEQ(%(kinect_pc_camera),)
   # Parameters: Grab points, depth, rect image.
   # Defaults:
   #   --pcgrabpoints.k "true"
   #   --pcgrabdepth.k  "false"
   #   --pcgrabrect.k   "false"
   SETVAR vgparams=%(vgparams) --pcserver.k "PcServer.k"
   IFOPTANY (%(kinect_pc_grab),points)
      SETVAR vgparams=%(vgparams) --pcgrabpoints.k "true"
      SETVAR devicenames=%(devicenames) k-points
   ELSE
      SETVAR vgparams=%(vgparams) --pcgrabpoints.k "false"
   ENDIF
   IFOPTANY (%(kinect_pc_grab),depth)
      SETVAR vgparams=%(vgparams) --pcgrabdepth.k "true"
      SETVAR devicenames=%(devicenames) k-depth
   ELSE
      SETVAR vgparams=%(vgparams) --pcgrabdepth.k "false"
   ENDIF
   IFOPTANY (%(kinect_pc_grab),rectimg)
      SETVAR vgparams=%(vgparams) --pcgrabrect.k "true"
      SETVAR devicenames=%(devicenames) k-rectimg
   ELSE
      SETVAR vgparams=%(vgparams) --pcgrabrect.k "false"
   ENDIF
ENDIF

IFNEQ(%(devicenames),)
   SETVAR devicenames=--devicenames "%(devicenames)"
ENDIF

VARDEFAULT grab_ms=200
SETVAR vgparams=%(vgparams) --grab_ms %(grab_ms) %(devicenames)
CPP MG grabber VideoGrabber %(vgparams)


