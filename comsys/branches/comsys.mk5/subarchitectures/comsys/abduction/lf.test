# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
CLEAR
	@(u::door, cosi(i::sort ^ cosi(x))).

LFS

PRINT
REDUCE
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
CLEAR

	colour(red).
	colour(v::thing).
	colour(tint(weird) ^ red).
	@(v1::object, v1::object).
	@(v1::object, v2::object).

LFS

PRINT
REDUCE
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
CLEAR

	@(v1::object, box).

	@(v1::object, box ^ colour(c::colour ^ something)).

LFS

PRINT
REDUCE
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
CLEAR

	colour(tint(weird) ^ red).
	colour(c::colour).
	colour(d::colour).  # this makes it func. irreducible
	@(c::colour, tint(t::tint)).

LFS

PRINT
REDUCE
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
CLEAR

	@(v1::thing, object).
	@(v1::thing, colour(c::colour ^ black)).
?	@(v1::thing, colour(black)).

LFS

PRINT
REDUCE
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -#
CLEAR

	@(v1::thing, colour(red)).
	@(v2::thing, colour(red)).

	@(c::colour, blue).

	@(v1::thing, colour(c::colour)).
	@(v2::thing, colour(c::colour)).

?	@(v2::thing, colour(blue)).
?	@(c::colour, red).  # false in non-reduced, true in reduced model

#	@(b::thing, colour(tint(rare))).
#	@(b::thing, colour(tint(rareness(first)))).
#	@(c::colour, black).
#	@(b::thing, colour(c::colour)).

LFS

PRINT
REDUCE
