<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright (C) 2003 University of Edinburgh (Michael White) 
$Revision: 1.1 $, $Date: 2005/06/06 16:08:38 $ 
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <xsd:annotation>
  <xsd:documentation>
    Elements and types for hybrid logic dependency semantics (HLDS) constructs.
    
    The subset of hybrid logic terms used in HLDS is defined here.
    (The Java classes currently support a slightly larger subset.)
    To support flattening of these terms into elementary predications, the 
    contents of the satisfaction operators and diamond relations (modal ops) 
    are restricted, as described in detail below.
    
    Note that where a list of terms is allowed, these are implicitly conjoined; 
    a conjunction operator is inserted upon loading, when necessary.
    
    Nominals and variables may be given a type (or sort) listed in the 
    types file, by appending the type to the name after a colon. 
    Propositions whose names appear in the types file are also treated as typed.
  </xsd:documentation>
  </xsd:annotation>

  <xsd:include schemaLocation="tokens.xsd"/>

  <xsd:complexType name="hldsPreds">
    <xsd:annotation>
    <xsd:documentation>
      One or more satisfaction operators, encoding the semantics 
      associated with a category.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="satop" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="hldsFeatVals">
    <xsd:annotation>
    <xsd:documentation>
      The possible values of an LF feature, i.e., 
      a nominal (atom or variable), proposition, or variable (over HLDS terms).
    </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element ref="nominal"/>
      <xsd:element ref="prop"/>
      <xsd:element ref="var"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:element name="satop">
    <xsd:annotation>
    <xsd:documentation>
      A satisfaction operator, with a nominal and an arg.
      The nominal can either be a nominal atom, named by the "nom" attribute, 
      or a nominal variable, named by the "nomvar" attribute.
      The arg optionally begins with a proposition, followed by any number 
      of diamond relations, but must be non-empty.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element ref="prop"/>
          <xsd:element ref="diamond" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:element ref="diamond" maxOccurs="unbounded"/>
      </xsd:choice>
      <xsd:attribute name="nom" type="typedFeature"/>
      <xsd:attribute name="nomvar" type="typedFeature"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="prop">
    <xsd:annotation>
    <xsd:documentation>
      A named proposition.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="name" type="token" use="required"/>
    </xsd:complexType>
  </xsd:element>
  
  <xsd:element name="diamond">
    <xsd:annotation>
    <xsd:documentation>
      A diamond relation (modal operator), with a mode and an arg.
      The "mode" attribute names the relation.
      The arg is either just a proposition or a variable, 
      or a nominal followed optionally by a proposition and 
      any number of nested diamond relations.
      In the former case, the relation encodes a semantic feature; in the latter case, it encodes 
      a relation to another semantic head.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:element ref="prop"/>
        <xsd:element ref="var"/>
        <xsd:sequence>
          <xsd:element ref="nominal"/>
          <xsd:element ref="prop" minOccurs="0"/>
          <xsd:element ref="diamond" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:choice>
      <xsd:attribute name="mode" type="xsd:NMTOKEN" use="required"/>
    </xsd:complexType>
  </xsd:element>

  <xsd:element name="nominal" type="namedTerm" abstract="true">
    <xsd:annotation>
    <xsd:documentation>
      A nominal term, either an atom or a variable.
    </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <xsd:element name="nom" type="namedTerm" substitutionGroup="nominal">
    <xsd:annotation>
    <xsd:documentation>
      A nominal atom.
    </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <xsd:element name="nomvar" type="namedTerm" substitutionGroup="nominal">
    <xsd:annotation>
    <xsd:documentation>
      A nominal variable.
    </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <xsd:element name="var" type="namedTerm">
    <xsd:annotation>
    <xsd:documentation>
      A variable over HLDS terms. 
    </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <xsd:complexType name="namedTerm">
    <xsd:annotation>
    <xsd:documentation>
      A term with a name.
    </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="typedFeature" use="required"/>
  </xsd:complexType>
  
</xsd:schema>

