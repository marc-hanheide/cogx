
<!--
Would be useful (also to appear in report:
-- example ID
-- comment field (e.g., for expected failures
-->

<!-- ===== WITHOUT OVERALL STRUCTURE ==== -->


<!-- Simple input w/o overall structure: -->

<utterance>
<input>
@b1:entity(ball)  
</input>
<realizations>
<string>a ball</string>
<string>one ball</string>
</realizations>
</utterance>

<utterance>
<input>
@b1:person(GJ)  
</input>
<realizations>
<string>GJ</string>
</realizations>
</utterance>

<utterance>
<input>
@b1:entity(it)  
</input>
<realizations>
<string>it</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:entity(<Salient>true)  
-->
@b1:entity(/Salient\true)  
</input>
<realizations>
<string>it</string>
<string>this</string>
</realizations>
</utterance>

<utterance>
<input>
@c1:quality(red)
</input>
<realizations>
<string>red</string>
</realizations>
</utterance>


<utterance>
<input>
<!-- 
@e1:action(walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)) )
-->
@e1:action(walk ^ /Actor\(b1:physical ^ robot ^ /Size\(s1:quality ^ big)) )
</input>
<realizations>
<string>A big robot walks</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@e1:action(walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)) ^ <Patient>(d1:entity ^ dog) )
-->
@e1:action(walk ^ /Actor\(b1:physical ^ robot ^ /Size\(s1:quality ^ big)) ^ /Patient\(d1:entity ^ dog) )
</input>
<realizations>
<string>A big robot walks a dog</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@e1:action(walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)) ^ <Patient>(d1:entity ^ dog) ^ <Beneficiary>(w1:entity ^ woman))
-->
@e1:action(walk ^ /Actor\(b1:physical ^ robot ^ /Size\(s1:quality ^ big)) ^ /Patient\(d1:entity ^ dog) ^ /Beneficiary\(w1:entity ^ woman))
</input>
<realizations>
<string>A big robot walks a dog for a woman</string>
</realizations>
</utterance>



<!-- Delimitation w/o overall structure -->

<utterance>
<input>
<!--
@b1:physical(ball ^ <InfoStatus>familiar)  
-->
@b1:physical(ball ^ /InfoStatus\familiar)  
</input>
<realizations>
<string>the ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Unique>true)  
-->
@b1:physical(ball ^ /Unique\true)  
</input>
<realizations>
<string>the ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Unique>false ^ <InfoStatus>familiar)  
-->
@b1:physical(ball ^ /Unique\false ^ /InfoStatus\familiar)  
</input>
<realizations>
<string>the ball</string>
</realizations>
</utterance>


<!-- Quantification and number w/o overall structure -->

<utterance>
<input>
@b1:physical(ball)  
</input>
<realizations>
<string>a ball</string>
<string>one ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Quantity>0)  
-->
@b1:physical(ball ^ /Quantity\0)  
</input>
<realizations>
<string>No ball</string>
<string>No balls</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Quantity>1)  
-->
@b1:physical(ball ^ /Quantity\1)  
</input>
<realizations>
<string>one ball</string>
<string>1 ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@b1:physical(ball ^ <Quantity>2) 
*** any number; but they don't generate, though LF correct AFAICS! ***
-->
@b1:physical(ball ^ /Quantity\2) 
</input>
<realizations>
<string>2 balls</string>
<string>two balls</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Quantity>multiple)
-->
@b1:physical(ball ^ /Quantity\multiple)
</input>
<realizations>
<string>balls</string>
<string>some balls</string>
<string>several balls</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Quantity>unknown)  
-->
@b1:physical(ball ^ /Quantity\unknown)  
</input>
<realizations>
<string>a ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Quantity>dkfhjdfk)  
*** not supposed to generate of course ***
-->
@b1:physical(ball ^ /Quantity\dkfhjdfk)  
</input>
<realizations>
</realizations>
</utterance>


<!-- Attributes w/o overall structure-->

<!-- simple features: old, still works now: -->	

<utterance>
<input>
<!-- 
@b1:entity(ball ^ <Size>big)
-->
@b1:entity(ball ^ /Size\big)
</input>
<realizations>
<string>a big ball</string>
<string>one big ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:entity(ball ^ <Color>blue)
-->
@b1:entity(ball ^ /Color\blue)
</input>
<realizations>
<string>a blue ball</string>
<string>one blue ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@b1:entity(thing ^ <Shape>round)
-->
@b1:entity(thing ^ /Shape\round)
</input>
<realizations>
<string>a round thing</string>
<string>one round thing</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@b1:entity(book ^ <Name>Borland)
-->
@b1:entity(book ^ /Name\Borland)
</input>
<realizations>
<string>a Borland book</string>
<string>one Borland book</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@b1:physical(ball ^ <Size>big ^ <Color>red)
-->
@b1:physical(ball ^ /Size\big ^ <Color>red)
</input>
<realizations>
<string>a big red ball</string>
<string>one big red ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:entity(book ^ <Shape>square ^ <Name>Borland)
-->
@b1:entity(book ^ /Shape\square ^ /Name\Borland)
</input>
<realizations>
<string>a square Borland book</string>
<string>one square Borland book</string>
</realizations>
</utterance>


<!-- relations -->

<utterance>
<input>
<!--
@b1:physical(ball ^ <TopIn>(b2:entity ^ box))
-->
@b1:physical(ball ^ /TopIn\(b2:entity ^ box))
</input>
<realizations>
<string>a ball in a box</string>
<string>one ball in one box</string>
<string>a ball in one box</string>
<string>one ball in a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <TopOn>(b2:entity ^ box))
-->
@b1:physical(ball ^ /TopOn\(b2:entity ^ box))
</input>
<realizations>
<string>a ball on a box</string>
<string>one ball on one box</string>
<string>a ball on one box</string>
<string>one ball on a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@b1:physical(ball ^ <TopAt>(b2:entity ^ box))
-->
@b1:physical(ball ^ /TopAt\(b2:entity ^ box))
</input>
<realizations>
<string>a ball at a box</string>
<string>one ball at one box</string>
<string>a ball at one box</string>
<string>one ball at a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@b1:physical(ball ^ <NearTo>(b2:entity ^ box))
-->
@b1:physical(ball ^ /NearTo\(b2:entity ^ box))
</input>
<realizations>
<string>a ball near a box</string>
<string>one ball near one box</string>
<string>a ball near one box</string>
<string>one ball near a box</string>
<string>a ball near to a box</string>
<string>one ball near to one box</string>
<string>a ball near to one box</string>
<string>one ball near to a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <NextTo>(b2:entity ^ box))
-->
@b1:physical(ball ^ /NextTo\(b2:entity ^ box))
<string>a ball next to a box</string>
<string>one ball next to one box</string>
<string>a ball next to one box</string>
<string>one ball next to a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <FarFrom>(b2:entity ^ box))
-->
@b1:physical(ball ^ /FarFrom\(b2:entity ^ box))
<string>a ball far from a box</string>
<string>one ball far from one box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Owner>(b2:person ^ GJ))
-->
@b1:physical(ball ^ /Owner\(b2:person ^ GJ))
<string>GJ 's ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Owner>(b2:entity ^ box))
*** nonsense, of course ***
-->
@b1:physical(ball ^ /Owner\(b2:entity ^ box))
<string>a box 's ball</string>
</realizations>
</utterance>



<!-- relations instead of simple features: doesn't work now, to be changed at some point: -->

<utterance>
<input>
<!--
@b1:physical(ball ^ <Size>(s1:quality ^ big))
-->
@b1:physical(ball ^ /Size\(s1:quality ^ big))
</input>
<realizations>
<string>a big ball</string>
<string>one big ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Color>(s2:quality ^ blue))
-->
@b1:physical(ball ^ /Color\(s2:quality ^ blue))
</input>
<realizations>
<string>a blue ball</string>
<string>one blue ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(ball ^ <Size>(s1:quality ^ big) ^ <Color>(s2:quality ^ red))
-->
@b1:physical(ball ^ /Size\(s1:quality ^ big) ^ /Color\(s2:quality ^ red))
</input>
<realizations>
<string>a big red ball</string>
<string>one big red ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(thing ^ <Shape>(s2:quality ^ round))
->
@b1:physical(thing ^ /Shape\(s2:quality ^ round))
</input>
<realizations>
<string>a round thing</string>
<string>one round thing</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@b1:physical(book ^ <Name>(s2:entity ^ Borland))
-->
@b1:physical(book ^ /Name\(s2:entity ^ Borland))
</input>
<realizations>
<string>a Borland book</string>
<string>one Borland</string>
</realizations>
</utterance>


<!-- Lists w/o overall structure -->

<utterance>
<input>
<!--
@e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball) ^ <Next>(b2:physical ^ box))
-->
@e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball) ^ /Next\(b2:physical ^ box))  
</input>
<realizations>
<string>a ball and a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball) ^ <Next>(e2:entity ^ and <First>(b2:physical ^ box ^ <Next>(b3:physical ^ mug))))
-->
@e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball) ^ /Next\(e2:entity ^ and /First\(b2:physical ^ box ^ /Next\(b3:physical ^ mug))))
</input>
<realizations>
<string>a ball and a box and a mug</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(b2:physical ^ box ^ <Shape>tall))
-->
@e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball ^ /Color\red) ^ /Next\(b2:physical ^ box ^ /Shape\tall))  
</input>
<realizations>
<string>a red ball and a tall box</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(b2:physical ^ box ^ <NextTo>(b3:entity ^ mug ^ <Shape>tall)))
-->
@e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball ^ /Color\red) ^ /Next\(b2:physical ^ box ^ /NextTo\(b3:entity ^ mug ^ /Shape\tall)))  
</input>
<realizations>
<string>a red ball and a box next to a tall mug</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(e2:entity ^ and <First>(b2:physical ^ box ^ <Size>big ^ <Next>(b3:physical ^ mug ^ <Shape>tall))))  
*** doesn't generate; why? ***
-->
@e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball ^ /Color\red) ^ /Next\(e2:entity ^ and /First\(b2:physical ^ box ^ /Size\big ^ /Next\(b3:physical ^ mug ^ /Shape\tall)))) 
</input>
<realizations>
<string>a red ball and a big box and a tall mug</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball ^ <Size>big) ^ <Next>(b2:physical ^ box ^ <Size>small))
*** will not generate because nominals are reused in modifiers -> wrong graph structure ***
-->
@e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball ^ /Size\big) ^ /Next\(b2:physical ^ box ^ /Size\small))  
</input>
<realizations>
<string>a big ball and a small box</string>
</realizations>
</utterance>




<!- ===============  WITH OVERALL STRUCTURE ============ -->


<!-- Simple input with overall structure -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer ^ <Content>(b1:physical ^ ball)
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer ^ /Content\(b1:physical ^ ball)
</input>
<realizations>
<string>a ball</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept   ^ <Content>(b1:entity ^ ball)
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\accept   ^ /Content\(b1:entity ^ ball)
</input>
<realizations>
<string>a ball</string>
<string>one ball</string>
<string>ok a ball</string> <!-- *** not yet planned for, would be nice though *** -->
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept  ^ <Content>(c1:quality ^ red)
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\accept  ^ /Content\(c1:quality ^ red)
</input>
<realizations>
<string>red</string>
<string>ok red</string>
</realizations>
</utterance>



<!-- inserting a perception verb-structure: (doesn't work as should)-->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Modality>vision ^ <Content>(b1:entity ^ ball))
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Modality\vision ^ /Content\(b1:entity ^ ball))
</input>
<realizations>
<string>I see a ball</string>
<string>I can see a ball</string>
</realizations>
</utterance>


<!-- Simple input with embedding with overall structure -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Content>(e1:action ^ walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big))))
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Content\(e1:action ^ walk ^ /Actor\(b1:physical ^ robot ^ /Size\(s1:quality ^ big))))
</input>
<realizations>
<string>a big robot walks</string>
<string>one big robot walks</string>
</realizations>
</utterance>


<!-- Simple acknowledgments, without context-sensitive content -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept)
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\accept)
</input>
<realizations>
<string>ok</string>
<string>yes</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>reject) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\reject) 
</input>
<realizations>
<string>sorry</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>alreadyTrue) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\alreadyTrue) 
</input>
<realizations>
<string>it is already the case</string>
</realizations>
</utterance>


<!-- Simple greetings with overall structure-->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>greeting)
-->
@d1:dvp(c-goal  ^ /SpeechAct\greeting)
</input>
<realizations>
<string>hi</string>
<string>hello</string>
<string>hi there</string>
</realizations>
</utterance>



<!-- Transitivity: Ascription -->

<!-- new version -->
<!-- quality-properties -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:quality ^ blue))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Color\(b3:quality ^ blue))) 
</input>
<realizations>
<string>a box is blue</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Size>(b3:quality ^ big))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Size\(b3:quality ^ big))) 
</input>
<realizations>
<string>a box is big</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Shape>(b3:quality ^ tall))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Shape\(b3:quality ^ tall))) 
</input>
<realizations>
<string>a box is tall</string>
</realizations>
</utterance>


<!-- relational properties -->

<!-- general location -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Location>(b3:m-location ^ somewhere))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Location\(b3:m-location ^ somewhere))  )
</input>
<realizations>
<string>a box is somewhere</string>
</realizations>
</utterance>

<!-- general type-property -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ room)  ^ <Type>(b3:entity ^ kitchen))  )
-->
@D1:dvp(c-goal  ^ /SpeechAct\assertion  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ room)  ^ /Type\(b3:entity ^ kitchen))  )
</input>
<realizations>
<string>a room is a kitchen</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Attitude>(b3:quality ^ nice))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Type\(b3:quality ^ nice))  )
</input>
<realizations>
<string>a box is nice </string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <TopIn>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /TopIn\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is in a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:person ^ GJ)  ^ <TopIn>(b3:entity ^ kitchen)) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:person ^ GJ)  ^ /TopIn\(b3:entity ^ kitchen)) 
</input>
<realizations>
<string>GJ is in a kitchen</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:animate ^ I)  ^ <TopIn>(b3:entity ^ kitchen)) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:animate ^ I)  ^ /TopIn\(b3:entity ^ kitchen)) 
</input>
<realizations>
<string>GJ is in a kitchen</string>
</realizations>
</utterance>

<!-- ultimately desired version: -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:animate ^ speaker)  ^ <TopIn>(b3:entity ^ kitchen)) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:animate ^ speaker)  ^ /TopIn\(b3:entity ^ kitchen)) 
</input>
<realizations>
<string>GJ is in a kitchen</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <TopOn>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /TopOn\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is on a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <NearTo>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /NearTo\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is near a box</string>
<string>a ball is near to a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <FarFrom>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /FarFrom\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is far from a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <NextTo>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /NextTo\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is next to a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <LeftOf>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /LeftOf\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is left of a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <RightOf>(b3:entity ^ box))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /RightOf\(b3:entity ^ box))) 
</input>
<realizations>
<string>a ball is right of a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <Owner>(b3:entity ^ robot)))  
*** not working ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /Owner\(b3:entity ^ robot))) 
</input>
<realizations>
<string>a box is a robot 's</string>
<string>belongs to a robot</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <Owner>(b3:person ^ GJ)))
*** not working ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /Owner\(b3:person ^ GJ)))  
</input>
<realizations>
<string>a box is GJ 's</string>
<string>belongs to GJ</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <FarFrom>(b3:entity ^ box ^ <InfoStatus>familiar)))
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /FarFrom\(b3:entity ^ box ^ /InfoStatus\familiar)))
</input>
<realizations>
<string>a ball is far from the box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball ^ <InfoStatus>familiar)  ^ <FarFrom>(b3:entity ^ box))) 
*** with familiar Target it does not work: scope-replacement does not happen ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball ^ /InfoStatus\familiar)  ^ /FarFrom\(b3:entity ^ box))) 
</input>
<realizations>
<string>the ball is far from a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <InfoStatus>familiar)  ^ <Shape>(b3:quality ^ big))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box ^ /InfoStatus\familiar)  ^ /Shape\(b3:quality ^ big))) 
</input>
<realizations>
<string>the box is big</string>
</realizations>
</utterance>


<!-- ascription yes/no questions -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:quality ^ big))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Color\(b3:quality ^ big))) 
</input>
<realizations>
<string>is a box big</string>
</realizations>
</utterance>

<!-- general location -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Location>(b3:m-location ^ somewhere))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Location\(b3:m-location ^ somewhere))  )
</input>
<realizations>
<string>is a box somewhere</string>
</realizations>
</utterance>

<!-- general type-property -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Type>(b3:entity ^ kitchen))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Type\(b3:entity ^ kitchen))  )
</input>
<realizations>
<string>is a box a kitchen</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Attitude>(b3:quality ^ nice))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Attitude\(b3:quality ^ nice))  )
</input>
<realizations>
<string>is a box nice</string>
</realizations>
</utterance>


<!-- Ascription wh-questions -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <Questioned>true)  ^ <Color>(b3:quality ^ blue) ))
*** question target; does not work: scope-replacement does not happen ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box ^ /Questioned\true)  ^ /Color\(b3:quality ^ blue) ))
</input>
<realizations>
<string>which box is blue</string>
<string>which box has blue color</string>
</realizations>
</utterance>


<!-- question property -->
<!-- new --> 

<!-- simple attributes -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:quality ^ color ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Color\(b3:quality ^ color ^ /Questioned\true))  )
</input>
<realizations>
<string>which color is a box</string>
<string>which color does a box have</string>
<string>what color is a box</string>
<string>what color does a box have</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Size>(b3:quality ^ size ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Size\(b3:quality ^ size ^ /Questioned\true))  )
</input>
<realizations>
<string>which size is a box</string>
<string>what size is a box</string>
<string>which size does a box have</string>
<string>what size does a box have</string>
<string>how big is a box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Shape>(b3:quality ^ shape ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Shape\(b3:quality ^ shape ^ /Questioned\true))  )
</input>
<realizations>
<string>which shape is a box</string>
<string>what shape is a box</string>
<string>which shape does a box have</string>
<string>what shape does a box have</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:entity ^ color ^ <Questioned>true ^ <Color>red))  ) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Color\(b3:entity ^ color ^ /Questioned\true ^ /Color\red))  ) 
</input>
<realizations>
<string>which red color is a box</string>
<string>what red color is a box</string>
<string>which red color does a box have</string>
<string>what red color does a box have</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <InfoStatus>familiar)  ^ <Shape>(b3:quality ^ shape ^ <Questioned>true))  )
*** with familiar target also does not work ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box ^ /InfoStatus\familiar)  ^ /Shape\(b3:quality ^ shape ^ /Questioned\true))  )
</input>
<realizations>
<string>which shape is the box</string>
<string>which shape does the box have</string>
<string>what shape is the box</string>
<string>what shape does the box have</string>
</realizations>
</utterance>


<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Shape>(b3:quality ^ <Questioned>true))  )
*** idea to do: simpler input ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Shape\(b3:quality ^ /Questioned\true))  )
</input>
<realizations>
<string>which shape is a box</string>
<string>what shape is a box</string>
<string>which shape does a box have</string>
<string>what shape does a box have</string>
</realizations>
</utterance>


<!-- relational properties -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <TopIn>(b3:entity ^ box ^ <Questioned>true)))
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ ball)  ^ /TopIn\(b3:entity ^ box ^ /Questioned\true)))
</input>
<realizations>
<!-- the grammar cannot generate this --> 
<string>in which box is a ball</string>
<string>in which box is there a ball</string>
</realizations>
</utterance>


<!-- question location -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Location>(b3:m-location ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Location\(b3:m-location ^ /Questioned\true))  )
</input>
<realizations>
<string>where is a box</string>
<string>what is the location of a box</string>
</realizations>
</utterance>

<!-- question general type-property -->
<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ room)  ^ <Type>(b3:entity ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ room)  ^ /Type\(b3:entity ^ <Questioned>true))  )
</input>
<realizations>
<string>what is a room</string> <!-- *** with familiarity, there would be "what is the room"; with proximity there would even be "what is this room" *** -->
<string>what room is this</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity)  ^ <Type>(b3:entity ^ <Questioned>true))  )
*** don't know how to do this now *** -->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity)  ^ /Type\(b3:entity ^ <Questioned>true))  )
</input>
<realizations>
<string>what is this</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Attitude>(b3:quality ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ box)  ^ /Attitude\(b3:quality ^ /Questioned\true))  )
</input>
<realizations>
<string>is a box nice</string>
</realizations>
</utterance>



<!-- ---------- Entities ONLY --------- -->

<!-- Lists with overall structure -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer ^ <Content>(e1:entity(<List>conjunction ^ <First>(b1:physical ^ ball ^ <Size>big) ^ <Next>(b2:physical ^ box ^ <Shape>tall))))
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer ^ /Content\(e1:entity(/List\conjunction ^ /First\(b1:physical ^ ball ^ /Size\big) ^ /Next\(b2:physical ^ box ^ /Shape\tall))))
</input>
<realizations>
<string>a big ball and a tall box</string>
</realizations>
</utterance>



<!-- when adding perception works, add here one with <Modality>vision -->



<!-- =======  OPENING ENGAGEMENTS  ====== -->


<utterance>
<input>
<!--
@d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>help)		
-->
@d1:dvp(c-goal ^ /SpeechAct\gainAttention ^ /AttentionType\help)		
</input>
<realizations>
<string>could you help me please</string>
<string>could you tell me something please</string>
<string>I am sorry but I can not find a book</string>
</realizations>
</utterance>


<utterance>
<input>
<!--
@d1:dvp(c-goal ^ <SpeechAct>greeting)
-->
@d1:dvp(c-goal ^ /SpeechAct\greeting)
</input>
<realizations>
<string>hi</string>
<string>hi there</string>
<string>hello</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>greet)
-->
@d1:dvp(c-goal ^ /SpeechAct\gainAttention ^ /AttentionType\greet)
</input>
<realizations>
<string>hi</string>
<string>hi there</string>
<string>hello</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>close)
-->
@d1:dvp(c-goal ^ /SpeechAct\gainAttention ^ /AttentionType\close)
</input>
<realizations>
<string>bye bye</string>
<string>bye bye and thanks for all the fish</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>kill)
-->
@d1:dvp(c-goal ^ /SpeechAct\gainAttention ^ /AttentionType\kill)
<realizations>
<string>I am sorry but I have to come for you</string>
</realizations>
</utterance>



<!-- ==================================
         GENERAL DEMO UTTERANCES
     ==================================
-->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept)
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\accept)
</input>
<realizations>
<string>ok</string>
<string>yes</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer ^ <AnswerType>agreement)
***to do*** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer ^ /AnswerType\agreement)
</input>
<realizations>
<string>yes</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept ^ <Content>(e1:action-motion ^ go ^ <Actor>(i1:animate ^ I) ^ <Destination>(k1:entity ^ kitchen ^ <InfoStatus>familiar))
***to do*** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\accept ^ /Content\(e1:action-motion ^ go ^ /Actor\(i1:animate ^ I) ^ /Destination\(k1:entity ^ kitchen ^ /InfoStatus\familiar))
<realizations>
<string>ok I will go to the kitchen</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ book ^ <InfoStatus>familiar)  ^ <TopIn>(b3:entity ^ library ^ <InfoStatus>familiar))) 
*** InfoStatus in Target problem *** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ book ^ /InfoStatus\familiar)  ^ /TopIn\(b3:entity ^ library ^ /InfoStatus\familiar)))
</input>
<realizations>
<string>the book is in the library</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ mug ^ <InfoStatus>familiar)  ^ <TopIn>(b3:entity ^ office ^ <Owner>(n1:person ^ Nick))))
*** InfoStatus in Target problem *** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ mug ^ /InfoStatus\familiar)  ^ /TopIn\(b3:entity ^ office ^ /Owner\(n1:person ^ Nick))))
</input>
<realizations>
<string>the mug is in Nick 's office</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:animate ^ I)  ^ <TopIn>(b3:entity ^ lab ^ <Owner>(g1:person ^ GJ)))) 
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ book ^ /InfoStatus\familiar)  ^ /TopIn\(b3:entity ^ library ^ /InfoStatus\familiar))) 
</input>
<realizations>
<string>I am in GJ 's lab</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion ^ <AssertionType>comment  ^  <Content>(e1:possession ^ <Actor>(b2:animate ^ you)  ^ <Patient>(b3:entity ^ kitchen ^ <Quality>nice))) 
*** to do: <Quality>nice *** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /AssertionType\comment  ^  /Content\(e1:possession ^ /Target\(b2:entity ^ book ^ /InfoStatus\familiar)  ^ /TopIn\(b3:entity ^ library ^ /InfoStatus\familiar)))
</input>
<realizations>
<string>you have a nice kitchen</string>
<string>ok you have a nice kitchen</string>
</realizations>
</utterance>


<!-- clarification requests -->

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^ <Relation>clarification ^ <Content>(e1:entity(<List>disjunction ^ <First>(b1:physical ^ ball ^ <Size>big) ^ <Next>(b2:physical ^ box ^ <Shape>tall))))
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^ /Relation\clarification ^ /Content\(e1:entity(/List\disjunction ^ /First\(b1:physical ^ ball ^ /Size\big) ^ /Next\(b2:physical ^ box ^ /Shape\tall))))
</input>
<realizations>
<string>a big ball or a tall box</string>
<string>do you mean a big ball or a tall box</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^ <Relation>clarification ^ <Content>(e1:entity(<List>disjunction ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(b2:physical ^ ball ^ <Color>blue))))
*** problematic because of nominal re-use in Modifier insterted for property -->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^ /Relation\clarification ^ /Content\(e1:entity(/List\disjunction ^ /First\(b1:physical ^ ball ^ /Color\red) ^ /Next\(b2:physical ^ ball ^ /Color\blue))))
</input>
<realizations>
<string>a red ball or a blue ball</string>
	<string>do you mean a red ball or a blue ball</string>
</realizations>
</utterance>


<!-- ==================================
         EXPLORER DEMO UTTERANCES
     ==================================
-->

<utterance>
<input>
<!-- *** to do *** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion ^ /AssertionType\planInform  ^ /Relation\elaborate  ^  /Content\(e1:???))
</input>
<realizations>
<string>i will go and look for it in a library where books are normally found</string>
</realizations>
</utterance>

<utterance>
<input>
<!-- *** to do *** -->
@d1:dvp(c-goal  ^ /SpeechAct\assertion ^ /AssertionType\planInform  ^ /Relation\elaborate  ^  /Content\(e1:???))
</input>
<realizations>
<string>i will go and look for it in the library</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ book ^ <Name>Borland ^ <Unique>true)  ^ <Location>(b3:m-location ^ <Questioned>true))  )
-->
@d1:dvp(c-goal  ^ /SpeechAct\question  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ book ^ /Name\Borland ^ /Unique\true)  ^ /Location\(b3:m-location ^ /Questioned\true))  )
</input>
<realizations>
<string>do you know where the Borland book is</string>
<string>where is the Borland book</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept)
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\accept)
</input>
<realizations>
<string>ok</string>
<string>yes</string>
</realizations>
</utterance>

<utterance>
<input>
<!--
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ book ^ <InfoStatus>familiar)  ^ <TopIn>(b3:entity ^ office ^ <Owner>(n1:person ^ GJ) ^ <NearTo>(m1:entity ^ mug ^ <Name>Starbucks) )))
*** InfoStatus in Target problem *** 
*** really, this is wrong because <NearTo> should be another modif of ascription; but it's the only reading the gammar gives ***
-->
@d1:dvp(c-goal  ^ /SpeechAct\assertion  ^ /Relation\answer  ^  /Content\(e1:ascription ^ /Target\(b2:entity ^ book ^ /InfoStatus\familiar)  ^ /TopIn\(b3:entity ^ office ^ /Owner\(n1:person ^ GJ)  ^ /NearTo\(m1:entity ^ mug ^ /Name\Starbucks) )))
</input>
<realizations>
<string>the book is in GJ 's office near the Starbucks mug</string>
</realizations>
</utterance>


<!-- ==================================
         PLAYMATE DEMO UTTERANCES
     ==================================
-->

<utterance>
<input>
@d1:dvp(c-goal  ^ <SpeechAct>assertion ^ <Relation>answer  ^  <Content>(g1:entity ^ game ^ <Unique>true ^ <Name>color))
@d1:dvp(c-goal  ^ /SpeechAct\assertion ^ /Relation\answer  ^  /Content\(g1:entity ^ game ^ <Unique>true ^ /Name\color))
</input>
<realizations>
<string>the color game</string>
<string>we are playing the color game</string> <!-- *** to do ***
</realizations>
</utterance>


<!-- @d1:dvp(cg ^ <Content>(s1:perception ^ see ^ <Mood>ind ^ <Polarity>neg ^ <Tense>pres ^ <Actor>(i1:person ^ I) ^ <Patient>(c1:thing ^ context ^  <Delimitation>variable ) ^ <Subject>i1:person)) -->

<!-- @d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept ^ <AcknoModality>action) -->

<!-- @d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept ^ <AcknoModality>vision) -->







