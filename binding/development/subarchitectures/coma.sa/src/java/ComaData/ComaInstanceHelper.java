package ComaData;


/**
* ComaData/ComaInstanceHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ComaData.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/

abstract public class ComaInstanceHelper
{
  private static String  _id = "IDL:ComaData/ComaInstance:1.0";

  public static void insert (org.omg.CORBA.Any a, ComaData.ComaInstance that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static ComaData.ComaInstance extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [5];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[0] = new org.omg.CORBA.StructMember (
            "m_namespace",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[1] = new org.omg.CORBA.StructMember (
            "m_sep",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[2] = new org.omg.CORBA.StructMember (
            "m_name",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_sequence_tc (0, _tcOf_members0);
          _members0[3] = new org.omg.CORBA.StructMember (
            "m_mostSpecificConcepts",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_sequence_tc (0, _tcOf_members0);
          _members0[4] = new org.omg.CORBA.StructMember (
            "m_givenNames",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (ComaData.ComaInstanceHelper.id (), "ComaInstance", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static ComaData.ComaInstance read (org.omg.CORBA.portable.InputStream istream)
  {
    ComaData.ComaInstance value = new ComaData.ComaInstance ();
    value.m_namespace = istream.read_string ();
    value.m_sep = istream.read_string ();
    value.m_name = istream.read_string ();
    int _len0 = istream.read_long ();
    value.m_mostSpecificConcepts = new String[_len0];
    for (int _o1 = 0;_o1 < value.m_mostSpecificConcepts.length; ++_o1)
      value.m_mostSpecificConcepts[_o1] = istream.read_string ();
    int _len1 = istream.read_long ();
    value.m_givenNames = new String[_len1];
    for (int _o2 = 0;_o2 < value.m_givenNames.length; ++_o2)
      value.m_givenNames[_o2] = istream.read_string ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, ComaData.ComaInstance value)
  {
    ostream.write_string (value.m_namespace);
    ostream.write_string (value.m_sep);
    ostream.write_string (value.m_name);
    ostream.write_long (value.m_mostSpecificConcepts.length);
    for (int _i0 = 0;_i0 < value.m_mostSpecificConcepts.length; ++_i0)
      ostream.write_string (value.m_mostSpecificConcepts[_i0]);
    ostream.write_long (value.m_givenNames.length);
    for (int _i1 = 0;_i1 < value.m_givenNames.length; ++_i1)
      ostream.write_string (value.m_givenNames[_i1]);
  }

}
