#
# CAST set-up to run nav.sa and coma.sa together in an interactive way
# it allows you to steer the robot via a joystick, 
# and send commands to coma.sa via a text input window.
#

HOST localhost

SUBARCHITECTURE coma.sa
JAVA WM coma.components.ComaWorkingMemory --log true
JAVA TM cast.architecture.subarchitecture.AlwaysPositiveTaskManager
JAVA GD coma.reasoner coma.components.ComaReasoner --onto_file subarchitectures/coma.sa/ontologies/coma_office.owl --onto_ns oe --onto_sep : --reasoner crowl --crowl_cfg subarchitectures/coma.sa/ontologies/crowl.cfg --log true 
JAVA GD coma.fakeevents coma.components.ComaFakeEventGenerator --log true --onto_ns oe --onto_sep : --debug false
JAVA GD coma.navmonitor coma.components.ComaNavgraphMonitor --log true --onto_ns oe --onto_sep :
CPP MG multisatester MultiSATester -nsa coma.sa --log -f subarchitectures/coma.sa/config/msatest1.test --debug

#SUBARCHITECTURE binding.sa
#CPP WM BindingWorkingMemory
#CPP TM AlwaysPositiveTaskManager
#CPP MG nav.tp TranslationProcess --log --debug -S
#
#SUBARCHITECTURE testing.sa
#CPP WM BindingWorkingMemory
#CPP TM AlwaysPositiveTaskManager
#CPP MG multisatester MultiSATester -nsa coma.sa --log -f subarchitectures/coma.sa/config/msatest1.test --debug
