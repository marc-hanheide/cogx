# HOST <hostname> -- default host to run all the components on, not
# required if specified elsewhere
HOST  localhost

# binding subarch
SUBARCHITECTURE binding.subarch localhost

CPP WM BindingWorkingMemory #--log true
CPP TM AlwaysPositiveTaskManager

#CPP GD binding.judge_motivator BindingJudgeMotivator #--log true
CPP GD binding.scorer BindingScorer #--log true -debug true
CPP GD binding.judge BindingJudge #--log true -debug true
CPP GD binding.binder Binder --log true -debug true
CPP GD binding.groups BindingGroupManager #--log true -debug true
CPP GD binding.dot BindingDotViewer #--log true -d ./dotfiles -cand source -bind short
CPP GD binding.state BindingStatusMonitor #--log true -debug true


# SUBARCHITECTURE <subarch name> <default host to be used>
SUBARCHITECTURE vision.subarch #localhost

CPP WM VisualWorkingMemory #--log true
CPP TM AlwaysPositiveTaskManager

#CPP UM video.server VideoServer  -o /dev/video0 --port 50000
CPP UM video.server VideoServer -f "../../data/test.vid.005/image-0.%04d.ppm" -s 0 -e 150 -t 75 --downsample 1 --port 52900
CPP MG change.detector ChangeDetector --videohost localhost --videoport 52900 --log true
CPP MG segmentor Segmentor -s 0.5 -o 0.5 -t 20 -a 600 --videohost localhost --videoport 52900 -w false #-c 2000
#CPP MG feature.extractor FeatureExtractor  --log true
CPP MG vision.bindmonitor VisionBindingMonitor -bsa binding.subarch --log true #--debug true

CPP GD test VisionLrnTester  --log true --test drymon_test #--debug true

CONNECTION Vision::ImageFrame segmentor PULL_FROM video.server
CONNECTION Vision::ImageFrame change.detector PULL_FROM video.server
