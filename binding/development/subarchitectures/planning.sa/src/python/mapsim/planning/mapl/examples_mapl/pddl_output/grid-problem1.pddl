(define (problem pml_prob)
(:domain pml)
(:objects
agt0 - self_agent
n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 - number
obj0 obj1 obj2 obj3 - movable)
(:init
(succ n0 n1)
(succ n1 n2)
(succ n2 n3)
(succ n3 n4)
(succ n4 n5)
(succ n5 n6)
(succ n6 n7)
(succ n7 n8)
(succ n8 n9)
(succ n9 n10)
(timeout agt0 n0)
(occupant n3 n3 obj0)
(k_occupant agt0 n3 n3)
(occupant n2 n1 obj1)
(k_occupant agt0 n2 n1)
(occupant n0 n1 empty)
(k_occupant agt0 n0 n1)
(occupant n1 n0 empty)
(k_occupant agt0 n1 n0)
(occupant n2 n2 empty)
(k_occupant agt0 n2 n2)
(occupant n3 n2 empty)
(k_occupant agt0 n3 n2)
(pos obj3 n0 n0)
(k_pos agt0 obj3)
(occupant n0 n0 obj3)
(k_occupant agt0 n0 n0)
(pos obj1 n2 n1)
(k_pos agt0 obj1)
(occupant n1 n3 empty)
(k_occupant agt0 n1 n3)
(occupant n3 n1 empty)
(k_occupant agt0 n3 n1)
(pos obj0 n3 n3)
(k_pos agt0 obj0)
(occupant n2 n3 empty)
(k_occupant agt0 n2 n3)
(occupant n1 n2 empty)
(k_occupant agt0 n1 n2)
(occupant n1 n1 empty)
(k_occupant agt0 n1 n1)
(occupant n0 n2 empty)
(k_occupant agt0 n0 n2)
(occupant n3 n0 obj2)
(k_occupant agt0 n3 n0)
(pos obj2 n3 n0)
(k_pos agt0 obj2)
(occupant n2 n0 empty)
(k_occupant agt0 n2 n0)
(occupant n0 n3 empty)
(k_occupant agt0 n0 n3))
(:goal (and
(pos obj3 n1 n0)
(occupant n1 n0 obj3)
(occupant n2 n2 obj0)
(pos obj1 n0 n2)
(touching obj2 obj0)
(pos obj0 n2 n2)
(occupant n2 n3 obj2)
(touching obj0 obj2)
(pos obj2 n2 n3)
(occupant n0 n2 obj1)
)))

