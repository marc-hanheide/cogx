question-answer pair
  r2d2 asks anne where coffee is
  but Anne does not know

--> failure, because r2d2 passes and nothing more can happen

korbay:[~/Cosy/code/subarchitectures/planning.sa/src/python/mapsim] % ./mapsim -t domains/coffee/scenarios/ivana/easy005-qa-notK/
Anne has the following goal: (and (has-goal anne true) )
R2D2 has the following goal: (and (k__pos r2d2 coffee) )
 (1) R2D2: request Anne 'tell_val_pos Anne R2D2 living_room coffee'.
MAPSIM terminates unsuccessfully.
Runtime for scenario coffee.ivana.easy005-qa-notK.m1: 0.3 secs.


korbay:[~/Cosy/code/subarchitectures/planning.sa/src/python/mapsim] % ./mapsim -t domains/coffee/scenarios/ivana/easy005-qa-notK/ -r
Anne has the following goal: (and (has-goal anne true) )
R2D2 has the following goal: (and (k__pos r2d2 coffee) )
 (1) R2D2: 'Where is the coffee, Anne?'
MAPSIM terminates unsuccessfully.
Runtime for scenario coffee.ivana.easy005-qa-notK.m1: 0.3 secs.


korbay:[~/Cosy/code/subarchitectures/planning.sa/src/python/mapsim] % ./mapsim -t domains/coffee/scenarios/ivana/easy005-qa-notK/ -d
Creating data directory for 'single-runs' scenario: current_run/coffee/ivana
Anne has the following goal: (and (has-goal anne true) )
R2D2 has the following goal: (and (k__pos r2d2 coffee) )
next state...
MAPSIM is starting a new run for scenario 'coffee.ivana.easy005-qa-notK.m1'.
building new mapl problem
computing perceptions
(Anne) building new mapl problem
(Anne) computing perceptions
(Anne) UE: did not expect (doorstate kitchen_door : closed)
(Anne) FE: expected (doorstate kitchen_door : open), but got ('closed',) 
(Anne) sensing (doorstate kitchen_door = ('closed',))
(R2D2) building new mapl problem
(R2D2) computing perceptions
(R2D2) UE: did not expect (!pos coffee : living_room)
(R2D2) UE: did not expect (doorstate kitchen_door : closed)
(R2D2) negative sensing: remove from domain. now: pos coffee != living_room
(R2D2) sensing (doorstate kitchen_door = ('closed',))

TIME 1:     (coffee.ivana.easy005-qa-notK.m1)
next state...

Next agent: Anne
(Anne) PM before extracting of current_plan():
<>
(Anne) recompute_levels()

(Anne) current plan before virtual-action/serendipity check:
<>
(Anne) building new mapl problem
(Anne) computing perceptions
(Anne) replanning necessary!
(Anne) found NO new plan; agent is going to PASS. Planner output stored in tmp_Anne_planning_007.
(Anne) passes
(Anne) sends command (pass)
Computed command 'pass' for agent Anne

Next agent: R2D2
(R2D2) PM before extracting of current_plan():
<>
(R2D2) recompute_levels()

(R2D2) current plan before virtual-action/serendipity check:
<>
(R2D2) building new mapl problem
(R2D2) computing perceptions
(R2D2) replanning necessary!
(R2D2) 'negotiate_plan r2d2 anne' provides fact '(commited_to_plan anne : true)' for reader 'tell_val_pos anne r2d2 living_room coffee'.
(R2D2) recompute_levels()
(R2D2) found plan in 0.0 secs.  planner output stored in tmp_R2D2_planning_011.
(R2D2) new plan:
<1: (negotiate_plan r2d2 anne)
2: (tell_val_pos anne r2d2 living_room coffee)>
(R2D2) current PM:
<>
(R2D2) desc <plans.RWdescription object at 0x4a6050>
(R2D2) Added link: dummy_root_action env -> negotiate_plan r2d2 anne [(can_talk_to r2d2 anne : true)]
(R2D2) desc <plans.RWdescription object at 0x4a6d90>
(R2D2) Added link: negotiate_plan r2d2 anne -> tell_val_pos anne r2d2 living_room coffee [(commited_to_plan anne : true)]
(R2D2) 'negotiate_plan r2d2 anne' provides fact '(commited_to_plan anne : true)' for reader 'tell_val_pos anne r2d2 living_room coffee'.
(R2D2) Added link: dummy_root_action env -> tell_val_pos anne r2d2 living_room coffee [(pos r2d2 : living_room)]
(R2D2) recompute_levels()
(R2D2) updated PM:
<1: (negotiate_plan r2d2 anne [1,/,/])
2: (tell_val_pos anne r2d2 living_room coffee [1,/,/])>
(R2D2) PM before extracting of current_plan():
<1: (negotiate_plan r2d2 anne [1,/,/])
2: (tell_val_pos anne r2d2 living_room coffee [1,/,/])>
(R2D2) using action negotiate_plan r2d2 anne
(R2D2) using action tell_val_pos anne r2d2 living_room coffee
(R2D2) added link between negotiate_plan r2d2 anne and tell_val_pos anne r2d2 living_room coffee
(R2D2) recompute_levels()

(R2D2) current plan before virtual-action/serendipity check:
<1: (negotiate_plan r2d2 anne)
2: (tell_val_pos anne r2d2 living_room coffee)>
(R2D2) recompute_levels()
(R2D2) sends command (request by R2D2: tell_val_pos anne r2d2 living_room coffee)
Computed command 'request by R2D2: tell_val_pos anne r2d2 living_room coffee' for agent R2D2
Executing command 'request by R2D2: tell_val_pos anne r2d2 living_room coffee' by agent R2D2
Command 'request by R2D2: tell_val_pos anne r2d2 living_room coffee' is a request!
 (1) R2D2: request Anne 'tell_val_pos Anne R2D2 living_room coffee'.
(Anne) Added new TSG sg0: (and
  (k__pos r2d2 coffee)
)
(Anne) building new mapl problem
(R2D2) Added new TSG sg0: (and
  (k__pos r2d2 coffee)
)
(R2D2) building new mapl problem

TIME 2:     (coffee.ivana.easy005-qa-notK.m1)
next state...

Next agent: R2D2
(R2D2) PM before extracting of current_plan():
<1: (negotiate_plan r2d2 anne [1,1,/])
2: (tell_val_pos anne r2d2 living_room coffee [1,/,/])>
(R2D2) using action tell_val_pos anne r2d2 living_room coffee
(R2D2) recompute_levels()

(R2D2) current plan before virtual-action/serendipity check:
<1: (tell_val_pos anne r2d2 living_room coffee)>
(R2D2) replanning necessary!
(R2D2) 'negotiate_plan r2d2 anne' provides fact '(commited_to_plan anne : true)' for reader 'tell_val_pos anne r2d2 living_room coffee'.
(R2D2) 'tell_val_pos anne r2d2 living_room coffee' provides fact '(k__pos r2d2 coffee)' for reader '__achieve_subgoal_sg0 r2d2'.
(R2D2) recompute_levels()
(R2D2) found plan in 0.0 secs.  planner output stored in tmp_R2D2_planning_014.
(R2D2) new plan:
<1: (negotiate_plan r2d2 anne)
2: (tell_val_pos anne r2d2 living_room coffee)
3: (__achieve_subgoal_sg0 r2d2)>
(R2D2) current PM:
<1: (negotiate_plan r2d2 anne [1,1,/])
2: (tell_val_pos anne r2d2 living_room coffee [1,/,/])>
(R2D2) 'negotiate_plan r2d2 anne' writes 'negotiate_plan r2d2 anne*' previously written by '(commited_to_plan anne : true)'
(R2D2) 'negotiate_plan r2d2 anne' provides fact '(commited_to_plan anne : true)' for reader 'tell_val_pos anne r2d2 living_room coffee'.
(R2D2) 'tell_val_pos anne r2d2 living_room coffee' provides fact '(k__pos r2d2 coffee)' for reader '__achieve_subgoal_sg0 r2d2'.
(R2D2) recompute_levels()
(R2D2) updated PM:
<1: (negotiate_plan r2d2 anne* [1,1,/])
2: (negotiate_plan r2d2 anne [2,/,/])
3: (tell_val_pos anne r2d2 living_room coffee [1,/,/])
4: (__achieve_subgoal_sg0 r2d2 [2,/,/])>
(R2D2) PM before extracting of current_plan():
<1: (negotiate_plan r2d2 anne* [1,1,/])
2: (negotiate_plan r2d2 anne [2,/,/])
3: (tell_val_pos anne r2d2 living_room coffee [1,/,/])
4: (__achieve_subgoal_sg0 r2d2 [2,/,/])>
(R2D2) using action negotiate_plan r2d2 anne
(R2D2) using action __achieve_subgoal_sg0 r2d2
(R2D2) using action tell_val_pos anne r2d2 living_room coffee
(R2D2) added link between negotiate_plan r2d2 anne and tell_val_pos anne r2d2 living_room coffee
(R2D2) added link between tell_val_pos anne r2d2 living_room coffee and __achieve_subgoal_sg0 r2d2
(R2D2) recompute_levels()

(R2D2) current plan before virtual-action/serendipity check:
<1: (negotiate_plan r2d2 anne)
2: (tell_val_pos anne r2d2 living_room coffee)
3: (__achieve_subgoal_sg0 r2d2)>
(R2D2) passes
(R2D2) sends command (pass)
Computed command 'pass' for agent R2D2

Next agent: Anne
(Anne) PM before extracting of current_plan():
<>
(Anne) recompute_levels()

(Anne) current plan before virtual-action/serendipity check:
<>
(Anne) replanning necessary!
(Anne) found NO new plan; agent is going to PASS. Planner output stored in tmp_Anne_planning_017.
(Anne) passes
(Anne) sends command (pass)
Computed command 'pass' for agent Anne
MAPSIM will stop now: No agent is acting anymore!.
MAPSIM terminates unsuccessfully.
Runtime for scenario coffee.ivana.easy005-qa-notK.m1: 0.3 secs.


Writing statistics of this run to coffee.ivana.easy005-qa-notK.m1.stat.
dump stats:
centrally_solvable False
commands 1
commands_executed 1
duration 0.25
num_agents 2
passed 3
planning_time 0.05
planning_time_avg 0.01
plans 4
plans_kept 0
solved False
sys_actions_calls 5
sys_actions_max_duration 0.02
sys_actions_timeouts 0
sys_actions_total_duration 0.05
sys_monitor_calls 4
sys_monitor_max_duration 0.05
sys_monitor_timeouts 0
sys_monitor_total_duration 0.15
sys_planning_calls 4
sys_planning_max_duration 0.03
sys_planning_timeouts 0
sys_planning_total_duration 0.05
sys_total_calls 13
sys_total_max_duration 0.05
sys_total_timeouts 0
sys_total_total_duration 0.25
time 2
timeouts 0
end dump stats
MAIN LOOP: 0 solved, 1 unsolved yet.

Overall statistics for test suite 'single-runs':
coffee.ivana.easy005-qa-notK.m1 was unsolved.
korbay:[~/Cosy/code/subarchitectures/planning.sa/src/python/mapsim] % 
