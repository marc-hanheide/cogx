package cast.cdl;


/**
* cast/cdl/WorkingMemoryChangeFilter.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CAST.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/

public final class WorkingMemoryChangeFilter implements org.omg.CORBA.portable.IDLEntity
{

  /**
         * 
         */
  public cast.cdl.WorkingMemoryOperation m_operation = null;

  /**
         * Source of change. If not "" then adhered to.
         */
  public String m_src = null;

  /**
         * If either of these are not "" then the filter will adhere to
         * them.
         */
  public cast.cdl.WorkingMemoryAddress m_address = null;
  public String m_type = null;

  /**
         * Whether this filter should only accept changes from local
         * sources.
         */
  public cast.cdl.FilterRestriction m_restriction = null;

  /**
         * What to do with this filter object.
         */
  public cast.cdl.WorkingMemoryOperation m_filterChange = null;

  /**
         * The component that originally created the change. Used to
         * distinguish otherwise identical filters when aggregated.
         */
  public String m_origin = null;

  public WorkingMemoryChangeFilter ()
  {
  } // ctor

  public WorkingMemoryChangeFilter (cast.cdl.WorkingMemoryOperation _m_operation, String _m_src, cast.cdl.WorkingMemoryAddress _m_address, String _m_type, cast.cdl.FilterRestriction _m_restriction, cast.cdl.WorkingMemoryOperation _m_filterChange, String _m_origin)
  {
    m_operation = _m_operation;
    m_src = _m_src;
    m_address = _m_address;
    m_type = _m_type;
    m_restriction = _m_restriction;
    m_filterChange = _m_filterChange;
    m_origin = _m_origin;
  } // ctor

} // class WorkingMemoryChangeFilter
