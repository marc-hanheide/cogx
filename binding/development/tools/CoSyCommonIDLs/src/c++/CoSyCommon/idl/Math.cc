// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "Math.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
Math::Vector2D::operator>>= (cdrStream &_n) const
{
  m_x >>= _n;
  m_y >>= _n;

}

void
Math::Vector2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Float&)m_x <<= _n;
  (::CORBA::Float&)m_y <<= _n;

}

void
Math::Vector3D::operator>>= (cdrStream &_n) const
{
  m_x >>= _n;
  m_y >>= _n;
  m_z >>= _n;

}

void
Math::Vector3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Float&)m_x <<= _n;
  (::CORBA::Float&)m_y <<= _n;
  (::CORBA::Float&)m_z <<= _n;

}

void
Math::Vector3DWithConfidence::operator>>= (cdrStream &_n) const
{
  (const Vector3D&) m_vector >>= _n;
  m_confidence >>= _n;

}

void
Math::Vector3DWithConfidence::operator<<= (cdrStream &_n)
{
  (Vector3D&)m_vector <<= _n;
  (::CORBA::Float&)m_confidence <<= _n;

}

void
Math::Pose3D::operator>>= (cdrStream &_n) const
{
  (const Vector3D&) m_position >>= _n;
  (const Vector3D&) m_orientation >>= _n;

}

void
Math::Pose3D::operator<<= (cdrStream &_n)
{
  (Vector3D&)m_position <<= _n;
  (Vector3D&)m_orientation <<= _n;

}

