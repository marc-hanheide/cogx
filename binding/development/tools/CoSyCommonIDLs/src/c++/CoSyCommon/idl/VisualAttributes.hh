// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __VisualAttributes_hh__
#define __VisualAttributes_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE VisualAttributes

_CORBA_MODULE_BEG

  enum Colour { RED, ORANGE, YELLOW, GREEN, BLUE, INDIGO, VIOLET, PINK, BLACK, WHITE, BROWN, GREY, PURPLE, UNKNOWN_COLOUR /*, __max_Colour=0xffffffff */ };
  typedef Colour& Colour_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Colour;

  struct ColourWithConfidence {
    typedef _CORBA_ConstrType_Fix_Var<ColourWithConfidence> _var_type;

    
    Colour m_colour;

    ::CORBA::Float m_confidence;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef ColourWithConfidence::_var_type ColourWithConfidence_var;

  typedef ColourWithConfidence& ColourWithConfidence_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ColourWithConfidence;

  enum Shape { SQUARE, CUBE, TRIANGLE, PYRAMID, CIRCLE, SPHERE, CYLINDER, UNKNOWN_SHAPE /*, __max_Shape=0xffffffff */ };
  typedef Shape& Shape_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Shape;

  enum Size { TINY, SMALL, BIG, LARGE, HUGE, UNKNOW_SIZE /*, __max_Size=0xffffffff */ };
  typedef Size& Size_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Size;

_CORBA_MODULE_END



_CORBA_MODULE POA_VisualAttributes
_CORBA_MODULE_BEG

_CORBA_MODULE_END



_CORBA_MODULE OBV_VisualAttributes
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

inline void operator >>=(VisualAttributes::Colour _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (VisualAttributes::Colour& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= VisualAttributes::UNKNOWN_COLOUR) {
    _e = (VisualAttributes::Colour) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, VisualAttributes::Colour _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, VisualAttributes::Colour& _s);

extern void operator<<=(::CORBA::Any& _a, const VisualAttributes::ColourWithConfidence& _s);
extern void operator<<=(::CORBA::Any& _a, VisualAttributes::ColourWithConfidence* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, VisualAttributes::ColourWithConfidence*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const VisualAttributes::ColourWithConfidence*& _sp);

inline void operator >>=(VisualAttributes::Shape _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (VisualAttributes::Shape& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= VisualAttributes::UNKNOWN_SHAPE) {
    _e = (VisualAttributes::Shape) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, VisualAttributes::Shape _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, VisualAttributes::Shape& _s);

inline void operator >>=(VisualAttributes::Size _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (VisualAttributes::Size& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= VisualAttributes::UNKNOW_SIZE) {
    _e = (VisualAttributes::Size) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, VisualAttributes::Size _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, VisualAttributes::Size& _s);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_VisualAttributes
#endif

#endif  // __VisualAttributes_hh__

