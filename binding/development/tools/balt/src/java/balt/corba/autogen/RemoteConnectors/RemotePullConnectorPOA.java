package balt.corba.autogen.RemoteConnectors;


/**
* balt/corba/autogen/RemoteConnectors/RemotePullConnectorPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from RemoteConnector.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/

public abstract class RemotePullConnectorPOA extends org.omg.PortableServer.Servant
 implements balt.corba.autogen.RemoteConnectors.RemotePullConnectorOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("pull", new java.lang.Integer (0));
    _methods.put ("registerPullReceiver", new java.lang.Integer (1));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  /**
       * Pull data from the connector.
       *
       * @param _src The ID of the process doing the pulling.
       * @param _query The query attached to the pull.
       */
       case 0:  // RemoteConnectors/RemotePullConnector/pull
       {
         String _src = balt.corba.autogen.FrameworkBasics.FrameworkProcessIDHelper.read (in);
         String _query = balt.corba.autogen.FrameworkData.RemoteFrameworkQueryHelper.read (in);
         org.omg.CORBA.Any $result = null;
         $result = this.pull (_src, _query);
         out = $rh.createReply();
         out.write_any ($result);
         break;
       }


  /**
       * Register a pull receiver process with the connector.
       * 
       * @param _pr The process that receives pulls.
       */
       case 1:  // RemoteConnectors/RemotePullConnector/registerPullReceiver
       {
         balt.corba.autogen.RemoteConnectors.RemotePullReceiver _pr = balt.corba.autogen.RemoteConnectors.RemotePullReceiverHelper.read (in);
         this.registerPullReceiver (_pr);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RemoteConnectors/RemotePullConnector:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RemotePullConnector _this() 
  {
    return RemotePullConnectorHelper.narrow(
    super._this_object());
  }

  public RemotePullConnector _this(org.omg.CORBA.ORB orb) 
  {
    return RemotePullConnectorHelper.narrow(
    super._this_object(orb));
  }


} // class RemotePullConnectorPOA
