%-------------------------------------------------------------------------
% REQUESTS
%-------------------------------------------------------------------------

% show me something X
generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'request'),
	i : int : string_content(IntAddr, subtype, 'non-situated'),
	i : int : string_content(IntAddr, feature, _Feature),
	i : int : string_content(IntAddr, value, Value),

	event : produce_text([show, me, something, Value, please]) / -1.0.

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

% show me another view of X
generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'request'),
	i : int : string_content(IntAddr, subtype, 'another-view'),
	i : int : address_content(IntAddr, about, BeliefAddr),

	? generate : reference_generation(BeliefAddr, yes, no, ObjectRE, []),

	event : produce_text([please, rotate, ObjectRE, for, me]) / -1.0.

%-------------------------------------------------------------------------
% POLAR QUESTIONS
%-------------------------------------------------------------------------

generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'polar'),
	i : int : string_content(IntAddr, feature, Feature),
	i : int : string_content(IntAddr, hypothesis, Hypo),
	i : int : address_content(IntAddr, about, BeliefAddr),

%	? generate : reference_generation(BeliefAddr, Category, Relation, Location),
	? generate : reference_generation(BeliefAddr, yes, no, ObjectRE, [Feature]),
	verbalised_feature_value(Feature, Hypo, pos, VerbalisedHypo),

	event : produce_text([is, ObjectRE, VerbalisedHypo, '?']) / -1.0.

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

verbalised_feature(color, color).
verbalised_feature(shape, shape).
verbalised_feature(objecttype, [kind, of, object]).
verbalised_feature(identity, [kind, of, room]).

%-------------------------------------------------------------------------
% DORA DEFAULT KNOWLEDGE QUESTIONS
%-------------------------------------------------------------------------

% "HGV"
generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'polar'),
	i : int : string_content(IntAddr, subsubtype, 'hgv'),
	i : int : string_content(IntAddr, label, Label),
	i : int : string_content(IntAddr, relation, Relation),
	i : int : address_content(IntAddr, relatedentity, RelatedEntity),
	i : int : address_content(IntAddr, about, _AboutEntity),

	get_rexp_for_related(RelatedEntity, RExp),

	event : produce_text([is, there, a, Label, Relation, RExp, '?']) / -1.0.

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

%get_rexp_for_related(Entity, [the, dummy]).
get_rexp_for_related(Entity, ObjectRE) <-
	? generate : reference_generation(Entity, yes, no, ObjectRE, [roomtype]).

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

% "UBK1"
generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'polar'),
	i : int : string_content(IntAddr, subsubtype, 'ubk-category'),
	i : int : string_content(IntAddr, label, Label),
	i : int : string_content(IntAddr, category, Category),

	plural(Label, LabelPl),
	plural(Category, CategoryPl),

	event : produce_text([are, LabelPl, typically, in, CategoryPl, '?']) / -1.0.

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

% "UBK2"
generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'polar'),
	i : int : string_content(IntAddr, subsubtype, 'ubk-label'),
	i : int : string_content(IntAddr, label, Label),
	i : int : string_content(IntAddr, relation, Relation),
	i : int : string_content(IntAddr, otherlabel, OtherLabel),

	plural(Label, LabelPl),
	plural(OtherLabel, OtherLabelPl),

	event : produce_text([are, LabelPl, typically, Relation, OtherLabelPl, '?']) / -1.0.

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

plural(box, boxes).
plural(book, books).
plural(cerealbox, [cereal, boxes]).
plural(magazine, magazines).
plural(table, tables).
plural(container, containers).

plural(corridor, corridors).
plural(meetingroom, [meeting, rooms]).
plural(office, offices).
plural(kitchen, kitchens).

plural(X, [plural, of, X]) <- unknown_plural(X) / 1.0.

%-------------------------------------------------------------------------
% WH- QUESTIONS
%-------------------------------------------------------------------------

generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'open'),
	i : int : string_content(IntAddr, feature, Feature),
	i : int : address_content(IntAddr, about, BeliefAddr),

	? generate : reference_generation(BeliefAddr, yes, no, ObjectRE, [Feature]),

	verbalised_feature(Feature, VerbalisedFeature),

	event : produce_text([what, VerbalisedFeature, is, ObjectRE, '?']) / -1.0.

%-------------------------------------------------------------------------
% VERIFICATION
%-------------------------------------------------------------------------

generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'verification'),
	i : int : address_content(IntAddr, about, BeliefAddr),
	i : int : address_content(IntAddr, 'verification-of', _IntSetAddr),

	? generate : reference_generation(BeliefAddr, yes, no, _ObjectRE, []),

	event : produce_text([did, you, mean, this, object, '?']) / -1.0.

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

generate : event : from_intention(_Speaker, _Hearer, IntAddr) <-
	i : int : string_content(IntAddr, type, 'question'),
	i : int : string_content(IntAddr, subtype, 'verification'),
	i : int : string_content(IntAddr, description, Description),
	i : int : address_content(IntAddr, about, BeliefAddr),
	i : int : address_content(IntAddr, 'verification-of', _IntSetAddr),

	? generate : reference_generation(BeliefAddr, yes, no, _ObjectRE, []),

	event : produce_text([did, you, mean, the, Description, object, '?']) / -4.0.
