// OBJECT DESCRIPTIONS

(:entity | :thing) ^ <Salient> 
->
##Salient = true.

(:entity | :thing) ^ !<Salient>,
##Salient ^ false
-> 
##Salient = false.


// ==============================================
// DELIMITATION, QUANTIFICATION
// Once delimitation and quantification are set using InfoStatus, this feature is removed. 
// The absence of Salient is required: Salient triggers realization as deictic or pronoun.

(:entity | :thing) ^ <InfoStatus>familiar ^ !<Salient> 
-> 
# ^ <Delimitation>unique.

// We check explicitly that we neither have a salient feature, nor did we ever have one
// (which would have let us to set the Salient global variable). 

(:entity | :thing) ^ !<InfoStatus> ^ !<Salient>,
##Salient ^ false
-> 
# ^ <Delimitation>existential. 

:thing ^ !<InfoStatus> ^ !<Salient> 
-> 
# ^ <Delimitation>existential. 


(:entity | :thing) ^ !<InfoStatus> ^ <Salient>true
->
# ^ <Delimitation>unique.

(:entity | :thing) ^ <InfoStatus>familiar ^ <Salient>true
->
# ^ <Delimitation>unique.


(:entity | :thing) ^ <InfoStatus>familiar ^ !<Salient> 
-> 
# ^ <Quantification>specific.

(:entity | :thing) ^ !<InfoStatus> ^ <Salient>true
->
# ^ <Quantification>specific.

(:entity | :thing) ^ <InfoStatus>familiar ^ <Salient>true
->
# ^ <Quantification>specific.


(:entity | :thing) ^ !<InfoStatus> ^ !<Salient>
-> 
# ^ <Quantification>specific.

(:entity | :thing) ^ <Quantification> ^ <Delimitation> ^ <InfoStatus> 
-> 
# ! <InfoStatus>.

(:entity | :thing) ^ <Quantification> ^ <Delimitation> ^ <Salient> 
-> 
# ! <Salient>.


// ==============================================
// PRONOMINALIZATION, DEICTIC
// An object gets pronominalized if is both familiar and salient, 
// AND WE ARE DEALING WITH AN ASCRIPTION. 
// Both Salient and InfoStatus features are deleted, and the object proposition is replaced.
// An object becomes a deictic if it is only Salient. 

(:entity | :thing) ^ <InfoStatus>familiar ^ <Salient>true ^ !<Num>, 
##ascription ^ true
->
# ^ it,
# ^ <Num>sg, 
# !<InfoStatus>,
# !<Salient>.

(:entity | :thing) ^ #v ^ !<InfoStatus> ^ <Salient>true ^ !<Num>, 
##ascription ^ true
->
# ^ context ^ <Delimitation>unique ^ <Num>sg ^ <Proximity>proximal ^ <Quantification>specific,
# ^ <Num>sg,
# !<Salient>.


(:entity | :thing) ^ #v ^ !<InfoStatus> ^ <Salient>true ^ <Num>,  
##ascription ^ true
->
# ^ context ^ <Delimitation>unique ^ <Num>sg ^ <Proximity>proximal ^ <Quantification>specific,
# !<Salient>.

// ==============================================
// NUMBER
// The number for an entity is as specified, else it defaults to singular. 

(:entity | :thing) ^ !<Num>
->
# ^ <Num>sg.

(:entity | :thing) ^ <Num>#num
->
# ^ <Num>#num.


// ==============================================
// PROPERTIES
// Properties are single features in a proto-LF. A feature is transformed into a Modifier, 
// after which the feature gets deleted. 

(:entity | :thing) ^ <Shape>#v
-> 
# ^ <Modifier>(shape:q-shape ^ #v),
# ! <Shape>. 

(:entity | :thing) ^ <Color>#v 
-> 
# ^ <Modifier>(color:q-color ^ #v),
# ! <Color>. 

(:entity | :thing) ^ <Size>#v
-> 
# ^ <Modifier>(size:q-size ^ #v),
# ! <Size>. 

