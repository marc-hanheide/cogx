(define (domain POMDPRover)
  (:requirements :typing :durative-actions :mapl :adl :fluents :partial-observability)
  (:types rover - agent
          waypoint - place
          store camera mode lander objective rock geology - object)

  (:predicates (at ?x - rover ?y - waypoint) 
               (at_lander ?x - lander ?y - waypoint)
               (can_traverse ?r - rover ?x - waypoint ?y - waypoint)
               (has_spectrometer ?r - rover)
               (has_microscope ?r - rover)
               (has_rat ?r - rover)
               (rat_applied ?r - rock)
               (empty ?s - store)
               (have_rock_analysis ?x - rover ?r - rock)
               (full ?s - store)
               ;; (calibrated ?c - camera ?r - rover) 
               ;; (supports ?c - camera ?m - mode)
               (available ?r - rover)
               (visible ?w - waypoint ?p - waypoint)
               ;; (have_image ?r - rover ?o - objective ?m - mode)
               (communicated_rock_data ?g - geology)
               ;; (communicated_image_data ?o - objective ?m - mode)
               (at_rock ?r - rock ?w - waypoint)
               (visible_from ?o - objective ?w - waypoint)
               (store_of ?s - store ?r - rover)
               ;; (calibration_target ?i - camera ?o - objective)
               ;; (on_board ?i - camera ?r - rover)
               (channel_free ?l - lander)
               (done)
               )

  (:functions (rock_type ?r - rock) - geology)

  (:constants carbonate basalt - geology)
	
  (:durative-action navigate
                    :agent (?x - rover)
                    :parameters (?y - waypoint ?z - waypoint) 
                    :duration (= ?duration 5)
                    :condition (and (over all (can_traverse ?x ?y ?z)) (at start (available ?x)) (at start (at ?x ?y)) 
                                    (over all (visible ?y ?z))
                                    )
                    :effect (and (at start (not (at ?x ?y))) (at end (at ?x ?z))
                                 )
                    )

  (:durative-action sample_rock_spectrometer
                    :agent (?x - rover)
                    :parameters (?r - rock ?s - store ?p - waypoint)
                    :duration (= ?duration 20)
                    :condition (and (over all (at ?x ?p)) (at start (at ?x ?p)) 
                                    (at start (at_rock ?r ?p)) (at start (has_spectrometer ?x)) 
                                    (at start (store_of ?s ?x)) (at start (empty ?s))
                                    )
                    :effect (and (at start (not (empty ?s))) (at end (full ?s)) 
                                 (at end (have_rock_analysis ?x ?r)))
                    )

  (:observe rock_type_spectrometer
            :agent (?x - rover)
            :parameters (?r - rock ?s - store ?p - waypoint)
            :execution (sample_rock_spectrometer ?x ?r ?s ?p)
            :precondition (not (rat_applied ?r))
            :effect (and (when (= (rock_type ?r) carbonate)
                           (probabilistic 0.7 (observed (rock_type ?r) carbonate)
                                          0.3 (observed (rock_type ?r) basalt)))
                         (when (= (rock_type ?r) carbonate)
                           (probabilistic 0.3 (observed (rock_type ?r) carbonate)
                                          0.7 (observed (rock_type ?r) basalt))))
            )

  (:observe rock_type_spectrometer_rat
            :agent (?x - rover)
            :parameters (?r - rock ?s - store ?p - waypoint)
            :execution (sample_rock_spectrometer ?x ?r ?s ?p)
            :precondition (rat_applied ?r)
            :effect (and (when (= (rock_type ?r) carbonate)
                           (probabilistic 0.8 (observed (rock_type ?r) carbonate)
                                          0.2 (observed (rock_type ?r) basalt)))
                         (when (= (rock_type ?r) basalt)
                           (probabilistic 0.2 (observed (rock_type ?r) carbonate)
                                          0.8 (observed (rock_type ?r) basalt))))
        
            )

  (:durative-action sample_rock_microscope
                    :agent (?x - rover)
                    :parameters (?r - rock ?s - store ?p - waypoint)
                    :duration (= ?duration 12)
                    :condition (and (over all (at ?x ?p)) (at start (at ?x ?p)) 
                                    (at start (at_rock ?r ?p)) (at start (has_microscope ?x)) 
                                    (at start (store_of ?s ?x)) (at start (empty ?s))
                                    )
                    :effect (and (at start (not (empty ?s))) (at end (full ?s)) 
                                 (at end (have_rock_analysis ?x ?r)))
                    )

  (:observe rock_type_microscope
            :agent (?x - rover)
            :parameters (?r - rock ?s - store ?p - waypoint)
            :execution (sample_rock_microscope ?x ?r ?s ?p)
            :precondition (not (rat_applied ?r))
            :effect (and (when (= (rock_type ?r) carbonate)
                           (probabilistic 0.6 (observed (rock_type ?r) carbonate)
                                          0.4 (observed (rock_type ?r) basalt)))
                         (when (= (rock_type ?r) carbonate)
                           (probabilistic 0.4 (observed (rock_type ?r) carbonate)
                                          0.6 (observed (rock_type ?r) basalt))))
            )

  (:observe rock_type_microscope_rat
            :agent (?x - rover)
            :parameters (?r - rock ?s - store ?p - waypoint)
            :execution (sample_rock_microscope ?x ?r ?s ?p)
            :precondition (rat_applied ?r)
            :effect (and (when (= (rock_type ?r) carbonate)
                           (probabilistic 0.7 (observed (rock_type ?r) carbonate)
                                          0.3 (observed (rock_type ?r) basalt)))
                         (when (= (rock_type ?r) basalt)
                           (probabilistic 0.3 (observed (rock_type ?r) carbonate)
                                          0.7 (observed (rock_type ?r) basalt))))
            )

  (:durative-action apply_rat
                    :agent (?x - rover)
                    :parameters (?r - rock ?p - waypoint)
                    :duration (= ?duration 25)
                    :condition (and (over all (at ?x ?p)) (over all (at_rock ?r ?p))
                                    (at start (has_rat ?x)))
                    :effect (and (at end (rat_applied ?r)))
                    )

  (:durative-action drop
                    :agent (?x - rover)
                    :parameters (?y - store)
                    :duration (= ?duration 1)
                    :condition (and (at start (store_of ?y ?x)) (at start (full ?y))
                                    )
                    :effect (and (at end (not (full ?y))) (at end (empty ?y))
                                 )
                    )

                                        ;(:durative-action calibrate
                                        ; :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
                                        ; :duration (= ?duration 5)
                                        ; :condition (and (at start (equipped_for_imaging ?r)) (at start (calibration_target ?i ?t)) (over all (at ?r ?w)) (at start (visible_from ?t ?w)) (at start (on_board ?i ?r))
                                        ;		)
                                        ; :effect (at end (calibrated ?i ?r)) 
                                        ;)

                                        ;(:durative-action take_image
                                        ; :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
                                        ; :duration (= ?duration 7)
                                        ; :condition (and (over all (calibrated ?i ?r))
                                        ;			 (at start (on_board ?i ?r))
                                        ;                      (over all (equipped_for_imaging ?r))
                                        ;                      (over all (supports ?i ?m) )
                                        ;			  (over all (visible_from ?o ?p))
                                        ;                      (over all (at ?r ?p))
                                        ;               )
                                        ; :effect (and (at end (have_image ?r ?o ?m)) (at end (not (calibrated ?i ?r)))
                                        ;		)
                                        ;)

  (:durative-action communicate_rock_data
                    :agent (?x - rover)
                    :parameters (?l - lander ?r - rock ?g - geology ?f - waypoint ?t - waypoint)
                    :duration (= ?duration 10)
                    :condition (and (over all (at ?x ?f)) 
                                    (over all (at_lander ?l ?t)) 
                                    (at start (have_rock_analysis ?x ?r)) 
                                    (at start (visible ?f ?t)) 
                                    (at start (available ?x))
                                    (at start (channel_free ?l))
                                    (at start (hyp (rock_type ?r) ?g))
                                    (at start (kval ?x (rock_type ?r)))
                                    )
                    :effect (and (at start (not (available ?x))) 
                                 (at start (not (channel_free ?l))) 
                                 (at end (channel_free ?l))
                                 (at end (communicated_rock_data ?g))
                                 (at end (available ?x))
                                 )
                    )

                                        ;(:durative-action communicate_image_data
                                        ; :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?x - waypoint ?y - waypoint)
                                        ; :duration (= ?duration 15)
                                        ; :condition (and (over all (at ?r ?x)) (over all (at_lander ?l ?y)) (at start (have_image ?r ?o ?m)) 
                                        ;                   (at start (visible ?x ?y)) (at start (available ?r)) (at start (channel_free ?l))
                                        ;            )
                                        ; :effect (and (at start (not (available ?r))) (at start (not (channel_free ?l))) (at end (channel_free ?l)) (at end (communicated_image_data ?o ?m)) (at end (available ?r))
                                        ;          )
                                        ;)

  )
