HOST 127.0.0.1

COMPONENT CPP laser.server LaserServerPlayer --log --player-host localhost #--rand-data
COMPONENT CPP robot.server RobotbaseServerPlayer --log --player-host localhost #--rand-data

SUBARCHITECTURE nav.sa
CPP WM SubarchitectureWorkingMemory  #--log --debug
CPP TM AlwaysPositiveTaskManager
CPP MG trans.process TranslationProcess --log

# Args for SlamProcess
# -c for config file with info about the robot setup
# -m <metric-mapfile> to give name to map to load/save from/to. Will create 
#    new map if does not exist (ie do SLAM) and will load and do localization
#    if it exists. Notice that in both cases it will try to read the variable
#    ROBOTPOSE which is written in the file robotpose.ccf (see subarchitectures/nav.sa/config/cogxp3.ccf for
#    example). The robotpose will help the robot rememeber its position between
#    runs. If you remove the robotpose.ccf file it will start from 0,0,0
#    It is always a good idea to remove the file before doing SLAM, ie make
#    a new map so that you know where 0,0,0 is in the map. This way
#    if you get lost you can always remove robotpose.ccf and put the robot
#    back at the known start position.
#    NOTE: Name must be different from graph map!!!
CPP GD slam.process SlamProcess -c subarchitectures/nav.sa/config/cogxp3.ccf --max-scan-rate 5 #--log #-m tmpmap.metric #--debug 

# Args for NavGraphProcess
# -c for config file
# -m <graph-file> to give name to graph to load/save from/to. Will create new 
#    map if does not exist and will load and extend if extist.
#    NOTE: Name must be different from metric map!!!
CPP GD navgraph.process NavGraphProcess -c subarchitectures/nav.sa/config/cogxp3.ccf  #-m tmpmap.graph #--log --debug

# Args for NavControl
# -c for config file which gives info about the robot shape etc
CPP GD navctrl.process NavControl -c subarchitectures/nav.sa/config/cogxp3.ccf --explore-range 5 --no-x-window --log #--debug

CPP GD objsearch.process ObjectSearch -c subarchitectures/nav.sa/config/cogxp3.ccf --explore-range 5 --log --gridsize 300 --cellsize 0.05 --objects bardak --samplesize 100 --cam-range 2 --display-coverage

#CPP GD display.process DisplayNavInPB --retry-interval 10 -c subarchitectures/nav.sa/config/cogxp3.ccf --log #--debug 

#CPP GD cure.logger CureDataLogger
#CPP GD key.command KeyCommander --fixed-prio CPP
#CPP GD peekabot.control PeekabotControl --retry-interval 10 -c subarchitectures/nav.sa/config/cogxp3.ccf --log #--debug 