(define (domain cogx)

  (:requirements :mapl :adl :object-fluents)
  
  (:types 
   place - object
   robot - agent
   locatable - object
   visualobject robot - locatable
   recordlabel - object
   )
  
  (:predicates
   (connected ?n1 - place ?n2 - place)
   (visited ?loc - place)
   (searched ?loc - place)
   )	
  
  (:functions
   (is-in ?l - locatable) - place
   (label ?l - locatable) - recordlabel
   )

;;; objects ;;;
  (:constants
   record1 record2 record3 record4 - recordlabel
  )
  
;;; actions ;;;

  (:action look-for-objects
	   :agent (?a - robot)
	   :variables (?loc - place)
	   :precondition (and
			  (= (is-in ?a) ?loc)
			  )
	   :effect (and
		    (searched ?loc)
		    ;;;(forall (?l - recordlabel) (exists (?v - visualobject) (=(label ?v) ?l)));;;
		    (update (searched ?loc) true)
		    ))

  (:action move
	   :agent (?a - robot)
	   :parameters (?to - place)
	   :variables (?from - place)
	   :precondition (and
			  (= (is-in ?a) ?from)
			  (or (connected ?from ?to)
			      (connected ?to ?from))
			  )
	   :effect (and
		    (assign (is-in ?a) ?to)
		    (visited ?to)
		    (update (visited ?to) true)
		    ))
  
  )
