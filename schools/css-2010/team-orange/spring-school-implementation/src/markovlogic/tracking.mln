///////////////////////////////
// CONSTANTS
///////////////////////////////

// beliefs
existingunion = {Ut_P,Uq_P,Ux_P,Uo_P}
percept = {P}
belief = {Ut_P,Uq_P,Ux_P,Uo_P,P}

// possible outcomes of the grouping process
outcome = {Ut_P,Uq_P,Ux_P,Uo_P,UH1_P}

// feature values
detectedval = {False,None,Unknown}
is-inval = {None,U2_p,Unknown}
labelval = {None,Unknown,Vchaka,Vheart,Vjames,Vjesus}
typeval = {None,Unknown}
visualobjectidval = {None,Unknown,V0_f,V1_f,V2_f,V3_f,V7_f}

///////////////////////////////
// PREDICATES
///////////////////////////////

Detected(belief,detectedval)
Is-in(belief,is-inval)
Label(belief,labelval)
Type(belief,typeval)
Visualobjectid(belief,visualobjectidval)

Outcome(outcome)
UnifyWith(existingunion)
Existence(belief)

///////////////////////////////
// EXISTING UNIONS
///////////////////////////////

100.0 Existence(Ut_P)
0.0 Existence(Ut_P) ^ Visualobjectid(Ut_P,V2_f)
Existence(Ut_P) => !Visualobjectid(Ut_P,Unknown).
Existence(Ut_P) => !Visualobjectid(Ut_P,V0_f).
Existence(Ut_P) => !Visualobjectid(Ut_P,V1_f).
Existence(Ut_P) => !Visualobjectid(Ut_P,V3_f).
Existence(Ut_P) => !Visualobjectid(Ut_P,V7_f).
Existence(Ut_P) => !Visualobjectid(Ut_P,None).
0.0 Existence(Ut_P) ^ Is-in(Ut_P,U2_p)
Existence(Ut_P) => !Is-in(Ut_P,Unknown).
Existence(Ut_P) => !Is-in(Ut_P,None).
0.0 Existence(Ut_P) ^ Label(Ut_P,Vheart)
Existence(Ut_P) => !Label(Ut_P,Unknown).
Existence(Ut_P) => !Label(Ut_P,Vchaka).
Existence(Ut_P) => !Label(Ut_P,Vjames).
Existence(Ut_P) => !Label(Ut_P,Vjesus).
Existence(Ut_P) => !Label(Ut_P,None).
0.0 Existence(Ut_P) ^ Detected(Ut_P,False)
Existence(Ut_P) => !Detected(Ut_P,Unknown).
Existence(Ut_P) => !Detected(Ut_P,None).
Existence(Ut_P) => !Type(Ut_p,Unknown).
Existence(Ut_P) => Type(Ut_p,None).

100.0 Existence(Uq_P)
0.0 Existence(Uq_P) ^ Visualobjectid(Uq_P,V1_f)
Existence(Uq_P) => !Visualobjectid(Uq_P,Unknown).
Existence(Uq_P) => !Visualobjectid(Uq_P,V0_f).
Existence(Uq_P) => !Visualobjectid(Uq_P,V2_f).
Existence(Uq_P) => !Visualobjectid(Uq_P,V3_f).
Existence(Uq_P) => !Visualobjectid(Uq_P,V7_f).
Existence(Uq_P) => !Visualobjectid(Uq_P,None).
0.0 Existence(Uq_P) ^ Is-in(Uq_P,U2_p)
Existence(Uq_P) => !Is-in(Uq_P,Unknown).
Existence(Uq_P) => !Is-in(Uq_P,None).
0.0 Existence(Uq_P) ^ Label(Uq_P,Vjesus)
Existence(Uq_P) => !Label(Uq_P,Unknown).
Existence(Uq_P) => !Label(Uq_P,Vchaka).
Existence(Uq_P) => !Label(Uq_P,Vheart).
Existence(Uq_P) => !Label(Uq_P,Vjames).
Existence(Uq_P) => !Label(Uq_P,None).
0.0 Existence(Uq_P) ^ Detected(Uq_P,False)
Existence(Uq_P) => !Detected(Uq_P,Unknown).
Existence(Uq_P) => !Detected(Uq_P,None).
Existence(Uq_P) => !Type(Uq_p,Unknown).
Existence(Uq_P) => Type(Uq_p,None).

100.0 Existence(Ux_P)
0.0 Existence(Ux_P) ^ Visualobjectid(Ux_P,V3_f)
Existence(Ux_P) => !Visualobjectid(Ux_P,Unknown).
Existence(Ux_P) => !Visualobjectid(Ux_P,V0_f).
Existence(Ux_P) => !Visualobjectid(Ux_P,V1_f).
Existence(Ux_P) => !Visualobjectid(Ux_P,V2_f).
Existence(Ux_P) => !Visualobjectid(Ux_P,V7_f).
Existence(Ux_P) => !Visualobjectid(Ux_P,None).
0.0 Existence(Ux_P) ^ Is-in(Ux_P,U2_p)
Existence(Ux_P) => !Is-in(Ux_P,Unknown).
Existence(Ux_P) => !Is-in(Ux_P,None).
0.0 Existence(Ux_P) ^ Label(Ux_P,Vchaka)
Existence(Ux_P) => !Label(Ux_P,Unknown).
Existence(Ux_P) => !Label(Ux_P,Vheart).
Existence(Ux_P) => !Label(Ux_P,Vjames).
Existence(Ux_P) => !Label(Ux_P,Vjesus).
Existence(Ux_P) => !Label(Ux_P,None).
0.0 Existence(Ux_P) ^ Detected(Ux_P,False)
Existence(Ux_P) => !Detected(Ux_P,Unknown).
Existence(Ux_P) => !Detected(Ux_P,None).
Existence(Ux_P) => !Type(Ux_p,Unknown).
Existence(Ux_P) => Type(Ux_p,None).

100.0 Existence(Uo_P)
0.0 Existence(Uo_P) ^ Visualobjectid(Uo_P,V0_f)
Existence(Uo_P) => !Visualobjectid(Uo_P,Unknown).
Existence(Uo_P) => !Visualobjectid(Uo_P,V1_f).
Existence(Uo_P) => !Visualobjectid(Uo_P,V2_f).
Existence(Uo_P) => !Visualobjectid(Uo_P,V3_f).
Existence(Uo_P) => !Visualobjectid(Uo_P,V7_f).
Existence(Uo_P) => !Visualobjectid(Uo_P,None).
0.0 Existence(Uo_P) ^ Is-in(Uo_P,U2_p)
Existence(Uo_P) => !Is-in(Uo_P,Unknown).
Existence(Uo_P) => !Is-in(Uo_P,None).
0.0 Existence(Uo_P) ^ Label(Uo_P,Vjames)
Existence(Uo_P) => !Label(Uo_P,Unknown).
Existence(Uo_P) => !Label(Uo_P,Vchaka).
Existence(Uo_P) => !Label(Uo_P,Vheart).
Existence(Uo_P) => !Label(Uo_P,Vjesus).
Existence(Uo_P) => !Label(Uo_P,None).
0.0 Existence(Uo_P) ^ Detected(Uo_P,False)
Existence(Uo_P) => !Detected(Uo_P,Unknown).
Existence(Uo_P) => !Detected(Uo_P,None).
Existence(Uo_P) => !Type(Uo_p,Unknown).
Existence(Uo_P) => Type(Uo_p,None).

///////////////////////////////
// NEW PERCEPT
///////////////////////////////

100.0 Existence(P)
0.0 Existence(P) ^ Is-in(P,U2_p)
Existence(P) => !Is-in(P,Unknown).
Existence(P) => !Is-in(P,None).
0.0 Existence(P) ^ Visualobjectid(P,V7_f)
Existence(P) => !Visualobjectid(P,Unknown).
Existence(P) => !Visualobjectid(P,V0_f).
Existence(P) => !Visualobjectid(P,V1_f).
Existence(P) => !Visualobjectid(P,V2_f).
Existence(P) => !Visualobjectid(P,V3_f).
Existence(P) => !Visualobjectid(P,None).
0.0 Existence(P) ^ Label(P,Vchaka)
Existence(P) => !Label(P,Unknown).
Existence(P) => !Label(P,Vheart).
Existence(P) => !Label(P,Vjames).
Existence(P) => !Label(P,Vjesus).
Existence(P) => !Label(P,None).
0.0 Existence(P) ^ Detected(P,False)
Existence(P) => !Detected(P,Unknown).
Existence(P) => !Detected(P,None).
Existence(P) => !Type(P,Unknown).
Existence(P) => Type(P,None).

///////////////////////////////
// FEATURE VALUE CONSTRAINTS
///////////////////////////////

// rules for existence dependency
!Existence(x) => y=None v !Detected(x,y).
!Existence(x) => Detected(x,None).
!Existence(x) => y=None v !Is-in(x,y).
!Existence(x) => Is-in(x,None).
!Existence(x) => y=None v !Label(x,y).
!Existence(x) => Label(x,None).
!Existence(x) => y=None v !Type(x,y).
!Existence(x) => Type(x,None).
!Existence(x) => y=None v !Visualobjectid(x,y).
!Existence(x) => Visualobjectid(x,None).

// mutual exclusivity and unicity constraints
Detected(x,y) ^ Detected(x,z) => y=z.
EXIST y Detected(x,y).
Is-in(x,y) ^ Is-in(x,z) => y=z.
EXIST y Is-in(x,y).
Label(x,y) ^ Label(x,z) => y=z.
EXIST y Label(x,y).
Type(x,y) ^ Type(x,z) => y=z.
EXIST y Type(x,y).
Visualobjectid(x,y) ^ Visualobjectid(x,z) => y=z.
EXIST y Visualobjectid(x,y).


///////////////////////////////
// SIMILARITIES
///////////////////////////////

// general correlations

//100 Existence(x) ^ Existence(P) ^ Is-in(x,y) ^ Is-in(P,y) ^ y!=Unknown ^ y!=None => UnifyWith(x)
//100 UnifyWith(x) ^ Is-in(x,y) ^ Is-in(P,z) => y=z
//UnifyWith(x) ^ Is-in(x,y) => y!=Unknown. 
//UnifyWith(x) ^ Is-in(x,y) => y!=None. 

100 Existence(x) ^ Existence(P) ^ Label(x,y) ^ Label(P,y) ^ y!=Unknown ^ y!=None => UnifyWith(x)
100 UnifyWith(x) ^ Label(x,y) ^ Label(P,z) => y=z
UnifyWith(x) ^ Label(x,y) => y!=Unknown. 
UnifyWith(x) ^ Label(x,y) => y!=None. 

UnifyWith(x) => Existence(x) ^ Existence(P).

///////////////////////////////
// FINAL OUTCOME
///////////////////////////////

-3.5 Existence(P) => Outcome(UH1_P)
UnifyWith(Uo_P) <=> Outcome(Uo_P).
UnifyWith(Uq_P) <=> Outcome(Uq_P).
UnifyWith(Ut_P) <=> Outcome(Ut_P).
UnifyWith(Ux_P) <=> Outcome(Ux_P).
-1.0 Outcome(x)
Outcome(x) ^ Outcome(y) => x=y.
Exist x Outcome(x).

