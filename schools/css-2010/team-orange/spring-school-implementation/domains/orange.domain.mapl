(define (domain cogx)

(:requirements :mapl :adl :object-fluents)
	
(:types 
	place - object
	robot - agent
	robot - movable
)
	
;;; ======================================================================================
;;; PREDICATES
;;; ----------
;;; connected:	asserts that there is a directed connected from place ?n1 to place ?n2
;;; ======================================================================================

(:predicates
	(connected ?n1 - place ?n2 - place)
)	
;;; ======================================================================================
;;; FUNCTIONS
;;; functions can be updated, and as such yield a belief in the belief model on the binder
;;; ------------
;;; is-in:	records the robot's current position (place)
;;; visited: 	records whether a place has been visited (boolean)
;;; ======================================================================================

(:functions
	(is-in ?r - robot) - place
	(visited ?p - place) - boolean 	
)

;;; ======================================================================================	
;;; ACTIONS
;;; ------------
;;; move:	takes the robot from a place (?from) to a given goal place (?to), marking 
;;; 		the goal place as visited. visited is assigned true, and updated to true.
;;; ======================================================================================	


(:action move
	 :agent		(?a - robot)
	 :parameters 	(?to - place)
	 :variables 	(?from - place)
	 :precondition 	(and
			(= (is-in ?a) ?from)
			(or (connected ?from ?to)
			(connected ?to ?from))
			)
	 :effect 	(and
			(assign (is-in ?a) ?to)
			(assign (visited ?to) true)
			(update (visited ?to) true)
			)
) ;;; end move











) ;;; end domain
