
HOST localhost

COMPONENT CPP ptz.server PlayerPTZServer --ptz-device 0

SUBARCHITECTURE visualization.sa 
CPP WM SubarchitectureWorkingMemory
CPP TM AlwaysPositiveTaskManager
CPP MG display.srv DisplayServer

SUBARCHITECTURE vision.sa 
JAVA WM cast.architecture.SubarchitectureWorkingMemory
CPP TM AlwaysPositiveTaskManager

CPP MG VideoServer OpenCvLiveServer --camids "0" --devnums "0" --camconfigs "instantiations/css2011/calibration/example-cam-left-cal.xml"
#CPP MG VideoServer OpenCvImgSeqServer --camids "0" --files "tmp/2011-04-27-Kinect-Stereo-Calib/img000-K.jpg" --start 0 --end 0  --framerate_ms 500 --camconfigs "tmp/2011-04-21-Kinect-Stereo-Calib/cam-kinect-cal.xml"
#CPP MG VideoServer PlayerVideoServer --camids "0" --devnums "0" --imgsize "640 480" --framerate_fps 3 --camconfigs "instantiations/css2011/calibration/cam-left-cal-sim.xml"

# This is how you should use CameraMount in your real robot system. 
# Use PTZ with kinematic parameters the same as in gazebo model, but also provide fixed poses.
# If the PTZ is at the fixed pan/tilt position, camera mount will output the fixed camera poses
# Otherwise camera poses will be calculated based on the kinematic chain
# base - pan joint - tilt joint - cam offset.
CPP MG CameraMount CameraMount --camids "0" --fixed_cam_poses_xml "instantiations/css2011/calibration/example-cam-left-pose.xml" --fixed_pan_tilt "0 -0.785398175" --cam_poses_xml instantiations/css2011/calibration/ptu-pose-cam-left-sim.xml --pt_base_xml instantiations/css2011/calibration/ptu-pose-base-sim.xml --pt_pan_xml instantiations/css2011/calibration/ptu-pose-pan-sim.xml --pt_tilt_xml instantiations/css2011/calibration/ptu-pose-tilt-sim.xml

CPP MG checksystemcalibration CheckSystemCalibration --videoname VideoServer --cam_ids 0 --displayserver "display.srv"

# use the PTZ GUI to move the pan tilt to the fixed position for which the cameras were calibrated, as given
# above in --fixed_pan_tilt and --fixed_cam_poses_xml
JAVA MG ptzServer ptz.ptzServer.PanTiltZoomServer --testGUI

