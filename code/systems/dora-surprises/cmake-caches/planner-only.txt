# This is a CMake initial cache file, generated by freezecmake.
# Use:
#  mkdir BUILD
#  cd BUILD
#  ccmake -C <path/to/thisfile>  ..
# Note: -C works only if BUILD/CMakeCache.txt doesn't exist.
#
# Alternatively you can use tools/scripts/cmake-apply which
# also works with an existing CMakeCache.txt.
set(BUILD_ABDUCER OFF CACHE BOOL "Build abducer")
set(BUILD_AVS OFF CACHE BOOL "NO")
set(BUILD_AVS_PLANNER OFF CACHE BOOL "NO")
set(BUILD_BELIEFS ON CACHE BOOL "Build beliefs")
set(BUILD_DORA OFF CACHE BOOL "Build dora specific code")
set(BUILD_GEORGE OFF CACHE BOOL "Build george specific code")
set(BUILD_HAL_BLOBFINDER ON CACHE BOOL "Build hardware blobfinder")
set(BUILD_HAL_BLOBFINDER_PLAYER ON CACHE BOOL "Build hardware ptz: player version")
set(BUILD_HAL_KINECT OFF CACHE BOOL "Build hardware kinect")
set(BUILD_HAL_LASER ON CACHE BOOL "Build hardware laser")
set(BUILD_HAL_LASER_TESTS OFF CACHE BOOL "Build hardware laser tests")
set(BUILD_HAL_POINT_CLOUD ON CACHE BOOL "Build point cloud server/client")
set(BUILD_HAL_PTZ ON CACHE BOOL "Build hardware ptz")
set(BUILD_HAL_PTZ_PLAYER ON CACHE BOOL "Build hardware ptz: player version")
set(BUILD_HAL_ROBOT ON CACHE BOOL "Build hardware robotbase")
set(BUILD_HAL_ROBOT_TESTS OFF CACHE BOOL "Build hardware robot tests")
set(BUILD_HAL_STEREO OFF CACHE BOOL "")
set(BUILD_HAL_STEREO_GPU OFF CACHE BOOL "Build the GPU Library for Stereo Server")
set(BUILD_HAL_TESTS OFF CACHE BOOL "Build hardware tests")
set(BUILD_HAL_TTS OFF CACHE BOOL "Build hardware tts")
set(BUILD_HAL_UTILS ON CACHE BOOL "Build hardware utils")
set(BUILD_HAL_VIDEO ON CACHE BOOL "Build hardware video")
set(BUILD_HAL_VIDEO_IMG_SEQ ON CACHE BOOL "Build image sequence video server")
set(BUILD_HAL_VIDEO_IMG_SEQ_UI OFF CACHE BOOL "Build UI for image sequence server (requires Visualization SA)")
set(BUILD_HAL_VIDEO_LIVE ON CACHE BOOL "Build live video server")
set(BUILD_HAL_VIDEO_PLAYER OFF CACHE BOOL "Build Player video server")
set(BUILD_HAL_VIDEO_POINTGREY OFF CACHE BOOL "Build Point Grey video server")
set(BUILD_HAL_VIDEO_PROSILICA OFF CACHE BOOL "Build Prosilica video server")
set(BUILD_MULTI_TESTER OFF CACHE BOOL "Build multi-sa tester")
set(BUILD_PYTHON_COMPONENTS ON CACHE BOOL "Build Python Ice Interfaces and Components")
set(BUILD_ROCS OFF CACHE BOOL "Build the internal version of the ROCS library.")
set(BUILD_SA_BINDING ON CACHE BOOL "Build binder subarchitecure")
set(BUILD_SA_CATEGORICAL OFF CACHE BOOL "Build categorical subarchitecure")
set(BUILD_SA_COMA OFF CACHE BOOL "Build sa_coma specific code")
set(BUILD_SA_CONCEPTUAL OFF CACHE BOOL "Build conceptual subarchitecure")
set(BUILD_SA_DEFAULT OFF CACHE BOOL "Build default subarchitecure")
set(BUILD_SA_DIALOGUE OFF CACHE BOOL "Build dialogue subarchitecure")
set(BUILD_SA_EXECUTION OFF CACHE BOOL "Build execution subarchitecure")
set(BUILD_SA_FAKE_MOTIVATION ON CACHE BOOL "Build fake motivation subarchitecure")
set(BUILD_SA_MOTIVATION OFF CACHE BOOL "Build motivation subarchitecure")
set(BUILD_SA_PLANNER ON CACHE BOOL "Build planner subarchitecure")
set(BUILD_SA_PLANNER_BNET OFF CACHE BOOL "Build bayesian network evaluator")
set(BUILD_SA_PLANNER_DOWNWARD ON CACHE BOOL "Build fast downward planner in planner.sa")
set(BUILD_SA_PLANNER_DT ON CACHE BOOL "Build DT planner in planner.sa")
set(BUILD_SA_PLANNER_FF OFF CACHE BOOL "Build FF planner in planner.sa")
set(BUILD_SA_PLANNER_PROB_DOWNWARD ON CACHE BOOL "Build probabillistic fast downward planner in planner.sa")
set(BUILD_SA_PLANNER_TFD OFF CACHE BOOL "Build TFD planner in planner.sa")
set(BUILD_SA_SPATIAL OFF CACHE BOOL "Build spatial subarchitecure")
set(BUILD_SA_V11N ON CACHE BOOL "Build visualization libraries (Requires QT4)")
set(BUILD_SA_V11N_AUTOGEN_ONLY OFF CACHE BOOL "ONLY build autogen parts of V11N")
set(BUILD_SA_V11N_CLIENT ON CACHE BOOL "Build the visualisation display client library")
set(BUILD_SA_V11N_CLIENT_FILE_MONITOR ON CACHE BOOL "Build file monitor visualisation client")
set(BUILD_SA_V11N_DEBUG_TRACE OFF CACHE BOOL "Output a lot of debugging information")
set(BUILD_SA_V11N_SERVER ON CACHE BOOL "Build the visualisation display server")
set(BUILD_SA_V11N_STANDALONE ON CACHE BOOL "Build the standalone display server for V11N")
set(BUILD_SA_V11N_TESTS OFF CACHE BOOL "Build the test component for V11N (requires the client library)")
set(BUILD_SA_V11N_USE_LUAGL ON CACHE BOOL "Build with LuaGl script support (requres lua51 and tolua++51)")
set(BUILD_SA_V11N_USE_TOMGINE OFF CACHE BOOL "Build with support for TomGine models (requires vision.sa)")
set(BUILD_SA_V11N_USE_WEBKIT ON CACHE BOOL "Build with HTML support (Qt-WebKit)")
set(BUILD_SA_V11N_USE_WEBKIT_PLUGINS ON CACHE BOOL "Enable plugins in HTML pages (Qt-WebKit)")
set(BUILD_SA_VISION OFF CACHE BOOL "Build vision subarchitecure")
set(BUILD_SCENARIO_SHARED ON CACHE BOOL "Build shared scenario code")
set(LIBBUILD_CUDASIFT OFF CACHE BOOL "Build CudaSift library")
set(LIBBUILD_LEVMAR_HOMEST OFF CACHE BOOL "Build homest & levmar libraries required by the 3D shape detector")
set(LIBBUILD_PYTHON_VISION OFF CACHE BOOL "Build Python interfaces for some of the libs used by vision.sa")
set(LIBBUILD_SIFTGPU OFF CACHE BOOL "Build SiftGPU library")
set(LIBBUILD_SIFTGPU_WITH_CUDA OFF CACHE BOOL "Build SiftGPU library with CUDA support")
