# CAST config file

# The default HOSTNAMEs are defined in dora-hosts.incl and are all set to localhost.
INCLUDE dora-hosts.incl

###########################################################################
#             DEFAULT CONFIGURATION                                       #
###########################################################################
# real, simulation, or none (e.g. just loading the map)
VARDEFAULT hardware=simulation
#SETVAR hardware=real
#SETVAR hardware=none

###########################################################################
# the following define the features we want to have enabled in the system #
# (comments in multiline blocks can only be at the start of the line)     #
# Override using SETVAR (Note: any line not present in the SETVAR     	  #
# statement will be set to False, NOT to the default value!		            #
###########################################################################

VARDEFAULT feature_options=<multiline>
# enable the spatial core
    spatial
# enable all mediators in the cores enabled and the binding working memory
    binder
# enable the vision core, object recognition (depending on the hardware setting)
    vision
# use peekabot
    peekabot
# enable manual GUIs for navigation, PTZ, planning, etc.
    man_ctrl
# enable AVS view cone planning and relation manager
    avs
# enable execution framework to let the planner trigger actions
    execution
# enable conceptual framework
    conceptual
# enable default
    default
# enable coma
    coma
# enable place categorisation
    categorisation
# use visual categorisation
    !categorisation-visual
# use size categorisation
    !categorisation-size
# if enabled, place properties will be saved and loaded
    place-property-persistence
# if enabled, categorical will save a data stream to file
    !datasaving
# if enabled, images will also be saved
    !datasaving-visual
# get automated exploration until there are no more placeholders, that is much
# fast than the full-fledged planner
    !simple_placeholder_exploration
# enable planning core
    planning_sa
# enable more debug GUIs and WM loggers
    debug
# enable dialogue
    dialogue
# enable motivation base
    motivation
# enable motivation via external goal infusion
    !motivation_external
# enable motivation via explanation
    !motivation_explanation
# enable visualisation (see debug)
    visualization
</multiline>

IFEQ(%(hardware),real)
  VARDEFAULT hardware_options=<multiline>
# use the kinect point cloud server for obstacle avoidance and person detection
    kinect
# use the kinect as video source for object recognition
    kinect-video
# use OpenCV cameras as video source for object recognition
    !video
# use the Prosilica camera
    !prosilica
# use blobfinder to simulate object and person detection
    !blobfinder
# use ptz (starts different components depending on %(hardware)
    ptz
  </multiline>
ELSE 
IFEQ(%(hardware),simulation)
  VARDEFAULT hardware_options=<multiline>
    !kinect
    !kinect-video
    !video
    !prosilica
    blobfinder
    ptz
  </multiline>
ELSE # none
  VARDEFAULT hardware_options=<multiline>
    !kinect
    !kinect-video
    !video
    !prosilica
    !blobfinder
    !ptz
  </multiline>
ENDIF
ENDIF

VARDEFAULT host:PlayerHost=localhost
###########################################################################

###########################################################################
### hardware    ###########################################################
###########################################################################

HOST [Main]
IFOPTALL(%(hardware_options), ptz)
    IFEQ(%(hardware),real)
#### Server that communicates with the PTU through Player
        COMPONENT CPP ptz.server PlayerPTZServer --player-host %(host:PlayerHost) --ptz-device 0
    ELSE
#### Server that communicates with the Stage simulated PTU through Player
        COMPONENT CPP ptz.server PlayerActServer --player-host %(host:PlayerHost) --ptz-device 0
    ENDIF
ENDIF

IFEQ(%(hardware),none)
  COMPONENT CPP laser.server LaserServerFake
  COMPONENT CPP robot.server RobotbaseServerFake
ELSE
#### Laser server using Player (real robot or Stage simulation)
  COMPONENT CPP laser.server LaserServerPlayer --player-host %(host:PlayerHost)
#### Odometry/motor server using Player (real robot or Stage simulation)
  COMPONENT CPP robot.server RobotbaseServerPlayer --player-host %(host:PlayerHost)
ENDIF
IFOPTALL(%(hardware_options), blobfinder)
#### Server that provides a simple simulated vision input from Player/Stage
    COMPONENT CPP blob.server PlayerBlobFinderServer --player-host %(host:PlayerHost)
ENDIF

####
#### GUI OPTIONS

### Show PTZ control gui
VARDEFAULT ptz_test_gui=--testGUI

##########################################################################
# spatial ################################################################
##########################################################################

### CURE config file
VARDEFAULT spatial_cureconfig=instantiations/cureconfig/cogxp3.ccf

####
#### VISUALIZATION OPTIONS

### Whether to show door hypotheses in Peekabot
# Note: These are different from door nodes (yellow door frames) - door hypotheses are used for
# generating connectivities
VARDEFAULT display_doors=--display-doors

### Room category labels (for PB display component only)
VARDEFAULT conceptual_categories=corridor,office,meetingroom

### If the flag --show3Dobstacles is present then show the height map in Peekabot (in green)
VARDEFAULT spatial_show_3d_obstacles=--show3Dobstacles

### If the flag --showExpandedMap is present then show the region around the robot in which
# placeholders may be generated
VARDEFAULT spatial_show_expanded_map=

### Peekabot model files to use for VisualObjects. List of pairs, with 
#   VisualObject label first, Peekabot model file name second
VARDEFAULT pb_object_models="cornflakes musli.pbmf rice rice.pbmf keyboard keyboard.pbmf book book.pbmf"

### if the flag --no-load-robot-file is present then a simple cube 
# with an orientation marker will be drawn in peekabot
# (this was added to try to deal with the peekabot crashes on Jenkins)
VARDEFAULT no_load_robot_file=


### SPATIAL.SA parameters

# Lower boundary on width of doorways
VARDEFAULT spatial_min_door_width=0.75  

# Upper boundary on width of doorways
VARDEFAULT spatial_max_door_width=0.9  

# Kinect obstacles taller than this are treated as obstacles
VARDEFAULT min_obstacle_height=0.25 

# Laser scans are clipped to this range for purposes of
# determining free space
VARDEFAULT explore_range=2.0

# Whether to save and load obstacle grid map
VARDEFAULT spatial_load_map=--load-map --save-map

## Placeholder generation parameters:
# Obstacles are expanded by 
# (spatial_node_obstacle_margin + spatial_node_unknown_margin) * 0.5 * (robot width)
# Free space is reduced by (spatial_node_unknown_margin) * 0.5 * (robot width)
VARDEFAULT spatial_node_obstacle_margin=1.0
VARDEFAULT spatial_node_unknown_margin=1.0

# Whether to output SLAM map and robot pose
VARDEFAULT spatial_output_slam_files=yes

# Whether to output raw odometry and laser scans for debug
VARDEFAULT spatial_output_raw_data=
#--output-raw-data

IFEQ(%(spatial_output_slam_files),yes)

  VARDEFAULT slam_mapconfig=-m tmpmap.metric 
ELSE
  VARDEFAULT slam_mapconfig=--no-file-output
ENDIF

### Disable placeholder generation (no exploration): --no-placeholders
VARDEFAULT no_placeholders=

### Save and load local gridmaps for nodes in LocalMapManager
VARDEFAULT save_load_nodemaps=--save-nodemap --load-nodemap

### Perform visual exploration after exploratory movement (i.e. to placeholders)
VARDEFAULT visual_exploration=--visual-exploration

### Generate placeholders AND connectivities when the robot arrives at a Place
# This is signaled to PlaceManager via the endplacetransition command
VARDEFAULT spatial_generate_placeholders_on_place=--generate-placeholders-on-place

### Delay in ms before starting visual exploration at system start up.
VARDEFAULT spatial_visual_exploration_startup_delay=4000

### Prohibit the creation of placeholders in certain zones
# Note: visualisation of exclusion zones is limited to 30 m from the initial location
# Exclusion zones that are further away will not be visualised correctly
# The visualisation is done by PlaceManager
# Example: --exclude-from-exploration "x < 2.0 y > 0 or y < -5"
VARDEFAULT exclude_exploration=

# If --follow-robot is supplied, PB will follow the robot with the camera
VARDEFAULT follow_robot=--follow-robot

# If --show-connectivities is supplied, PB will display 
# SpatialProperties::ConnectivityProperty as red, directed arrows
# (with a single arrow head)
VARDEFAULT show_connectivities=--show-connectivities

# If --filter-doors is supplied, create doors only close to door hypotheses
# TODO How far is close?
VARDEFAULT filter_doors=

### AVS options
# distance in metres at which the objects should be detectable
VARDEFAULT avs_cone_depth=2

# Whether to generate a prior probability along (laser-detected) wall
# obstacles in uninformed AVS (otherwise, only the Kinect heightmap will be
# used)
VARDEFAULT use_wall_prob=--use-wall-prob

# List of allowable objects for which to perform AVS
VARDEFAULT avs_sift_objects="table cerealbox magazine"

# Do generate random view cones for second and subsequent views
#--random-vc
# TODO Delete - This is obsolete
VARDEFAULT avs_random_vc=

# closest distance in metres from an obstacle that random view cones
# may originate from
# TODO Delete - this is obsolete
VARDEFAULT avs_sample_from_obs=0.4



### Kinect options

# simulate_kinect - If this is set, only the wedge that the 
# simulated kinect can see, when in the navigation position,
# is treated as free space; if not, the whole laser scan is used

IFOPTALL(%(hardware_options), kinect)
    ### Connect to and use Kinect point cloud server
    SETVAR spatial_pcserver=--pcserver pcserver
    SETVAR vision_pcserver=--pcserver pcserver
    SETVAR simulate_kinect=
ELSE
    ### Simulate Kinect point cloud for free space clearing
    SETVAR spatial_pcserver=
    SETVAR vision_pcserver=
    SETVAR simulate_kinect=--simulate-kinect
ENDIF


### With --ctrl-ptu, SpatialControl will send the PTU to the specified
#   navigation pose before it allows the robot to start moving
IFOPTALL(%(hardware_options), ptz)
    VARDEFAULT spatial_ctrl_ptu=--ctrl-ptu
ELSE
    VARDEFAULT spatial_ctrl_ptu=
ENDIF



IFOPTALL(%(feature_options), spatial)

    ### Basic components
    SUBARCHITECTURE spatial.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager

    ### Whether to display spatial information in Peekabot
    IFOPTALL(%(feature_options), peekabot)
  	
### Main Peekabot visualisation component. Displays nav nodes, nav graph edges, node hypotheses,
#   robot position, room category probability distribution, Place connectivities, 
#   ComaRoom membership, ongoing NavCommand, map loading status, people detection,
#   metric line map, visual objects...
        CPP GD display.process DisplayNavInPB --retry-interval 10 -c %(spatial_cureconfig) --no-sois %(vision_pcserver) --room-categories %(conceptual_categories) --object-models %(pb_object_models) %(follow_robot) %(no_load_robot_file) %(show_connectivities)

# Enable PB visualization in spatial components
        SETVAR usePB=--usepeekabot

    ELSE
        SETVAR usePB=
    ENDIF

    ### Pan-tilt-zoom server: This is the CAST Pan-Tilt Server that listens for SetPTZCommand objects being written
    ### to WM and then react upon that as described in https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/PanTilt
    IFOPTALL(%(hardware_options), ptz)
        IFOPTALL(%(feature_options), man_ctrl)
            ### The --shake command is needed to "wake up" the PTU
            JAVA MG ptzJavaServer eu.cogx.ptz.PanTiltZoomServer %(ptz_test_gui) --shake --tilt "-0.7854"
        ELSE
            JAVA MG ptzJavaServer eu.cogx.ptz.PanTiltZoomServer
        ENDIF
    ENDIF



### Puts the robot's own belief on WM, along with it's location
    CPP GD self.representer     SelfRepresenter

### Translates and queues Spatial::NavCommands;
# writes NavData::InternalNavCmd and NavData::VisualExplorationCommand
    CPP MG spatial.translation  SpatialTranslation %(visual_exploration) %(spatial_generate_placeholders_on_place) --startup-delay %(spatial_visual_exploration_startup_delay)

### Reads NavData::InternalNavCmd to control the robot
# Maintains three-state grid map for exploration and obstacle avoidance
# Maintains Kinect obstacles in a height map (highest obstacle height detected
# in a cell)
# Generates node hypotheses for PlaceManager on request, using grid map
# Receives VisualExplorationCommand and controls PTU to explore space
# Visualizes grid map, local odometry position estimate (red tick), laser scan
    CPP GD spatial.control      SpatialControl -c %(spatial_cureconfig) --node-obstacle-margin %(spatial_node_obstacle_margin) --node-unknown-margin %(spatial_node_unknown_margin) %(spatial_load_map) %(spatial_show_3d_obstacles) %(spatial_show_expanded_map) --min-obstacle-height %(min_obstacle_height) --explore-range %(explore_range) %(spatial_ctrl_ptu) %(spatial_pcserver) %(usePB) %(simulate_kinect) #--display-cure-obstacle-map --cat-explore-range 5.6

    IFEQ(%(hardware),none)
        CPP GD slam.process     SlamProcessFake -c %(spatial_cureconfig) %(slam_mapconfig) -m tmpmap.metric
    ELSE
### Uses laser scans and odometry to maintain NavData::RobotPose2d struct
# If the tmpmap.metric file exists then localisation mode will be used instead of the SLAM mode
        CPP GD slam.process     SlamProcess -c %(spatial_cureconfig) --max-scan-rate 5 %(slam_mapconfig) %(usePB) %(spatial_output_raw_data)
    ENDIF

### Creates NavData::FNode and AEdge as the robot traverses space
    CPP GD navgraph.process     NavGraphProcess -c %(spatial_cureconfig) -m tmpmap.graph --min-door-width %(spatial_min_door_width) --max-door-width %(spatial_max_door_width) %(filter_doors)

### Creates SpatialData::Place from FNode, as well as from NodeHypothesis
# (placeholder). Deletes Placeholders on exploration failure.
# Maintains connection between Place on the one hand and either a FNode or a
# NodeHypothesis on the other. Supplies ICE interfaces for translating between the
# two. Writes ConnectivityPathProperty structs.
    CPP GD place.manager        PlaceManager --no-update-placeholders %(exclude_exploration) --min-node-separation 2.0 --hyp-path-length 1.5 %(no_placeholders)

### Maintains local obstacle grid maps around individual nodes
# Also detects and displays door hypotheses at a distance (with --detect-doors)
# Provides placeholder properties (length of associated frontier, size of
# associated free space, nearness to door hypothesis), exposed through 
# ICE interfaces
    CPP GD map.manager          LocalMapManager -c %(spatial_cureconfig) --planemap-size 100 --planemap-cellsize 0.05 --no-planes --detect-doors %(display_doors) %(save_load_nodemaps)

    IFOPTALL(%(feature_options), binder)
        ### run the spatial mediators so that the spatial stuff shows up in the binder/planner
        # simple mediators:
        JAVA MG pm-place	eu.cogx.perceptmediator.components.PlaceMediator 
        JAVA MG pm-agent 	eu.cogx.perceptmediator.components.AgentMediator 
        JAVA MG pm-viewpoint 	eu.cogx.perceptmediator.dora.ViewPointMediator 

        # property mediators
        JAVA MG pm-gateway 	eu.cogx.perceptmediator.components.GatewayPropertyMediator
        ####JAVA MG pm-space 	eu.cogx.perceptmediator.components.AssociatedSpacePropertyMediator
        ####JAVA MG pm-border  eu.cogx.perceptmediator.components.AssociatedBorderPropertyMediator
 

        # relation mediators:
        JAVA MG pm-place-conn 	eu.cogx.perceptmediator.components.PlaceConnectivityMediator 
        JAVA MG pm-placeholder-cat 	eu.cogx.perceptmediator.components.PlaceholderCategoryMediator 
        #JAVA MG pm-agent-rel 	eu.cogx.perceptmediator.components.PlaceContainmentAgentMediator

        ### this is a dedicated garbage collection that removes any SpatialProperties 
        ### for which the referred Place has been removed.
        ### It makes sure that there are no orphaned properties on WM left
        JAVA MG SpatialPropertyRemover spatial.SpatialPropertyRemover
    ENDIF


    IFOPTALL(%(feature_options), execution)
### the interface to translate and monitor execution actions into spatial actions
        JAVA MG exe-spatial spatial.execution.SpatialActionInterface
    ENDIF

    IFOPTALL(%(feature_options), man_ctrl)
### a GUI to allow for manual NavCommands for GOTOXY and GOTO_PLACE
        JAVA MG spatial-manual spatial.manual.ManualNavControl
    ENDIF

    IFOPTALL(%(feature_options), avs)
### Computes probability distribution, in metric space, of an object
# that is "in" or "on" another object. Responds to an ObjectPriorRequest
# sent by AVS. Object geometries are currently hard-coded 
# (in RelationEvaluation.cpp)
        CPP GD relation.manager ObjectRelationManager -c %(spatial_cureconfig) --ptzserver ptz.server --display-objects-in-pb

### Active visual search component. Responds to RelationViewPointGenerationCommand
# by generating and displaying (in PB) a prior distribution for the object,
# and a set of possible view cone (group) beliefs for the planner to use.
# Also responds to ProcessConeGroup commands, by moving the robot and turning
# the PTU and sending recognition commands, and subsequently updating the
# probability associated with that cone group.
        CPP MG avs.cpplanner AVS_ContinualPlanner -c %(spatial_cureconfig) %(exclude_exploration) %(use_wall_prob) --cam-horizangle 41 --cam-vertangle 31 --samplesize 300 --tiltstep 10 --panstep 30 --gridsize 700 --cellsize 0.05  --cam-conedepth %(avs_cone_depth) --kernel-width-factor 0.7 --sampleawayfromobs %(avs_sample_from_obs) --queryhandler conceptual.queryhandler --siftobjects %(avs_sift_objects) --random-vc %(usePB)
    ENDIF

    IFOPTALL(%(feature_options), simple_placeholder_exploration)
### Component that does exploration of placeholders
# without the planning pipeline being involved
        CPP MG placeholderexplorer.navigation PlaceholderExplorer
    ENDIF

ENDIF


##########################################################################
# vision #################################################################
##########################################################################

### the directory containing the calibration files to use
VARDEFAULT vision_calib_root=instantiations/calibration/alu-robot-at-kth

### the default camera ID
VARDEFAULT prosilica_id=37105

### default MTU value
VARDEFAULT prosilica_packet_size=1500

### the Haar-like face detector file to use by the people detector
VARDEFAULT face_detector=instantiations/data/haarcascade_frontalface_alt2.xml

### root for the sift-models
VARDEFAULT siftroot_=./instantiations/sift-models

### root for the ply-models
VARDEFAULT plyroot_=./instantiations/ply-models

### siftfiles
VARDEFAULT or3d_sift_files=<multiline>
   %(siftroot_)/frosties.sift
   %(siftroot_)/AImagazineSpring1999.sift
</multiline>

### ply files
VARDEFAULT or3d_ply_files=<multiline>
   %(plyroot_)/frosties.ply
   %(plyroot_)/AImagazineSpring1999.ply
</multiline>

### object labels
VARDEFAULT or3d_labels=cerealbox magazine

### fake tables (subject to fake_table_detect)
VARDEFAULT fake_tables=<multiline>
   --pos-table "3.6, 4.4, 0.6, 0.0" --dimensions-table "0.5, 0.5, 0.1" --visibility-area-table "3.6, 2.0, 8.0, 8.0"
</multiline>



IFOPTALL(%(feature_options), vision)

    ### Basic components
    SUBARCHITECTURE vision.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager

    IFOPTALL(%(feature_options), execution)
        ### the interface to translate and monitor execution actions into vision actions
        JAVA MG exe.vision vision.execution.VisionActionInterface
    ENDIF

    IFOPTALL(%(feature_options), binder)
        ### run the vision mediators so that the vision stuff shows up in the binder/planner
        JAVA MG pm.visualobject eu.cogx.perceptmediator.dora.VisualObjectMediatorComponent 
        JAVA MG pt.visualobject eu.cogx.percepttracker.dora.DoraVisualObjectTracker
        JAVA MG pm.person 	eu.cogx.perceptmediator.dora.PersonMediator
        JAVA MG pt.person 	eu.cogx.percepttracker.dora.DoraPersonTracker #--update-on-move
    ENDIF

    ### read https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/CameraMount
    CPP MG cameramount  CameraMount --use_ptz --camids "0 2" --cam_poses_xml "%(vision_calib_root)/ptu-pose-cam-left-sim.xml %(vision_calib_root)/ptu-pose-kinect-sim.xml" --pt_base_xml %(vision_calib_root)/ptu-pose-base-sim.xml --pt_pan_xml %(vision_calib_root)/ptu-pose-pan-sim.xml --pt_tilt_xml %(vision_calib_root)/ptu-pose-tilt-sim.xml --ptzserver ptz.server

#EXPAND hardware_options=%(hardware_options)

    IFOPTALL(%(hardware_options), video)
        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/vision.sa.tutorial/VideoServers
        CPP MG VideoServer  PointGreyServerUSB --camids "0" --camconfigs "%(vision_calib_root)/camcalib-left.xml" --framerate_fps "7" --imgsize "1280 960" --swapredblue

        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/vision.sa.tutorial/VideoClients
        CPP MG viewer       VideoViewer --videohost localhost --videoname VideoServer --camid 0

        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/ObjectRecognizer3D
        CPP MG recognizer.3D ObjectRecognizer3D --videoname VideoServer --camid "0" --no-learning --labels "%(or3d_labels)" --siftfiles "%(or3d_sift_files)" --plyfiles "%(or3d_ply_files)" --save-images
    ENDIF

    IFOPTALL(%(hardware_options), prosilica)
        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/vision.sa.tutorial/VideoServers
        CPP MG ProsilicaServer  ProsilicaServer --camids "3" --cam-id %(prosilica_id) --mtu %(prosilica_packet_size) --swapredblue

        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/vision.sa.tutorial/VideoClients
        CPP MG viewer.prosilica         VideoViewer --videohost localhost --videoname ProsilicaServer --camid 3
    ENDIF

    IFOPTALL(%(hardware_options), kinect)
        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/vision.sa.tutorial/PointCloudServers
        CPP MG pcserver     KinectPCServer --camids "2" --kconfig "instantiations/kinect/KinectConfig.xml" --camconfigs "%(vision_calib_root)/camcalib-kinect.xml" --create-viewcone

        CPP MG recognizer.people PCPeopleDetector --displayserver "display.srv" %(vision_pcserver) --faceCascade %(face_detector) --numattempts 4
    ENDIF

    IFOPTALL(%(hardware_options), blobfinder)
        JAVA MG blobdetector  vision.components.BlobjectDetector --label-magazine 255,0,0 --label-table 0,255,0 --label-chocolate_chips 0,0,255  --label-sugar 255,0,255

        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/ObjectRecognizer3D
        CPP MG recognizer.3D ObjectRecognizer3D --no-learning --simulation-only --labels "%(or3d_labels)" --siftfiles "%(or3d_sift_files)" --plyfiles "%(or3d_ply_files)"
        JAVA MG recognizer.people vision.components.BlobbyPeopleDetector --label-person 255,255,0
    ENDIF

    IFOPTALL(%(hardware_options), kinect-video)
        ### see https://codex.cs.bham.ac.uk/trac/cogx/wiki/cast/ObjectRecognizer3D
        CPP MG recognizer.3D ObjectRecognizer3D --pcserver pcserver --camid "2" --no-learning --labels "%(or3d_labels)" --siftfiles "%(or3d_sift_files)" --plyfiles "%(or3d_ply_files)" --save-images
    ENDIF

    IFOPTALL(%(feature_options), fake-table-detect)
        JAVA MG FakeDetector vision.components.FakeDetector %(fake_tables)
    ENDIF
ENDIF


##########################################################################
# binder #################################################################
##########################################################################
IFOPTALL(%(feature_options), binder)
    SUBARCHITECTURE binder 
    JAVA TM cast.architecture.AlwaysPositiveTaskManager #--log
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
ENDIF


##########################################################################
# dialogue ###################################################################
##########################################################################
IFOPTALL(%(feature_options), dialogue)
    SETVAR mary_voice=dfki-prudence-hsmm
    SETVAR max_readings=1
    SETVAR parsing_grammar=subarchitectures/dialogue.sa/resources/grammars/openccg/moloko.v6/grammar.xml
    SETVAR irecog_abd_domain=subarchitectures/dialogue.sa/resources/abduction/cogx/current/INDEX.U.txt
    SETVAR dm_policy=subarchitectures/dialogue.sa/config/policies/yr2/fullpolicy_george.xml
    SETVAR irealize_abd_domain=subarchitectures/dialogue.sa/resources/abduction/cogx/current/INDEX.G.txt
    SETVAR cplan_rules=subarchitectures/dialogue.sa/resources/contentplanning/allRuleFiles.trf
    SETVAR realize_grammar=%(parsing_grammar)
    SETVAR realize_ngrams=subarchitectures/dialogue.sa/resources/grammars/openccg/moloko.v6/ngram-corpus.txt
    SETVAR dump_file=/tmp/belief-model.abd

    # Basic dialogue.sa setup.
    SUBARCHITECTURE  dialogue %(host:AbducerHost)
    JAVA WM			cast.architecture.SubarchitectureWorkingMemory
    JAVA TM			cast.architecture.AlwaysPositiveTaskManager

    VARDEFAULT parsing_grammar=subarchitectures/dialogue.sa/resources/grammars/openccg/moloko.v6/grammar.xml

    #JAVA MG standby-manager      de.dfki.lt.tr.cast.dialogue.StandbyModeManager --unlock-phrase "continue" --unlock-threshold 0.65
    JAVA MG standby-manager      de.dfki.lt.tr.cast.dialogue.SilentStandbyModeManager

    # phonological string -> linguistic meaning
    JAVA MG	parser	             de.dfki.lt.tr.cast.dialogue.IncrStringParser --grammar %(parsing_grammar) --log true
    JAVA MG parseselect	         de.dfki.lt.tr.cast.dialogue.SimpleParseSelection
    
    VARDEFAULT irealize_abd_domain=subarchitectures/dialogue.sa/resources/abduction/cogx/current/INDEX.G.txt
    VARDEFAULT cplan_rules=subarchitectures/dialogue.sa/resources/contentplanning/allRuleFiles.trf
    VARDEFAULT realize_grammar=subarchitectures/dialogue.sa/grammars/openccg/moloko.v6/grammar.xml
    VARDEFAULT realize_ngrams=subarchitectures/dialogue.sa/resources/grammars/openccg/moloko.v6/ngram-corpus.txt

    # intention realisation
    JAVA MG cplan                de.dfki.lt.tr.cast.dialogue.ContentPlanner --domainFile %(cplan_rules) --contentRel Content --log true
    JAVA MG realizer             de.dfki.lt.tr.cast.dialogue.CCGRealizer --ccg %(realize_grammar) --ngrams %(realize_ngrams) --log true

    VARDEFAULT mary_server_host=localhost
    VARDEFAULT mary_voice=dfki-spike-hsmm

    JAVA GD tts-mary    de.dfki.lt.tr.cast.dialogue.MaryTTS --serverHost %(mary_server_host) --serverPort 59125 --voice %(mary_voice) --log true #--debug true

    VARDEFAULT loquendo_server_endpoint="tcp -h localhost -p 9021"

    JAVA MG	asr-loquendo    de.dfki.lt.tr.cast.dialogue.LoquendoASR --serverName LoquendoASRServer --serverEndpoint %(loquendo_server_endpoint) --threshold .4 --log true
    JAVA MG asr-clarifier  de.dfki.lt.tr.cast.dialogue.ASRClarifier --threshold .6

    VARDEFAULT irecog_abd_domain=subarchitectures/dialogue.sa/resources/abduction/cogx/current/INDEX.U.txt
    VARDEFAULT max_readings=1

    JAVA MG	int-recognizer       de.dfki.lt.tr.cast.dialogue.NewIntentionRecognizer --ruleset %(irecog_abd_domain) --abd-host %(host:AbducerHost) --max-readings %(max_readings)

    VARDEFAULT irealize_abd_domain=subarchitectures/dialogue.sa/resources/abduction/cogx/current/INDEX.G.txt

    # intention realisation
    JAVA MG	int-realizer         de.dfki.lt.tr.cast.dialogue.NewIntentionRealizer --ruleset %(irealize_abd_domain) --timeout 250 --abd-host %(host:AbducerHost)

    JAVA MG interaction-manager  de.dfki.lt.tr.cast.dialogue.InteractionManager
    JAVA MG discourse-ref-resolution  de.dfki.lt.tr.cast.dialogue.DiscourseReferenceResolution
    JAVA MG	gui-local    de.dfki.lt.tr.cast.dialogue.DialogueGUI --log true
    JAVA MG ref-resolution  de.dfki.lt.tr.cast.dialogue.FakeReferenceResolution
    
    JAVA MG diag-exe dialogue.execution.dora.DialogueActionInterface
    JAVA MG verbalisation verbalisation.DoraVerbalisation
    JAVA MG poplanmon de.dfki.lt.tr.cast.dialogue.POPlanMonitor --log true --pddldomain "subarchitectures/dialogue.sa/resources/domain2test.pddl" --grammarpath "subarchitectures/dialogue.sa/resources/grammars/openccg/moloko.v6/grammar.xml" --domainannotation "subarchitectures/dialogue.sa/resources/dora-interactive_annotated.txt"
ENDIF

##########################################################################
# planning and motivation #####################################################
##########################################################################

### the default goals passed on to the planner GUI
# ROBOT and ROOM need to be replaced by the addresses of the beliefs
# before issuing the goals
#
# Find the magazine and report its position:
# (exists (?o - visualobject) (and (= (label ?o) magazine) (position-reported ?o)))
#
# Find a person:
# (exists (?p - person) (kval ROBOT (is-in ?p)))
#
# Find the magazine:
# (exists (?o - visualobject) (and (= (label ?o) magazine) (kval ROBOT (related-to ?o))))
#
# Explore all placeholders:
# (forall (?p - place) (= (placestatus ?p) trueplace))
#
# Find out the category of the ROOM
# (kval ROBOT (category ROOM))
#
VARDEFAULT planning_goal="(exists (?o - visualobject) (and (= (label ?o) magazine) (position-reported ?o))); (exists (?p - person) (kval ROBOT (is-in ?p))); (exists (?o - visualobject) (and (= (label ?o) magazine) (kval ROBOT (related-to ?o)))); (forall (?p - place) (= (placestatus ?p) trueplace)); (kval ROBOT (category ROOM))"

### the planning domain to use
VARDEFAULT planning_domain=dora-interactive.pddl

### the default knowledge to use - used by default SA
VARDEFAULT default_knowledge="instantiations/defaultprobs/dora-yr4-BHAM-sim.xml"

### the default probabilities - used by planning and default SAs
VARDEFAULT conceptual_defaults="instantiations/defaultprobs/defaultprobs-bham-yr4-direct.txt"


IFOPTALL(%(feature_options), planning_sa)
    VARDEFAULT expl_rules=explanations-dora.pddl
    VARDEFAULT cons_rules=consistency-dora.pddl
    VARDEFAULT planning_config="config.dora.ini"

    COMPONENT PYTHON PlannerPythonServer PythonServer --domain %(planning_domain) --nodot --pdb  --low-p-threshold 0.01 --default %(conceptual_defaults) --config %(planning_config) --expl_rules %(expl_rules) --consistency_rules %(cons_rules)
    COMPONENT CPP PlannerDTServer DTPCONTROL
    
    SUBARCHITECTURE planner.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager
    CPP MG Planner WMControl --belief-timeout 500 #--log 
    CPP MG fileviewer.cli FileMonitorDC --displayserver "display.srv" --setvars "plandir=subarchitectures/planner.sa/src/python"  --monitor "CurrentPlan=dot:%(plandir)/{plan*.dot}"

    IFOPTALL(%(feature_options), man_ctrl)
        JAVA MG manual.planning motivation.components.generators.SimulatedPersonGoalGenerator --goals %(planning_goal)
    ENDIF

##########################################################################
# exection ###############################################################
##########################################################################
    IFOPTALL(%(feature_options), man_ctrl)
        JAVA MG manual.execution dora.execution.components.GraphicalExecutionManager --labels table,cerealbox
    ENDIF
    JAVA MG executor dora.execution.components.DoraExecutionMediator

    JAVA MG exec-monitor dora.execution.components.ExecutionMonitor --displayserver "display.srv"

    IFOPTALL(%(feature_options), motivation)
        IFOPTALL(%(feature_options), motivation_external)
            ### accepts goals given externally via the ExternalGoalGeneratorClient process, useful for external JUnit test by jenkins
            JAVA MG goal.server dora.test.DoraTestRunner
        ENDIF
        IFOPTALL(%(feature_options), motivation_explanation)
            ### creates goals from hypothesis about visualobjects
            JAVA MG goal.hyp-generator motivation.components.generators.VisualObjectHypothesisGoalGenerator
        ENDIF
        ### this instantiates the scheduler (or manager) layer of the motivation architecture
        ### here: it's a simple scheduler which will just plan for all the goals present at once and will NOT look for opportunities,
        ### but rather execute a plan once it has been found and only after the completion of the plan will look for new goals
        IFOPTALL(%(feature_options), motivation_deadlines)
            ### creates goals from hypothesis about visualobjects
            JAVA MG goal.explore-generator spatial.motivation.ExplorePlaceGenerator
            JAVA MG goal.goto-generator spatial.motivation.GotoPlaceGenerator --placeID 10 --deadline 15
            JAVA MG goal.scheduler motivation.components.managers.DeadlineScheduler --no-opportunities #--no-execution
            JAVA MG goal.filter motivation.components.filters.MotiveFilterManager --filter "DoraManualMotiveFilter"
        ELSE
            ### this instantiates the filter layer of the motivation architecture, here: it's a PassAllFilter, that let's Dora adhere anything
            JAVA MG goal.filter motivation.components.filters.MotiveFilterManager --filter "PassAllFilter"
            JAVA MG goal.scheduler motivation.components.managers.SimpleScheduler
        ENDIF
    ENDIF
ENDIF

##########################################################################
# coma ###################################################################
##########################################################################

### the prior for a room having a person in it
VARDEFAULT room_has_person=0.2

### run coma mediators in a discretising way (only for experiments)
VARDEFAULT discrete_room_cats=
#--discrete

IFOPTALL(%(feature_options), coma)
    SUBARCHITECTURE coma
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    JAVA TM cast.architecture.AlwaysPositiveTaskManager
    JAVA MG comareasoner coma.components.ComaReasoner --crowl-cfg subarchitectures/coma.sa/ontologies/dora.cfg #--log true
    JAVA MG placemon coma.components.PlaceMonitor --reasoner-name comareasoner --chaingraph-name default.chaingraphinferencer --log true # --debug true #--marshaller-name proxy.marshaller -bsa binder --log false
###JAVA MG comagui  coma.components.ComaInputWindow --reasoner-name comareasoner --log true #--hfcserver-name hfcserver --log true #--debug true
    JAVA MG comagre de.dfki.lt.tr.cast.dialogue.ComaReferringExpressionGeneration --reasoner-name comareasoner --log true #--debug true

    IFOPTALL(%(feature_options), binder)
        JAVA MG pm-coma          eu.cogx.perceptmediator.components.ComaRoomMediator %(discrete_room_cats) --has-person %(room_has_person)
        JAVA MG pm-coma-in-place eu.cogx.perceptmediator.components.RoomMembershipMediator
    ENDIF
ENDIF

##########################################################################
# Default.SA ##############################################################
##########################################################################
IFOPTALL(%(feature_options), default)
    SUBARCHITECTURE default.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager

    JAVA MG hfcserver coma.components.HFCServer --stdNSFile "subarchitectures/coma.sa/ontologies/dora-yr2/dora.ns" --stdRuleFile "subarchitectures/coma.sa/ontologies/hfcowl/default.rdl" --otherRuleFiles "subarchitectures/coma.sa/ontologies/defaultsa/defaultsa.rdl" --stdTupleFile "subarchitectures/coma.sa/ontologies/hfcowl/default.nt" --otherTupleFiles "subarchitectures/coma.sa/ontologies/defaultsa/objloc-defaults-subset1_5.nt,subarchitectures/coma.sa/ontologies/dora-yr2/dora-yr2-objs.nt" --log true

# JAVA MG hfctester coma.components.HFCTester --hfcserver-name hfcserver --log true

    CPP GD default.queryhandler DefaultQueryHandler
    CPP GD default.chaingraphinferencer DefaultChainGraphInferencer --hfcserver hfcserver --config %(default_knowledge) --objects-from-defaultprob %(conceptual_defaults)
ENDIF

##########################################################################
# Conceptual.SA  #########################################################
##########################################################################
IFOPTALL(%(feature_options), conceptual)
    SUBARCHITECTURE conceptual.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager

    CPP GD conceptual.queryhandler ConceptualQueryHandler

    CPP GD conceptual.observer ConceptualObserver --shape-threshold 0.05 --size-threshold 0.05 --appearance-threshold 0.05 --beta-threshold 0.01 --gateway-placeholder-threshold 0.05 --associatedspace-placeholder-threshold 50
    
CPP GD conceptual.chaingraphinferencer ConceptualChainGraphInferencer --freespace-placeholder-rate 10 --defaultchaingraphinferencer default.chaingraphinferencer  --add-unobserved-shape --add-unobserved-size --add-unobserved-appearance --add-unobserved-objects magazine,cerealbox  --save-graph conceptual.fg --save-graph-info conceptual.info --opm-counting
    
CPP GD conceptual.comaroomupdater ConceptualComaRoomUpdater --queryhandler conceptual.queryhandler

    CPP GD conceptual.placeholderpropertyupdater ConceptualPlaceholderPropertyUpdater --queryhandler conceptual.queryhandler --defaultchaingraphinferencer default.chaingraphinferencer
    
CPP GD conceptual.tester ConceptualTester --queryhandler conceptual.queryhandler --chaingraphinferencer conceptual.chaingraphinferencer --defaultchaingraphinferencer default.chaingraphinferencer --placemanager place.manager --visualized-objects book,cerealbox,computer,robot,stapler,toiletpaper --save-events
ENDIF

##########################################################################
# Categorical.SA #########################################################
##########################################################################

VARDEFAULT categorisation_config=subarchitectures/categorical.sa/config/BHAM-sim2-shape.cfg

VARDEFAULT place_properties_save_file="place_properties.bin"

IFOPTALL(%(feature_options), categorisation)
    SUBARCHITECTURE categorical.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager

    IFOPTALL(%(feature_options), categorisation-sickscans)
        CPP GD categorical.dataprovider CategoricalDataProvider --config %(categorisation_config) --laser-server laser.server --robot-server robot.server --correct-scans --convert-scans-to-sick
    ELSE
        CPP GD categorical.dataprovider CategoricalDataProvider --config %(categorisation_config) --laser-server laser.server --robot-server robot.server
    ENDIF

    IFOPTALL(%(feature_options), categorisation-visual)
        CPP GD categorical.visualprocessor CategoricalVisualProcessor --config %(categorisation_config)
        CPP GD categorical.appearanceintegrator CategoricalAppearanceIntegrator --config %(categorisation_config) --placemanager place.manager
    ENDIF
    CPP GD categorical.laserprocessor CategoricalLaserProcessor --config %(categorisation_config)
    CPP GD categorical.shapeintegrator CategoricalShapeIntegrator --config %(categorisation_config) --placemanager place.manager

    IFOPTALL(%(feature_options), categorisation-size)
        CPP GD categorical.sizeintegrator CategoricalSizeIntegrator --config %(categorisation_config) --placemanager place.manager
    ENDIF

    IFOPTALL(%(feature_options), place-property-persistence)
        ### Saves and Loads place properties as part of the map (size, shape, appearance, objects)
        CPP MG place.property.saver PlacePropertySaver --save true --save-file-name %(place_properties_save_file) --save-continuously true --save-interval 10000 --load true --load-file-name %(place_properties_save_file) --wait-before-loading 0 --wait-between-loading 0 --wait-for-map-load-status true
    ENDIF

ENDIF


IFOPTALL(%(feature_options), datasaving)
    SETVAR categorisation_config = subarchitectures/categorical.sa/config/dora-yr4-saving.cfg

    SUBARCHITECTURE categorical.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager

        # Add a fake video server if we want to grab only laser data
        IFOPTALL(%(feature_options), datasaving-visual)
        ELSE
           CPP MG ProsilicaServer OpenCvImgSeqServer --camids "0" --files "instantiations/test-recognition3d/frosties-%d.jpg" --start 0 --end 0 --framerate_ms 200 --camconfigs "instantiations/test-recognition3d/dora.right.cal"
        ENDIF

        CPP GD categorical.dataprovider CategoricalDataProvider --config %(categorisation_config)  --laser-server laser.server --robot-server robot.server
        CPP GD categorical.datasaver CategoricalDataSaver --config %(categorisation_config)

ENDIF


IFEQ(%(hardware),none)
    IFOPTALL(%(feature_options), place-property-persistence)

        SUBARCHITECTURE categorical.sa
        JAVA WM cast.architecture.SubarchitectureWorkingMemory
        CPP TM AlwaysPositiveTaskManager

        ### Saves and Loads place properties as part of the map (size, shape, appearance, objects)
        CPP MG place.property.saver PlacePropertySaver --save true --save-file-name %(place_properties_save_file) --save-continuously true --save-interval 10000 --load true --load-file-name %(place_properties_save_file) --wait-before-loading 0 --wait-between-loading 0 --wait-for-map-load-status true

    ENDIF
ENDIF



##########################################################################
# visualization ##########################################################
##########################################################################

### all types to be logged from WMs if debug is enabled
VARDEFAULT logged_types=<multiline>
  execution.slice.Action,
  SpatialData.ObjectSearchResult,
  SpatialData.ViewPoint,
  SpatialData.ProcessConeGroup,
  comadata.ComaRoom,
  SpatialData.RelationalViewPointGenerationCommand,
  autogen.Planner.Action,
  autogen.Planner.PlanningTask,
  SpatialData.NodeHypothesis,
  eu.cogx.beliefs.slice.GroundedBelief,
  eu.cogx.beliefs.slice.HypotheticalBelief,
  SpatialData.MapLoadStatus,
  SpatialProperties.PlaceProperty,
  execution.slice.person.PersonObservation,
  de.dfki.lt.tr.beliefs.slice.intentions.BaseIntention
</multiline>

IFOPTALL(%(feature_options), visualization)
    SETVAR displaysrv_param_redirect=--redirect-to-host %(host:DisplayHost)
    VARDEFAULT displaysrv_param_redirect=

    SUBARCHITECTURE visualization.sa
    JAVA WM cast.architecture.SubarchitectureWorkingMemory
    CPP TM AlwaysPositiveTaskManager
    CPP MG display.srv DisplayServer %(displaysrv_param_redirect)


    IFOPTALL(%(feature_options), planning debug)
        JAVA MG plannertasksdisplay castutils.viewer.V11WMViewerComponent --displayserver "display.srv" --subscribe "autogen.Planner.PlanningTask" --generic-col
        ### add some time measurements on planning in the logs (useful for debugging and experiments)
        JAVA MG plannerstopwatch castutils.experimentation.PlannerStopWatch
    ENDIF

    IFOPTALL(%(feature_options), motivation debug)
        ### adds a graphical representation of the motives and their status to the display server (SVG mode)
        JAVA MG motivedisplay motivation.util.viewer.MotiveChartViewer --displayserver "display.srv" --mode SVG
        JAVA MG goaldisplay castutils.viewer.V11WMViewerComponent --displayserver "display.srv" --subscribe "motivation.slice.Motive"
    ENDIF

    IFOPTALL(%(feature_options), debug)
        ### starts the WM editor that let's you see and modify WM content in a Java GUI. Set %(logged_types) to select the types
        ### you are interested in
        JAVA MG wmeditor.xml castutils.castextensions.wmeditor.XMLEditor --subscribe "%(logged_types)"
        JAVA MG workingmemory.display castutils.viewer.V11WMViewerComponent --displayserver "display.srv" --subscribe  "%(logged_types)" --generic-col --compact
        ### starts the WM logger that logs all operation of subscribed types on INFO level in the logs.
        ### Set %(logged_types) to select the types you are interested in
        JAVA MG wmlogger castutils.experimentation.WMLogger --subscribe "%(logged_types)"
        ### log the distance travelled every 5 seconds
        JAVA MG distancelogger castutils.experimentation.DistanceMonitor
    ENDIF
ENDIF

