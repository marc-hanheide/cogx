package BindingData;


/**
* BindingData/BindingScore.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from BindingData.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/

public final class BindingScore implements org.omg.CORBA.portable.IDLEntity
{
  public boolean m_comparable = false;
  public boolean m_mismatch = false;
  public int m_matches = (int)0;
  public boolean m_relationMismatch = false;
  public int m_relationMatches = (int)0;

  // only used when binding to a union dedicated for this proxy alone (until sth else binds )
  public int m_sticky = (int)0;

  /// only used when several scores are equivalent, to make a decent guess...
  public double m_salienceHeuristics = (double)0;

  /// was computed.
  public int m_proxyUpdatesWhenThisComputed = (int)0;

  /// conventient for crosschecking etc
  public String m_proxyID = null;

  /// used to to know whether or not a proxy is updated with new features
  public String m_proxyFeatureSignature = null;

  /// conventient for crosschecking etc
  public String m_unionID = null;

  public BindingScore ()
  {
  } // ctor

  public BindingScore (boolean _m_comparable, boolean _m_mismatch, int _m_matches, boolean _m_relationMismatch, int _m_relationMatches, int _m_sticky, double _m_salienceHeuristics, int _m_proxyUpdatesWhenThisComputed, String _m_proxyID, String _m_proxyFeatureSignature, String _m_unionID)
  {
    m_comparable = _m_comparable;
    m_mismatch = _m_mismatch;
    m_matches = _m_matches;
    m_relationMismatch = _m_relationMismatch;
    m_relationMatches = _m_relationMatches;
    m_sticky = _m_sticky;
    m_salienceHeuristics = _m_salienceHeuristics;
    m_proxyUpdatesWhenThisComputed = _m_proxyUpdatesWhenThisComputed;
    m_proxyID = _m_proxyID;
    m_proxyFeatureSignature = _m_proxyFeatureSignature;
    m_unionID = _m_unionID;
  } // ctor

} // class BindingScore
