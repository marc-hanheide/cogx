package BindingData;


/**
* BindingData/BindingProxy.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from BindingData.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/

public final class BindingProxy implements org.omg.CORBA.portable.IDLEntity
{

  /// also not be included
  public BindingData.FeaturePointer m_proxyFeatures[] = null;

  /// score changes.
  public String m_featureSignature = null;

  /// binds.
  public String m_unionID = null;

  /// a nice shortcut.
  public String m_proxyIDs[] = null;

  /// features, \p BindingFeatures::SourceID)
  public String m_sourceID = null;

  /// which includes the score etc.
  public String m_bestUnionsForProxyID = null;

  /// points to a list of nonmatching unions
  public String m_nonMatchingUnionID = null;

  /// the type of proxy
  public BindingData.BindingProxyType m_type = null;

  /// relation has three outPorts
  public BindingData.ProxyPorts m_outPorts = null;

  /// require that the whole candidate needs to be updated.
  public String m_inPortsID = null;

  /// but it will not be bound.
  public boolean m_hypothetical = false;

  /// Number of times the binding has been updated
  public int m_updates = (int)0;

  /// Number of times the proxy has been bound
  public int m_bindingCount = (int)0;

  /// This is the most reliable way of determining if the proxy is bound or not.
  public BindingData.BindingProxyState m_proxyState = null;

  public BindingProxy ()
  {
  } // ctor

  public BindingProxy (BindingData.FeaturePointer[] _m_proxyFeatures, String _m_featureSignature, String _m_unionID, String[] _m_proxyIDs, String _m_sourceID, String _m_bestUnionsForProxyID, String _m_nonMatchingUnionID, BindingData.BindingProxyType _m_type, BindingData.ProxyPorts _m_outPorts, String _m_inPortsID, boolean _m_hypothetical, int _m_updates, int _m_bindingCount, BindingData.BindingProxyState _m_proxyState)
  {
    m_proxyFeatures = _m_proxyFeatures;
    m_featureSignature = _m_featureSignature;
    m_unionID = _m_unionID;
    m_proxyIDs = _m_proxyIDs;
    m_sourceID = _m_sourceID;
    m_bestUnionsForProxyID = _m_bestUnionsForProxyID;
    m_nonMatchingUnionID = _m_nonMatchingUnionID;
    m_type = _m_type;
    m_outPorts = _m_outPorts;
    m_inPortsID = _m_inPortsID;
    m_hypothetical = _m_hypothetical;
    m_updates = _m_updates;
    m_bindingCount = _m_bindingCount;
    m_proxyState = _m_proxyState;
  } // ctor

} // class BindingProxy
