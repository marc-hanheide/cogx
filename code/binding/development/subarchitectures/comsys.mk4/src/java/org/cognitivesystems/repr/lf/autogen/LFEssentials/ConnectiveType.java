package org.cognitivesystems.repr.lf.autogen.LFEssentials;


/**
* org/cognitivesystems/repr/lf/autogen/LFEssentials/ConnectiveType.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LFEssentials.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/


// CONJUNCTIVE ("AND").
public class ConnectiveType implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 4;
  private static org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType[] __array = new org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType [__size];

  public static final int _NONE = 0;
  public static final org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType NONE = new org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType(_NONE);
  public static final int _DISJUNCTIVE = 1;
  public static final org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType DISJUNCTIVE = new org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType(_DISJUNCTIVE);
  public static final int _CONJUNCTIVE = 2;
  public static final org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType CONJUNCTIVE = new org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType(_CONJUNCTIVE);
  public static final int _XDISJUNCTIVE = 3;
  public static final org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType XDISJUNCTIVE = new org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType(_XDISJUNCTIVE);

  public int value ()
  {
    return __value;
  }

  public static org.cognitivesystems.repr.lf.autogen.LFEssentials.ConnectiveType from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected ConnectiveType (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class ConnectiveType
