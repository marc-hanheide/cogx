// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __ComsysEssentials_hh__
#define __ComsysEssentials_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
#endif



#ifndef __LFEssentials_hh_EXTERNAL_GUARD__
#define __LFEssentials_hh_EXTERNAL_GUARD__
#include <comsys/idl/LFEssentials.hh>
#endif
#ifndef __LFPacking_hh_EXTERNAL_GUARD__
#define __LFPacking_hh_EXTERNAL_GUARD__
#include <comsys/idl/LFPacking.hh>
#endif
#ifndef __FrameworkBasics_hh_EXTERNAL_GUARD__
#define __FrameworkBasics_hh_EXTERNAL_GUARD__
#include <balt/idl/FrameworkBasics.hh>
#endif
#ifndef __CAST_hh_EXTERNAL_GUARD__
#define __CAST_hh_EXTERNAL_GUARD__
#include <cast/cdl/CAST.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE org

_CORBA_MODULE_BEG

  _CORBA_MODULE cognitivesystems

  _CORBA_MODULE_BEG

    _CORBA_MODULE comsys

    _CORBA_MODULE_BEG

      _CORBA_MODULE autogen

      _CORBA_MODULE_BEG

        _CORBA_MODULE ComsysEssentials

        _CORBA_MODULE_BEG

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_UniqueId;

          typedef char* UniqueId;
          typedef ::CORBA::String_var UniqueId_var;
          typedef ::CORBA::String_out UniqueId_out;

          struct PhonString {
            typedef _CORBA_ConstrType_Variable_Var<PhonString> _var_type;

            
            ::CORBA::String_member id;

            ::CORBA::String_member wordSequence;

            ::CORBA::Long length;

            ::CORBA::Float confidenceValue;

            ::CORBA::Float NLconfidenceValue;

            ::CORBA::Long rank;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef PhonString::_var_type PhonString_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< PhonString,PhonString_var > PhonString_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PhonString;

          struct AudioData {
            typedef _CORBA_ConstrType_Variable_Var<AudioData> _var_type;

            
            typedef _CORBA_Unbounded_Sequence_Octet _dataArray_seq;
            _dataArray_seq dataArray;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef AudioData::_var_type AudioData_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< AudioData,AudioData_var > AudioData_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_AudioData;

          struct BoggleWoggle {
            typedef _CORBA_ConstrType_Variable_Var<BoggleWoggle> _var_type;

            
            ::CORBA::String_member m_string;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef BoggleWoggle::_var_type BoggleWoggle_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< BoggleWoggle,BoggleWoggle_var > BoggleWoggle_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_BoggleWoggle;

          struct RecogResult {
            typedef _CORBA_ConstrType_Variable_Var<RecogResult> _var_type;

            
            ::CORBA::Boolean isRecognized;

            ::CORBA::Boolean isConnectionClosed;

            ::CORBA::String_member recString;

            ::CORBA::Long confidence;

            ::CORBA::Long probability;

            ::CORBA::String_member ipAddress;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef RecogResult::_var_type RecogResult_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< RecogResult,RecogResult_var > RecogResult_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_RecogResult;

          struct NonStandardRule {
            typedef _CORBA_ConstrType_Variable_Var<NonStandardRule> _var_type;

            
            ::CORBA::String_member rulename;

            ::CORBA::Long numberOfApplications;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef NonStandardRule::_var_type NonStandardRule_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< NonStandardRule,NonStandardRule_var > NonStandardRule_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_NonStandardRule;

          struct NonStandardRulesAppliedForLF {
            typedef _CORBA_ConstrType_Variable_Var<NonStandardRulesAppliedForLF> _var_type;

            
            ::CORBA::String_member logicalFormId;

            typedef _CORBA_Unbounded_Sequence< NonStandardRule >  _nonStandardRules_seq;
            _nonStandardRules_seq nonStandardRules;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef NonStandardRulesAppliedForLF::_var_type NonStandardRulesAppliedForLF_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< NonStandardRulesAppliedForLF,NonStandardRulesAppliedForLF_var > NonStandardRulesAppliedForLF_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_NonStandardRulesAppliedForLF;

          struct PhonStringLFPair {
            typedef _CORBA_ConstrType_Variable_Var<PhonStringLFPair> _var_type;

            
            ::CORBA::String_member logicalFormId;

            PhonString phon;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef PhonStringLFPair::_var_type PhonStringLFPair_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< PhonStringLFPair,PhonStringLFPair_var > PhonStringLFPair_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PhonStringLFPair;

          struct PackedLFs {
            typedef _CORBA_ConstrType_Variable_Var<PackedLFs> _var_type;

            
            ::CORBA::String_member id;

            typedef _CORBA_Unbounded_Sequence< PhonStringLFPair >  _phonStringLFPairs_seq;
            _phonStringLFPairs_seq phonStringLFPairs;

            typedef _CORBA_Unbounded_Sequence< PhonString >  _nonParsablePhonStrings_seq;
            _nonParsablePhonStrings_seq nonParsablePhonStrings;

            ::CORBA::Long stringPos;

            repr::lf::autogen::LFPacking::PackedLogicalForm packedLF;

            ::CORBA::Long finalized;

            ::CORBA::String_member type;

            typedef _CORBA_Unbounded_Sequence< NonStandardRulesAppliedForLF >  _nonStandardRulesForLF_seq;
            _nonStandardRulesForLF_seq nonStandardRulesForLF;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef PackedLFs::_var_type PackedLFs_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< PackedLFs,PackedLFs_var > PackedLFs_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_PackedLFs;

          struct InterpretationSupport {
            typedef _CORBA_ConstrType_Variable_Var<InterpretationSupport> _var_type;

            
            ::CORBA::String_member plfId;

            ::CORBA::String_member headNomVar;

            ::CORBA::String_member depNomVar;

            ::CORBA::String_member mode;

            ::CORBA::Boolean isSupported;

            typedef _CORBA_Unbounded_Sequence_String _LFids_seq;
            _LFids_seq LFids;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef InterpretationSupport::_var_type InterpretationSupport_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< InterpretationSupport,InterpretationSupport_var > InterpretationSupport_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_InterpretationSupport;

          struct ContextInfo {
            typedef _CORBA_ConstrType_Variable_Var<ContextInfo> _var_type;

            
            ::CORBA::String_member plfId;

            typedef _CORBA_Unbounded_Sequence< InterpretationSupport >  _interpretations_seq;
            _interpretations_seq interpretations;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef ContextInfo::_var_type ContextInfo_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< ContextInfo,ContextInfo_var > ContextInfo_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ContextInfo;

          struct SpokenOutputItem {
            typedef _CORBA_ConstrType_Variable_Var<SpokenOutputItem> _var_type;

            
            ::CORBA::String_member soiid;

            ::CORBA::String_member phonString;

            ::CORBA::Any inputStream;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef SpokenOutputItem::_var_type SpokenOutputItem_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< SpokenOutputItem,SpokenOutputItem_var > SpokenOutputItem_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SpokenOutputItem;

          struct ContentPlanningGoal {
            typedef _CORBA_ConstrType_Variable_Var<ContentPlanningGoal> _var_type;

            
            ::CORBA::String_member cpgid;

            repr::lf::autogen::LFEssentials::LogicalForm lf;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef ContentPlanningGoal::_var_type ContentPlanningGoal_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< ContentPlanningGoal,ContentPlanningGoal_var > ContentPlanningGoal_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ContentPlanningGoal;

          struct ProductionLF {
            typedef _CORBA_ConstrType_Variable_Var<ProductionLF> _var_type;

            
            ::CORBA::String_member plfid;

            repr::lf::autogen::LFEssentials::LogicalForm lf;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef ProductionLF::_var_type ProductionLF_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< ProductionLF,ProductionLF_var > ProductionLF_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ProductionLF;

          struct IndexAssociation {
            typedef _CORBA_ConstrType_Variable_Var<IndexAssociation> _var_type;

            
            typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id1_seq;
            _id1_seq id1;

            typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Long, 4, 4 >  _id2_seq;
            _id2_seq id2;

            ::CORBA::String_member relType;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef IndexAssociation::_var_type IndexAssociation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< IndexAssociation,IndexAssociation_var > IndexAssociation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_IndexAssociation;

          struct CacheMapping {
            typedef _CORBA_ConstrType_Variable_Var<CacheMapping> _var_type;

            
            typedef _CORBA_Unbounded_Sequence< IndexAssociation >  _associations_seq;
            _associations_seq associations;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef CacheMapping::_var_type CacheMapping_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< CacheMapping,CacheMapping_var > CacheMapping_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CacheMapping;

          struct Cache {
            typedef _CORBA_ConstrType_Variable_Var<Cache> _var_type;

            
            ::CORBA::String_member CacheId;

            ::CORBA::String_member cacheType;

            PackedLFs plf;

            typedef _CORBA_Unbounded_Sequence< ::CORBA::Any >  _content1_seq;
            _content1_seq content1;

            typedef _CORBA_Unbounded_Sequence< ::CORBA::Any >  _content2_seq;
            _content2_seq content2;

            CacheMapping mapping;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef Cache::_var_type Cache_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< Cache,Cache_var > Cache_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Cache;

          struct SDRSRelation {
            typedef _CORBA_ConstrType_Variable_Var<SDRSRelation> _var_type;

            
            ::CORBA::String_member relType;

            typedef _CORBA_Unbounded_Sequence_String _args_seq;
            _args_seq args;

            ::CORBA::Boolean issubord;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef SDRSRelation::_var_type SDRSRelation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< SDRSRelation,SDRSRelation_var > SDRSRelation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SDRSRelation;

          class SDRSType {
          public:

            typedef _CORBA_ConstrType_Variable_Var<SDRSType> _var_type;

            

            SDRSType(): _pd__initialised(0) {
              _default();

          
            }
            
            SDRSType(const SDRSType& _value) {
              _pd__initialised = _value._pd__initialised;
              if ((_pd__default = _value._pd__default)) {
                
              }
              else {
                switch(_value._pd__d) {
                  case 1: relation(_value._pd_relation); break;

                  case 2: plf(_value._pd_plf); break;

                    default: break;

              
                }
              }
              _pd__d = _value._pd__d;

          
            }

            ~SDRSType() {}

            SDRSType& operator=(const SDRSType& _value) {
              _pd__initialised = _value._pd__initialised;
              if ((_pd__default = _value._pd__default)) {
                
              }
              else {
                switch(_value._pd__d) {
                  case 1: relation(_value._pd_relation); break;

                  case 2: plf(_value._pd_plf); break;

                    default: break;

              
                }
              }
              _pd__d = _value._pd__d;

          
              return *this;
            }

            ::CORBA::Short _d() const { return _pd__d;}
            void _d(::CORBA::Short _value){
              // illegal to set discriminator before making a member active
              if (!_pd__initialised)
                OMNIORB_THROW(BAD_PARAM,_OMNI_NS(BAD_PARAM_InvalidUnionDiscValue),::CORBA::COMPLETED_NO);

              if (_value == _pd__d) return; // no change

              switch (_pd__d){
                case 1: goto fail;
                case 2: goto fail;
                default:
                switch (_value){
                  case 1: goto fail;
                  case 2: goto fail;
                  default: _pd__d = _value; return;
                }

              };
              

              fail:
              OMNIORB_THROW(BAD_PARAM,_OMNI_NS(BAD_PARAM_InvalidUnionDiscValue),::CORBA::COMPLETED_NO);


          
            }

            void _default()
            {
              _pd__initialised = 1;
              _pd__d = -32767;
              _pd__default = 1;
            }

          

            const SDRSRelation &relation () const { return _pd_relation; }
            SDRSRelation &relation () { return _pd_relation; }
            void relation (const SDRSRelation& _value) {
              _pd__initialised = 1;
              _pd__d = 1;
              _pd__default = 0;
              _pd_relation = _value;
            }

            const PackedLFs &plf () const { return _pd_plf; }
            PackedLFs &plf () { return _pd_plf; }
            void plf (const PackedLFs& _value) {
              _pd__initialised = 1;
              _pd__d = 2;
              _pd__default = 0;
              _pd_plf = _value;
            }

          
            
            void operator>>= (cdrStream&) const;
            void operator<<= (cdrStream&);

          private:
            ::CORBA::Short _pd__d;
            _CORBA_Boolean _pd__default;
            _CORBA_Boolean _pd__initialised;

            
            SDRSRelation _pd_relation;

            PackedLFs _pd_plf;

          
          };

          typedef SDRSType::_var_type SDRSType_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< SDRSType,SDRSType_var > SDRSType_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SDRSType;

          struct SDRSFormula {
            typedef _CORBA_ConstrType_Variable_Var<SDRSFormula> _var_type;

            
            ::CORBA::String_member label;

            ::CORBA::String_member tprec;

            typedef _CORBA_Unbounded_Sequence< Cache >  _caches_seq;
            _caches_seq caches;

            SDRSType type;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef SDRSFormula::_var_type SDRSFormula_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< SDRSFormula,SDRSFormula_var > SDRSFormula_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SDRSFormula;

          struct LabelFormulaPair {
            typedef _CORBA_ConstrType_Variable_Var<LabelFormulaPair> _var_type;

            
            ::CORBA::String_member label;

            SDRSFormula formula;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef LabelFormulaPair::_var_type LabelFormulaPair_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< LabelFormulaPair,LabelFormulaPair_var > LabelFormulaPair_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_LabelFormulaPair;

          struct LabelFormulaMapping {
            typedef _CORBA_ConstrType_Variable_Var<LabelFormulaMapping> _var_type;

            
            typedef _CORBA_Unbounded_Sequence< LabelFormulaPair >  _mapping_seq;
            _mapping_seq mapping;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef LabelFormulaMapping::_var_type LabelFormulaMapping_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< LabelFormulaMapping,LabelFormulaMapping_var > LabelFormulaMapping_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_LabelFormulaMapping;

          struct SDRS {
            typedef _CORBA_ConstrType_Variable_Var<SDRS> _var_type;

            
            typedef _CORBA_Unbounded_Sequence_String _A_seq;
            _A_seq A;

            ::CORBA::String_member LAST;

            LabelFormulaMapping F;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef SDRS::_var_type SDRS_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< SDRS,SDRS_var > SDRS_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SDRS;

          struct EventDiscRefRelation {
            typedef _CORBA_ConstrType_Variable_Var<EventDiscRefRelation> _var_type;

            
            ::CORBA::String_member eventId;

            ::CORBA::String_member discRefId;

            ::CORBA::String_member mode;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef EventDiscRefRelation::_var_type EventDiscRefRelation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< EventDiscRefRelation,EventDiscRefRelation_var > EventDiscRefRelation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_EventDiscRefRelation;

          struct Event {
            typedef _CORBA_ConstrType_Variable_Var<Event> _var_type;

            
            ::CORBA::String_member eventId;

            ::CORBA::String_member type;

            typedef _CORBA_Unbounded_Sequence< EventDiscRefRelation >  _participants_seq;
            _participants_seq participants;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef Event::_var_type Event_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< Event,Event_var > Event_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Event;

          struct StateDiscRefRelation {
            typedef _CORBA_ConstrType_Variable_Var<StateDiscRefRelation> _var_type;

            
            ::CORBA::String_member stateId;

            ::CORBA::String_member discRefId;

            ::CORBA::String_member mode;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef StateDiscRefRelation::_var_type StateDiscRefRelation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< StateDiscRefRelation,StateDiscRefRelation_var > StateDiscRefRelation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StateDiscRefRelation;

          struct State {
            typedef _CORBA_ConstrType_Variable_Var<State> _var_type;

            
            ::CORBA::String_member stateId;

            ::CORBA::String_member type;

            typedef _CORBA_Unbounded_Sequence< StateDiscRefRelation >  _participants_seq;
            _participants_seq participants;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef State::_var_type State_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< State,State_var > State_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_State;

          struct AspectualRelation {
            typedef _CORBA_ConstrType_Variable_Var<AspectualRelation> _var_type;

            
            ::CORBA::String_member eventSourceId;

            ::CORBA::String_member stateTargetId;

            ::CORBA::String_member aspect;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef AspectualRelation::_var_type AspectualRelation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< AspectualRelation,AspectualRelation_var > AspectualRelation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_AspectualRelation;

          struct TemporalRelation {
            typedef _CORBA_ConstrType_Variable_Var<TemporalRelation> _var_type;

            
            ::CORBA::String_member eventSourceId;

            ::CORBA::String_member stateTargetId;

            ::CORBA::String_member tempRelation;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef TemporalRelation::_var_type TemporalRelation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< TemporalRelation,TemporalRelation_var > TemporalRelation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TemporalRelation;

          struct Nucleus {
            typedef _CORBA_ConstrType_Variable_Var<Nucleus> _var_type;

            
            ::CORBA::String_member nucleusId;

            ::CORBA::String_member plfId;

            Cache discRefs;

            typedef _CORBA_Unbounded_Sequence< Event >  _events_seq;
            _events_seq events;

            typedef _CORBA_Unbounded_Sequence< State >  _states_seq;
            _states_seq states;

            typedef _CORBA_Unbounded_Sequence< AspectualRelation >  _aspectualRelations_seq;
            _aspectualRelations_seq aspectualRelations;

            typedef _CORBA_Unbounded_Sequence< TemporalRelation >  _temporalRelations_seq;
            _temporalRelations_seq temporalRelations;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef Nucleus::_var_type Nucleus_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< Nucleus,Nucleus_var > Nucleus_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Nucleus;

          struct InterNucleusRelation {
            typedef _CORBA_ConstrType_Variable_Var<InterNucleusRelation> _var_type;

            
            ::CORBA::String_member sourceId;

            ::CORBA::String_member targetId;

            ::CORBA::String_member mode;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef InterNucleusRelation::_var_type InterNucleusRelation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< InterNucleusRelation,InterNucleusRelation_var > InterNucleusRelation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_InterNucleusRelation;

          struct SpatioTemporalRepresentation {
            typedef _CORBA_ConstrType_Variable_Var<SpatioTemporalRepresentation> _var_type;

            
            typedef _CORBA_Unbounded_Sequence< Nucleus >  _nuclei_seq;
            _nuclei_seq nuclei;

            typedef _CORBA_Unbounded_Sequence< InterNucleusRelation >  _interNucleusRelations_seq;
            _interNucleusRelations_seq interNucleusRelations;

            ::CORBA::String_member currentNucleusId;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef SpatioTemporalRepresentation::_var_type SpatioTemporalRepresentation_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< SpatioTemporalRepresentation,SpatioTemporalRepresentation_var > SpatioTemporalRepresentation_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SpatioTemporalRepresentation;

          enum MoveType { ASSERT, ACTION_DIRECTIVE, QUESTION_W, QUESTION_YN, OPENING, CLOSING, ACCEPT, REJECT /*, __max_MoveType=0xffffffff */ };
          typedef MoveType& MoveType_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_MoveType;

          struct DialogueMove {
            typedef _CORBA_ConstrType_Variable_Var<DialogueMove> _var_type;

            
            ::CORBA::String_member dmId;

            MoveType mType;

            ::CORBA::String_member SDRSFormulaId1;

            ::CORBA::String_member SDRSFormulaId2;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef DialogueMove::_var_type DialogueMove_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< DialogueMove,DialogueMove_var > DialogueMove_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_DialogueMove;

          struct GRETask {
            typedef _CORBA_ConstrType_Variable_Var<GRETask> _var_type;

            
            cast::cdl::WorkingMemoryPointer m_intendedReferentProxy;

            ::CORBA::Boolean m_done;

            ::CORBA::String_member m_resultLF;

          

            void operator>>= (cdrStream &) const;
            void operator<<= (cdrStream &);
          };

          typedef GRETask::_var_type GRETask_var;

          typedef _CORBA_ConstrType_Variable_OUT_arg< GRETask,GRETask_var > GRETask_out;

          _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_GRETask;

        _CORBA_MODULE_END

      _CORBA_MODULE_END

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE POA_org
_CORBA_MODULE_BEG

  _CORBA_MODULE cognitivesystems
  _CORBA_MODULE_BEG

    _CORBA_MODULE comsys
    _CORBA_MODULE_BEG

      _CORBA_MODULE autogen
      _CORBA_MODULE_BEG

        _CORBA_MODULE ComsysEssentials
        _CORBA_MODULE_BEG

        _CORBA_MODULE_END

      _CORBA_MODULE_END

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE OBV_org
_CORBA_MODULE_BEG

  _CORBA_MODULE cognitivesystems
  _CORBA_MODULE_BEG

    _CORBA_MODULE comsys
    _CORBA_MODULE_BEG

      _CORBA_MODULE autogen
      _CORBA_MODULE_BEG

        _CORBA_MODULE ComsysEssentials
        _CORBA_MODULE_BEG

        _CORBA_MODULE_END

      _CORBA_MODULE_END

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonString& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonString* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonString*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonString*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::AudioData& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::AudioData* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::AudioData*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::AudioData*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::BoggleWoggle& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::BoggleWoggle* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::BoggleWoggle*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::BoggleWoggle*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::RecogResult& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::RecogResult* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::RecogResult*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::RecogResult*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRule& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRule* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRule*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRule*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRulesAppliedForLF& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRulesAppliedForLF* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRulesAppliedForLF*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::NonStandardRulesAppliedForLF*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonStringLFPair& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonStringLFPair* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonStringLFPair*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::PhonStringLFPair*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::PackedLFs& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::PackedLFs* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::PackedLFs*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::PackedLFs*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::InterpretationSupport& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::InterpretationSupport* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::InterpretationSupport*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::InterpretationSupport*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::ContextInfo& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::ContextInfo* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::ContextInfo*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::ContextInfo*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SpokenOutputItem& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SpokenOutputItem* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SpokenOutputItem*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SpokenOutputItem*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::ContentPlanningGoal& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::ContentPlanningGoal* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::ContentPlanningGoal*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::ContentPlanningGoal*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::ProductionLF& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::ProductionLF* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::ProductionLF*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::ProductionLF*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::IndexAssociation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::IndexAssociation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::IndexAssociation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::IndexAssociation*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::CacheMapping& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::CacheMapping* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::CacheMapping*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::CacheMapping*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::Cache& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::Cache* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::Cache*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::Cache*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSRelation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSRelation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSRelation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSRelation*& _sp);

void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSType& _s);
void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSType* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSType*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSType*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSFormula& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSFormula* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSFormula*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRSFormula*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaPair& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaPair* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaPair*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaPair*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaMapping& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaMapping* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaMapping*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::LabelFormulaMapping*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRS& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRS* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRS*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SDRS*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::EventDiscRefRelation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::EventDiscRefRelation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::EventDiscRefRelation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::EventDiscRefRelation*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::Event& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::Event* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::Event*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::Event*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::StateDiscRefRelation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::StateDiscRefRelation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::StateDiscRefRelation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::StateDiscRefRelation*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::State& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::State* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::State*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::State*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::AspectualRelation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::AspectualRelation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::AspectualRelation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::AspectualRelation*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::TemporalRelation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::TemporalRelation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::TemporalRelation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::TemporalRelation*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::Nucleus& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::Nucleus* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::Nucleus*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::Nucleus*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::InterNucleusRelation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::InterNucleusRelation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::InterNucleusRelation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::InterNucleusRelation*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SpatioTemporalRepresentation& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SpatioTemporalRepresentation* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::SpatioTemporalRepresentation*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::SpatioTemporalRepresentation*& _sp);

inline void operator >>=(org::cognitivesystems::comsys::autogen::ComsysEssentials::MoveType _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (org::cognitivesystems::comsys::autogen::ComsysEssentials::MoveType& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= org::cognitivesystems::comsys::autogen::ComsysEssentials::REJECT) {
    _e = (org::cognitivesystems::comsys::autogen::ComsysEssentials::MoveType) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::MoveType _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::MoveType& _s);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::DialogueMove& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::DialogueMove* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::DialogueMove*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::DialogueMove*& _sp);

extern void operator<<=(::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::GRETask& _s);
extern void operator<<=(::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::GRETask* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, org::cognitivesystems::comsys::autogen::ComsysEssentials::GRETask*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const org::cognitivesystems::comsys::autogen::ComsysEssentials::GRETask*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_ComsysEssentials
#endif

#endif  // __ComsysEssentials_hh__

