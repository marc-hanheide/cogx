PROJECT(VisionTesting)
SET(SOURCES AbstractVisionTester.cpp)
SET(HEADERS AbstractVisionTester.hpp)
ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} FrameworkInterface FrameworkIDL FrameworkCore)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} CASTCore CASTArchitecture CASTIDL)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} Vision VisionIDL)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION lib)
INSTALL(FILES ${HEADERS} DESTINATION include/vision/testing)



PROJECT(VisionTester)
SET(SOURCES VisionTester.cpp)
SET(HEADERS VisionTester.hpp)
ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCES})

# Use pkg-config to find opencv libraries...
INCLUDE(UsePkgConfig)
PKGCONFIG("opencv" OCV_INCLUDE_DIR OCV_LINK_DIR OCV_LINK_FLAGS OCV_CFLAGS)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OCV_LINK_FLAGS})

#TARGET_LINK_LIBRARIES(${PROJECT_NAME} FrameworkInterface FrameworkIDL FrameworkCore)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} CASTCore CASTArchitecture CASTIDL)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} VisionTesting)

INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION lib)
INSTALL(FILES ${HEADERS} DESTINATION include/vision/testing)




PROJECT(VisionLrnTester)
SET(SOURCES VisionLrnTester.cpp)
SET(HEADERS VisionLrnTester.hpp)
ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCES})

# Use pkg-config to find opencv libraries...
INCLUDE(UsePkgConfig)
PKGCONFIG("opencv" OCV_INCLUDE_DIR OCV_LINK_DIR OCV_LINK_FLAGS OCV_CFLAGS)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OCV_LINK_FLAGS})

#TARGET_LINK_LIBRARIES(${PROJECT_NAME} FrameworkInterface FrameworkIDL FrameworkCore)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} CASTCore CASTArchitecture CASTIDL)
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} Vision VisionIDL VisionTesting)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} VisionTesting)

INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION lib)
INSTALL(FILES ${HEADERS} DESTINATION include/vision/testing)


PROJECT(VisionCSSTester)
SET(SOURCES VisionCSSTester.cpp)
SET(HEADERS VisionCSSTester.hpp)
ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCES})

# Use pkg-config to find opencv libraries...
INCLUDE(UsePkgConfig)
PKGCONFIG("opencv" OCV_INCLUDE_DIR OCV_LINK_DIR OCV_LINK_FLAGS OCV_CFLAGS)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OCV_LINK_FLAGS})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} VisionTesting)

INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION lib)
INSTALL(FILES ${HEADERS} DESTINATION include/vision/testing)
