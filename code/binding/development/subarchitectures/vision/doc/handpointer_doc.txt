/*!
\page main_handpointer Hand Pointer Component

\section desc_handpointer Description

The \p HandPointer component is a managed (goal driven) component that detects region of interest, which is being pointed by users (right) hand in the direction of index finger. This way the salient region of interest is detected. The \p HandPointer component is based on color segmentation and template matching. Because of used color segmentation, the camera has to be calibrated to corectly detect human skin color. The handpointing detection is triggered by \p ChangeDetector when the scene is changing. The \p HandPointer component processes frames of changing scene to detect pointing hand shape. If pointing hand is detected, it tries to find the first region of interest from the pointing hand in pointing direction. If pointed region of interest exists, its parameters are updated to working memory in IDL structure \p Vision::HandPointingResults.

\section conf_handpointer Configuration

CPP MG <name> HandPointer [-w] [-c camera]
\n

Options: \n
  -w .. show the color segmentation window \n
  -c .. specify which camera to observe, default \b 0 \n
  -b .. specify the location of skin color configuration file, default location = config/handpointer/color.txt

\section idl_segmentor Working Memory Items

\p Vision::SceneChanged \n
\p Vision::ROI \n
\p Vision::Camera \n
\p Vision::HandPointingResults \n

\section op_segmentor Working Memory Operations

Get(\p Vision::SceneChanged) \n
Get(\p Vision::ROI) \n
Get(\p Vision::Camera) \n
\n
Overwrite(\p Vision::HandPointingResults) \n

\section flt_segmentor Working Memory Filters

Overwrite(\p Vision::SceneChanged)

\sa \p Segmentor \n \p ChangeDetector \n \p VideoServer \n \p Vision::SceneChanged \n
\p Vision::ROI \n \p Vision::SceneObject \n \p Vision::HandPointingResults

*/


