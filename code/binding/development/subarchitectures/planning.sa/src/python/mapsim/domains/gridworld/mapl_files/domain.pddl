;; generated by MAPL2PDDL
(define (domain gridworld)
(:requirements :typing :adl)
(:types
   agent boolean - object 
   human robot planning_agent - agent 
   number - object 
   gridcell - object 
   gridcontent - object 
   agent - gridcontent 
   subgoal - object 
   feature - object 
   phys_obj - object 
   
)
(:predicates
  (occupant ?c - gridcell ?o - gridcontent)
  (i__occupant ?c - gridcell ?o - gridcontent)
  (kd__occupant ?agt0 - agent ?c - gridcell)
  (k__occupant ?agt0 - agent ?c - gridcell)
  (i__kd__occupant ?agt0 - agent ?c - gridcell)
  (connected ?c1 - gridcell ?c2 - gridcell)
  (i__connected ?c1 - gridcell ?c2 - gridcell)
  (kd__connected ?agt0 - agent ?c1 - gridcell ?c2 - gridcell)
  (k__connected ?agt0 - agent ?c1 - gridcell ?c2 - gridcell)
  (i__kd__connected ?agt0 - agent ?c1 - gridcell ?c2 - gridcell)
  (in-sensing-distance ?c1 - gridcell ?c2 - gridcell)
  (i__in-sensing-distance ?c1 - gridcell ?c2 - gridcell)
  (kd__in-sensing-distance ?agt0 - agent ?c1 - gridcell ?c2 - gridcell)
  (k__in-sensing-distance ?agt0 - agent ?c1 - gridcell ?c2 - gridcell)
  (i__kd__in-sensing-distance ?agt0 - agent ?c1 - gridcell ?c2 - gridcell)
  (achieved ?sg - subgoal)
  (i__achieved ?sg - subgoal)
  (kd__achieved ?agt0 - agent ?sg - subgoal)
  (k__achieved ?agt0 - agent ?sg - subgoal)
  (i__kd__achieved ?agt0 - agent ?sg - subgoal)
)
(:constants
  empty - gridcontent
  obstacle - gridcontent
  true - boolean
  false - boolean
)

(:derived (k__occupant ?_a - planning_agent ?c - gridcell)
    (exists (?v - gridcontent)
      (occupant ?c ?v)
    )
)

(:derived (k__occupant ?_a - agent ?c - gridcell)
    (kd__occupant ?_a ?c)
)

(:derived (k__connected ?_a - planning_agent ?c1 - gridcell ?c2 - gridcell)
    (or
      (connected ?c1 ?c2)
      (not (connected ?c1 ?c2))
    )
)

(:derived (k__connected ?_a - agent ?c1 - gridcell ?c2 - gridcell)
    (kd__connected ?_a ?c1 ?c2)
)

(:derived (k__in-sensing-distance ?_a - planning_agent ?c1 - gridcell ?c2 - gridcell)
    (or
      (in-sensing-distance ?c1 ?c2)
      (not (in-sensing-distance ?c1 ?c2))
    )
)

(:derived (k__in-sensing-distance ?_a - agent ?c1 - gridcell ?c2 - gridcell)
    (kd__in-sensing-distance ?_a ?c1 ?c2)
)

(:action move
 :parameters (?a - agent ?c - gridcell ?ca - gridcell)
 :precondition
    (and
      (occupant ?ca ?a)
      (occupant ?c empty)
      (connected ?c ?ca)
    )
 :effect (and
    (occupant ?c ?a)
    (occupant ?ca empty)
    (forall (?_v4 - gridcontent)
      (when
        (and
          (occupant ?c ?_v4)
        )
        (not (occupant ?c ?_v4))
        )
    )
    (forall (?_v5 - gridcontent)
      (when
        (and
          (occupant ?ca ?_v5)
        )
        (not (occupant ?ca ?_v5))
        )
    )
))

(:action move_a
 :parameters (?_pa - planning_agent ?a - agent ?c - gridcell ?ca - gridcell)
 :precondition
   (and
      (and
        (occupant ?ca ?a)
      )
      (and
        (k__occupant ?_pa ?c)
      )
    )
 :effect (and
    (occupant ?c ?a)
    (occupant ?ca empty)
    (forall (?_v6 - gridcontent)
      (when
        (and
          (occupant ?c ?_v6)
        )
        (not (occupant ?c ?_v6))
        )
    )
    (forall (?_v7 - gridcontent)
      (when
        (and
          (occupant ?ca ?_v7)
        )
        (not (occupant ?ca ?_v7))
        )
    )
))

(:action __sensor__sense-gridcell
 :parameters (?p0 - agent ?p1 - gridcell ?p2 - gridcell)
 :precondition
    (and
      (occupant ?p2 ?p0)
      (in-sensing-distance ?p2 ?p1)
    )
 :effect (and (kd__occupant ?p0 ?p1))
)
)
