(define (domain cosydomain)
(:requirements :mapl :adl)

(:types 
   agent movable waypoint feature - object
   visible colour size - feature
   ball cube block pyramid - movable
   robot human self_agent - agent
)

(:constants
	true false - boolean
	blue red green black white - colour
	small big - size
	mr_chips - robot
	mr_chips - self_agent
    michael - human
)

(:predicates
  (right_of ?wp1 ?wp2 - waypoint)
  (left_of ?wp1 ?wp2 - waypoint)
  (front_of ?wp1 ?wp2 - waypoint)
  (back_of ?wp1 ?wp2 - waypoint)
  (near ?wp1 ?wp2 - waypoint)
  (pos ?obj - movable ?wp - (either waypoint agent))
  (colour ?obj - movable ?col - colour)	
  (size ?obj - movable ?s - size)	
  (visible ?obj - movable ?b - boolean)	
)

(:action put
 :parameters (?a - robot ?obj - movable ?np - waypoint)
 :precondition (and
	(pos ?obj ?a) 
	(not (exists (?obj2 - movable) (pos ?obj2 ?np))))
 :effect (and
	(pos ?obj ?np) (not (pos ?obj ?a))
))
 

(:action pickup
 :parameters (?a - robot ?obj - movable ?op - waypoint)
 :precondition (and
	(pos ?obj ?op) 
	(not (exists (?obj2 - movable) (pos ?obj2 ?a))))
 :effect (and
	(pos ?obj ?a) (not (pos ?obj ?op))
))
 

)