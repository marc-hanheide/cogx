// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __TestingData_hh__
#define __TestingData_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_TestingData
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_TestingData
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_TestingData
#endif



#ifndef __FrameworkBasics_hh_EXTERNAL_GUARD__
#define __FrameworkBasics_hh_EXTERNAL_GUARD__
#include <balt/idl/FrameworkBasics.hh>
#endif
#ifndef __CAST_hh_EXTERNAL_GUARD__
#define __CAST_hh_EXTERNAL_GUARD__
#include <cast/cdl/CAST.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE TestingData

_CORBA_MODULE_BEG

  _CORBA_MODULE_VAR _core_attr const char * TESTING_SUBARCH_CONFIG_KEY;

  _CORBA_MODULE_VARINT const ::CORBA::Char TESTING_COMMAND_DELIMITER _init_in_decl_( = ';' );

  _CORBA_MODULE_VARINT const ::CORBA::Char TESTING_HEADER_DELIMITER _init_in_decl_( = ':' );

  _CORBA_MODULE_VAR _core_attr const char * TESTING_METACOMMAND_PREFIX;

  enum TestingCommandStatus { ISSUED, COMPLETED /*, __max_TestingCommandStatus=0xffffffff */ };
  typedef TestingCommandStatus& TestingCommandStatus_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TestingCommandStatus;

  struct TestingCommand {
    typedef _CORBA_ConstrType_Variable_Var<TestingCommand> _var_type;

    
    TestingCommandStatus m_status;

    ::CORBA::String_member m_command;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef TestingCommand::_var_type TestingCommand_var;

  typedef _CORBA_ConstrType_Variable_OUT_arg< TestingCommand,TestingCommand_var > TestingCommand_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_TestingCommand;

_CORBA_MODULE_END



_CORBA_MODULE POA_TestingData
_CORBA_MODULE_BEG

_CORBA_MODULE_END



_CORBA_MODULE OBV_TestingData
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

inline void operator >>=(TestingData::TestingCommandStatus _e, cdrStream& s) {
  ::operator>>=((::CORBA::ULong)_e, s);
}

inline void operator <<= (TestingData::TestingCommandStatus& _e, cdrStream& s) {
  ::CORBA::ULong _0RL_e;
  ::operator<<=(_0RL_e,s);
  if (_0RL_e <= TestingData::COMPLETED) {
    _e = (TestingData::TestingCommandStatus) _0RL_e;
  }
  else {
    OMNIORB_THROW(MARSHAL,_OMNI_NS(MARSHAL_InvalidEnumValue),
                  (::CORBA::CompletionStatus)s.completion());
  }
}

void operator<<=(::CORBA::Any& _a, TestingData::TestingCommandStatus _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TestingData::TestingCommandStatus& _s);

extern void operator<<=(::CORBA::Any& _a, const TestingData::TestingCommand& _s);
extern void operator<<=(::CORBA::Any& _a, TestingData::TestingCommand* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, TestingData::TestingCommand*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const TestingData::TestingCommand*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_TestingData
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_TestingData
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_TestingData
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_TestingData
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_TestingData
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_TestingData
#endif

#endif  // __TestingData_hh__

