// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "TestingData.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace TestingData { 
  extern const char * TESTING_SUBARCH_CONFIG_KEY = "-tsa";
} 
#else
const char * TestingData::TESTING_SUBARCH_CONFIG_KEY = "-tsa";
#endif

_init_in_def_( const ::CORBA::Char TestingData::TESTING_COMMAND_DELIMITER = ';'; )

_init_in_def_( const ::CORBA::Char TestingData::TESTING_HEADER_DELIMITER = ':'; )

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage othewise.
namespace TestingData { 
  extern const char * TESTING_METACOMMAND_PREFIX = "self";
} 
#else
const char * TestingData::TESTING_METACOMMAND_PREFIX = "self";
#endif

void
TestingData::TestingCommand::operator>>= (cdrStream &_n) const
{
  m_status >>= _n;
  _n.marshalString(m_command,0);

}

void
TestingData::TestingCommand::operator<<= (cdrStream &_n)
{
  (TestingCommandStatus&)m_status <<= _n;
  m_command = _n.unmarshalString(0);

}

