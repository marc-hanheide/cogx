// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "guitypes.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



_init_in_def_( const ::CORBA::Long cast::cdl::guitypes::NONE = 0; )

_init_in_def_( const ::CORBA::Long cast::cdl::guitypes::FAT = 1; )

_init_in_def_( const ::CORBA::Long cast::cdl::guitypes::FILLED = 2; )

void
cast::cdl::guitypes::RGBColor::operator>>= (cdrStream &_n) const
{
  m_r >>= _n;
  m_g >>= _n;
  m_b >>= _n;

}

void
cast::cdl::guitypes::RGBColor::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)m_r <<= _n;
  (::CORBA::Long&)m_g <<= _n;
  (::CORBA::Long&)m_b <<= _n;

}

void
cast::cdl::guitypes::RGBImage::operator>>= (cdrStream &_n) const
{
  m_width >>= _n;
  m_height >>= _n;
  (const _CORBA_Unbounded_Sequence_Octet&) m_rgbBuffer >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::RGBImage::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)m_width <<= _n;
  (::CORBA::Long&)m_height <<= _n;
  (_CORBA_Unbounded_Sequence_Octet&)m_rgbBuffer <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Text2D::operator>>= (cdrStream &_n) const
{
  m_x >>= _n;
  m_y >>= _n;
  _n.marshalString(m_text,0);
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Text2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_x <<= _n;
  (::CORBA::Double&)m_y <<= _n;
  m_text = _n.unmarshalString(0);
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Point2D::operator>>= (cdrStream &_n) const
{
  m_x >>= _n;
  m_y >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Point2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_x <<= _n;
  (::CORBA::Double&)m_y <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Line2D::operator>>= (cdrStream &_n) const
{
  m_x1 >>= _n;
  m_y1 >>= _n;
  m_x2 >>= _n;
  m_y2 >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Line2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_x1 <<= _n;
  (::CORBA::Double&)m_y1 <<= _n;
  (::CORBA::Double&)m_x2 <<= _n;
  (::CORBA::Double&)m_y2 <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Rect2D::operator>>= (cdrStream &_n) const
{
  m_xmin >>= _n;
  m_ymin >>= _n;
  m_xmax >>= _n;
  m_ymax >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Rect2D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_xmin <<= _n;
  (::CORBA::Double&)m_ymin <<= _n;
  (::CORBA::Double&)m_xmax <<= _n;
  (::CORBA::Double&)m_ymax <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Polygon2D::operator>>= (cdrStream &_n) const
{
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) m_x >>= _n;
  (const _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &) m_y >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Polygon2D::operator<<= (cdrStream &_n)
{
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)m_x <<= _n;
  (_CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 > &)m_y <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Text3D::operator>>= (cdrStream &_n) const
{
  m_x >>= _n;
  m_y >>= _n;
  m_z >>= _n;
  _n.marshalString(m_text,0);
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Text3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_x <<= _n;
  (::CORBA::Double&)m_y <<= _n;
  (::CORBA::Double&)m_z <<= _n;
  m_text = _n.unmarshalString(0);
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Point3D::operator>>= (cdrStream &_n) const
{
  m_x >>= _n;
  m_y >>= _n;
  m_z >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Point3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_x <<= _n;
  (::CORBA::Double&)m_y <<= _n;
  (::CORBA::Double&)m_z <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Line3D::operator>>= (cdrStream &_n) const
{
  m_x1 >>= _n;
  m_y1 >>= _n;
  m_z1 >>= _n;
  m_x2 >>= _n;
  m_y2 >>= _n;
  m_z2 >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Line3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_x1 <<= _n;
  (::CORBA::Double&)m_y1 <<= _n;
  (::CORBA::Double&)m_z1 <<= _n;
  (::CORBA::Double&)m_x2 <<= _n;
  (::CORBA::Double&)m_y2 <<= _n;
  (::CORBA::Double&)m_z2 <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Box3D::operator>>= (cdrStream &_n) const
{
  m_cx >>= _n;
  m_cy >>= _n;
  m_cz >>= _n;
  m_sx >>= _n;
  m_sy >>= _n;
  m_sz >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Box3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_cx <<= _n;
  (::CORBA::Double&)m_cy <<= _n;
  (::CORBA::Double&)m_cz <<= _n;
  (::CORBA::Double&)m_sx <<= _n;
  (::CORBA::Double&)m_sy <<= _n;
  (::CORBA::Double&)m_sz <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::Frame3D::operator>>= (cdrStream &_n) const
{
  m_px >>= _n;
  m_py >>= _n;
  m_pz >>= _n;
  m_rx >>= _n;
  m_ry >>= _n;
  m_rz >>= _n;
  (const RGBColor&) m_color >>= _n;
  m_flags >>= _n;

}

void
cast::cdl::guitypes::Frame3D::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)m_px <<= _n;
  (::CORBA::Double&)m_py <<= _n;
  (::CORBA::Double&)m_pz <<= _n;
  (::CORBA::Double&)m_rx <<= _n;
  (::CORBA::Double&)m_ry <<= _n;
  (::CORBA::Double&)m_rz <<= _n;
  (RGBColor&)m_color <<= _n;
  (::CORBA::Long&)m_flags <<= _n;

}

void
cast::cdl::guitypes::DrawBatch::operator>>= (cdrStream &_n) const
{
  _n.marshalString(m_compID,0);
  (const RGBImage&) m_image >>= _n;
  (const _CORBA_Unbounded_Sequence< Text2D > &) m_text2Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Point2D > &) m_point2Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Line2D > &) m_line2Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Rect2D > &) m_rect2Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Polygon2D > &) m_poly2Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Text3D > &) m_text3Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Point3D > &) m_point3Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Line3D > &) m_line3Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Box3D > &) m_box3Ds >>= _n;
  (const _CORBA_Unbounded_Sequence< Frame3D > &) m_frame3Ds >>= _n;
  (const _CORBA_Unbounded_Sequence_String&) m_texts >>= _n;

}

void
cast::cdl::guitypes::DrawBatch::operator<<= (cdrStream &_n)
{
  m_compID = _n.unmarshalString(0);
  (RGBImage&)m_image <<= _n;
  (_CORBA_Unbounded_Sequence< Text2D > &)m_text2Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Point2D > &)m_point2Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Line2D > &)m_line2Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Rect2D > &)m_rect2Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Polygon2D > &)m_poly2Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Text3D > &)m_text3Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Point3D > &)m_point3Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Line3D > &)m_line3Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Box3D > &)m_box3Ds <<= _n;
  (_CORBA_Unbounded_Sequence< Frame3D > &)m_frame3Ds <<= _n;
  (_CORBA_Unbounded_Sequence_String&)m_texts <<= _n;

}

