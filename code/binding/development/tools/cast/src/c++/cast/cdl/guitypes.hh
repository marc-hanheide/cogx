// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __guitypes_hh__
#define __guitypes_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_guitypes
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_guitypes
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_guitypes
#endif






#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE cast

_CORBA_MODULE_BEG

  _CORBA_MODULE cdl

  _CORBA_MODULE_BEG

    _CORBA_MODULE guitypes

    _CORBA_MODULE_BEG

      _CORBA_MODULE_VARINT const ::CORBA::Long NONE _init_in_decl_( = 0 );

      _CORBA_MODULE_VARINT const ::CORBA::Long FAT _init_in_decl_( = 1 );

      _CORBA_MODULE_VARINT const ::CORBA::Long FILLED _init_in_decl_( = 2 );

      struct RGBColor {
        typedef _CORBA_ConstrType_Fix_Var<RGBColor> _var_type;

        
        ::CORBA::Long m_r;

        ::CORBA::Long m_g;

        ::CORBA::Long m_b;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef RGBColor::_var_type RGBColor_var;

      typedef RGBColor& RGBColor_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_RGBColor;

      struct RGBImage {
        typedef _CORBA_ConstrType_Variable_Var<RGBImage> _var_type;

        
        ::CORBA::Long m_width;

        ::CORBA::Long m_height;

        typedef _CORBA_Unbounded_Sequence_Octet _m_rgbBuffer_seq;
        _m_rgbBuffer_seq m_rgbBuffer;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef RGBImage::_var_type RGBImage_var;

      typedef _CORBA_ConstrType_Variable_OUT_arg< RGBImage,RGBImage_var > RGBImage_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_RGBImage;

      struct Text2D {
        typedef _CORBA_ConstrType_Variable_Var<Text2D> _var_type;

        
        ::CORBA::Double m_x;

        ::CORBA::Double m_y;

        ::CORBA::String_member m_text;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Text2D::_var_type Text2D_var;

      typedef _CORBA_ConstrType_Variable_OUT_arg< Text2D,Text2D_var > Text2D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Text2D;

      struct Point2D {
        typedef _CORBA_ConstrType_Fix_Var<Point2D> _var_type;

        
        ::CORBA::Double m_x;

        ::CORBA::Double m_y;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Point2D::_var_type Point2D_var;

      typedef Point2D& Point2D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Point2D;

      struct Line2D {
        typedef _CORBA_ConstrType_Fix_Var<Line2D> _var_type;

        
        ::CORBA::Double m_x1;

        ::CORBA::Double m_y1;

        ::CORBA::Double m_x2;

        ::CORBA::Double m_y2;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Line2D::_var_type Line2D_var;

      typedef Line2D& Line2D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Line2D;

      struct Rect2D {
        typedef _CORBA_ConstrType_Fix_Var<Rect2D> _var_type;

        
        ::CORBA::Double m_xmin;

        ::CORBA::Double m_ymin;

        ::CORBA::Double m_xmax;

        ::CORBA::Double m_ymax;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Rect2D::_var_type Rect2D_var;

      typedef Rect2D& Rect2D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Rect2D;

      struct Polygon2D {
        typedef _CORBA_ConstrType_Variable_Var<Polygon2D> _var_type;

        
        typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _m_x_seq;
        _m_x_seq m_x;

        typedef _CORBA_Unbounded_Sequence_w_FixSizeElement< ::CORBA::Double, 8, 8 >  _m_y_seq;
        _m_y_seq m_y;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Polygon2D::_var_type Polygon2D_var;

      typedef _CORBA_ConstrType_Variable_OUT_arg< Polygon2D,Polygon2D_var > Polygon2D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Polygon2D;

      struct Text3D {
        typedef _CORBA_ConstrType_Variable_Var<Text3D> _var_type;

        
        ::CORBA::Double m_x;

        ::CORBA::Double m_y;

        ::CORBA::Double m_z;

        ::CORBA::String_member m_text;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Text3D::_var_type Text3D_var;

      typedef _CORBA_ConstrType_Variable_OUT_arg< Text3D,Text3D_var > Text3D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Text3D;

      struct Point3D {
        typedef _CORBA_ConstrType_Fix_Var<Point3D> _var_type;

        
        ::CORBA::Double m_x;

        ::CORBA::Double m_y;

        ::CORBA::Double m_z;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Point3D::_var_type Point3D_var;

      typedef Point3D& Point3D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Point3D;

      struct Line3D {
        typedef _CORBA_ConstrType_Fix_Var<Line3D> _var_type;

        
        ::CORBA::Double m_x1;

        ::CORBA::Double m_y1;

        ::CORBA::Double m_z1;

        ::CORBA::Double m_x2;

        ::CORBA::Double m_y2;

        ::CORBA::Double m_z2;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Line3D::_var_type Line3D_var;

      typedef Line3D& Line3D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Line3D;

      struct Box3D {
        typedef _CORBA_ConstrType_Fix_Var<Box3D> _var_type;

        
        ::CORBA::Double m_cx;

        ::CORBA::Double m_cy;

        ::CORBA::Double m_cz;

        ::CORBA::Double m_sx;

        ::CORBA::Double m_sy;

        ::CORBA::Double m_sz;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Box3D::_var_type Box3D_var;

      typedef Box3D& Box3D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Box3D;

      struct Frame3D {
        typedef _CORBA_ConstrType_Fix_Var<Frame3D> _var_type;

        
        ::CORBA::Double m_px;

        ::CORBA::Double m_py;

        ::CORBA::Double m_pz;

        ::CORBA::Double m_rx;

        ::CORBA::Double m_ry;

        ::CORBA::Double m_rz;

        RGBColor m_color;

        ::CORBA::Long m_flags;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef Frame3D::_var_type Frame3D_var;

      typedef Frame3D& Frame3D_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Frame3D;

      struct DrawBatch {
        typedef _CORBA_ConstrType_Variable_Var<DrawBatch> _var_type;

        
        ::CORBA::String_member m_compID;

        RGBImage m_image;

        typedef _CORBA_Unbounded_Sequence< Text2D >  _m_text2Ds_seq;
        _m_text2Ds_seq m_text2Ds;

        typedef _CORBA_Unbounded_Sequence< Point2D >  _m_point2Ds_seq;
        _m_point2Ds_seq m_point2Ds;

        typedef _CORBA_Unbounded_Sequence< Line2D >  _m_line2Ds_seq;
        _m_line2Ds_seq m_line2Ds;

        typedef _CORBA_Unbounded_Sequence< Rect2D >  _m_rect2Ds_seq;
        _m_rect2Ds_seq m_rect2Ds;

        typedef _CORBA_Unbounded_Sequence< Polygon2D >  _m_poly2Ds_seq;
        _m_poly2Ds_seq m_poly2Ds;

        typedef _CORBA_Unbounded_Sequence< Text3D >  _m_text3Ds_seq;
        _m_text3Ds_seq m_text3Ds;

        typedef _CORBA_Unbounded_Sequence< Point3D >  _m_point3Ds_seq;
        _m_point3Ds_seq m_point3Ds;

        typedef _CORBA_Unbounded_Sequence< Line3D >  _m_line3Ds_seq;
        _m_line3Ds_seq m_line3Ds;

        typedef _CORBA_Unbounded_Sequence< Box3D >  _m_box3Ds_seq;
        _m_box3Ds_seq m_box3Ds;

        typedef _CORBA_Unbounded_Sequence< Frame3D >  _m_frame3Ds_seq;
        _m_frame3Ds_seq m_frame3Ds;

        typedef _CORBA_Unbounded_Sequence_String _m_texts_seq;
        _m_texts_seq m_texts;

      

        void operator>>= (cdrStream &) const;
        void operator<<= (cdrStream &);
      };

      typedef DrawBatch::_var_type DrawBatch_var;

      typedef _CORBA_ConstrType_Variable_OUT_arg< DrawBatch,DrawBatch_var > DrawBatch_out;

      _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_DrawBatch;

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE POA_cast
_CORBA_MODULE_BEG

  _CORBA_MODULE cdl
  _CORBA_MODULE_BEG

    _CORBA_MODULE guitypes
    _CORBA_MODULE_BEG

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END



_CORBA_MODULE OBV_cast
_CORBA_MODULE_BEG

  _CORBA_MODULE cdl
  _CORBA_MODULE_BEG

    _CORBA_MODULE guitypes
    _CORBA_MODULE_BEG

    _CORBA_MODULE_END

  _CORBA_MODULE_END

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::RGBColor& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::RGBColor* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::RGBColor*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::RGBColor*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::RGBImage& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::RGBImage* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::RGBImage*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::RGBImage*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Text2D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Text2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Text2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Text2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Point2D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Point2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Point2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Point2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Line2D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Line2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Line2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Line2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Rect2D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Rect2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Rect2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Rect2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Polygon2D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Polygon2D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Polygon2D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Polygon2D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Text3D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Text3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Text3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Text3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Point3D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Point3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Point3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Point3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Line3D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Line3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Line3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Line3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Box3D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Box3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Box3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Box3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::Frame3D& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::Frame3D* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::Frame3D*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::Frame3D*& _sp);

extern void operator<<=(::CORBA::Any& _a, const cast::cdl::guitypes::DrawBatch& _s);
extern void operator<<=(::CORBA::Any& _a, cast::cdl::guitypes::DrawBatch* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, cast::cdl::guitypes::DrawBatch*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const cast::cdl::guitypes::DrawBatch*& _sp);





#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_guitypes
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_guitypes
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_guitypes
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_guitypes
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_guitypes
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_guitypes
#endif

#endif  // __guitypes_hh__

