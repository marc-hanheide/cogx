package cast.cdl.guitypes;


/**
* cast/cdl/guitypes/Line3DHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from guitypes.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/

abstract public class Line3DHelper
{
  private static String  _id = "IDL:cast/cdl/guitypes/Line3D:1.0";

  public static void insert (org.omg.CORBA.Any a, cast.cdl.guitypes.Line3D that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static cast.cdl.guitypes.Line3D extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [8];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[0] = new org.omg.CORBA.StructMember (
            "m_x1",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[1] = new org.omg.CORBA.StructMember (
            "m_y1",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[2] = new org.omg.CORBA.StructMember (
            "m_z1",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[3] = new org.omg.CORBA.StructMember (
            "m_x2",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[4] = new org.omg.CORBA.StructMember (
            "m_y2",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_double);
          _members0[5] = new org.omg.CORBA.StructMember (
            "m_z2",
            _tcOf_members0,
            null);
          _tcOf_members0 = cast.cdl.guitypes.RGBColorHelper.type ();
          _members0[6] = new org.omg.CORBA.StructMember (
            "m_color",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[7] = new org.omg.CORBA.StructMember (
            "m_flags",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (cast.cdl.guitypes.Line3DHelper.id (), "Line3D", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static cast.cdl.guitypes.Line3D read (org.omg.CORBA.portable.InputStream istream)
  {
    cast.cdl.guitypes.Line3D value = new cast.cdl.guitypes.Line3D ();
    value.m_x1 = istream.read_double ();
    value.m_y1 = istream.read_double ();
    value.m_z1 = istream.read_double ();
    value.m_x2 = istream.read_double ();
    value.m_y2 = istream.read_double ();
    value.m_z2 = istream.read_double ();
    value.m_color = cast.cdl.guitypes.RGBColorHelper.read (istream);
    value.m_flags = istream.read_long ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, cast.cdl.guitypes.Line3D value)
  {
    ostream.write_double (value.m_x1);
    ostream.write_double (value.m_y1);
    ostream.write_double (value.m_z1);
    ostream.write_double (value.m_x2);
    ostream.write_double (value.m_y2);
    ostream.write_double (value.m_z2);
    cast.cdl.guitypes.RGBColorHelper.write (ostream, value.m_color);
    ostream.write_long (value.m_flags);
  }

}
