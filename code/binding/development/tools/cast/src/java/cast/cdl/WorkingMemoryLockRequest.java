package cast.cdl;


/**
* cast/cdl/WorkingMemoryLockRequest.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CAST.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/


/*
     * Enum indicating the result of a wm lock query.
     */
public class WorkingMemoryLockRequest implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 8;
  private static cast.cdl.WorkingMemoryLockRequest[] __array = new cast.cdl.WorkingMemoryLockRequest [__size];

  public static final int _REQUEST_LOCK_O = 0;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_LOCK_O = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_LOCK_O);
  public static final int _REQUEST_LOCK_OD = 1;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_LOCK_OD = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_LOCK_OD);
  public static final int _REQUEST_LOCK_ODR = 2;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_LOCK_ODR = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_LOCK_ODR);
  public static final int _REQUEST_TRY_LOCK_O = 3;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_TRY_LOCK_O = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_TRY_LOCK_O);
  public static final int _REQUEST_TRY_LOCK_OD = 4;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_TRY_LOCK_OD = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_TRY_LOCK_OD);
  public static final int _REQUEST_TRY_LOCK_ODR = 5;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_TRY_LOCK_ODR = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_TRY_LOCK_ODR);
  public static final int _REQUEST_UNLOCK = 6;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_UNLOCK = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_UNLOCK);
  public static final int _REQUEST_STATUS = 7;
  public static final cast.cdl.WorkingMemoryLockRequest REQUEST_STATUS = new cast.cdl.WorkingMemoryLockRequest(_REQUEST_STATUS);

  public int value ()
  {
    return __value;
  }

  public static cast.cdl.WorkingMemoryLockRequest from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected WorkingMemoryLockRequest (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class WorkingMemoryLockRequest
