package cast.cdl;


/**
* cast/cdl/OperationMode.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CAST.idl
* Freitag, 13. MŠrz 2009 17.31 Uhr CET
*/


/*
    * Enum indicating how a working memory operation should be
    * performed.
    */
public class OperationMode implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 2;
  private static cast.cdl.OperationMode[] __array = new cast.cdl.OperationMode [__size];

  public static final int _BLOCKING = 0;
  public static final cast.cdl.OperationMode BLOCKING = new cast.cdl.OperationMode(_BLOCKING);
  public static final int _NON_BLOCKING = 1;
  public static final cast.cdl.OperationMode NON_BLOCKING = new cast.cdl.OperationMode(_NON_BLOCKING);

  public int value ()
  {
    return __value;
  }

  public static cast.cdl.OperationMode from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected OperationMode (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class OperationMode
