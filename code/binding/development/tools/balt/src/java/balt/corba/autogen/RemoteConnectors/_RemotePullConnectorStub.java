package balt.corba.autogen.RemoteConnectors;


/**
* balt/corba/autogen/RemoteConnectors/_RemotePullConnectorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from RemoteConnector.idl
* Donnerstag, 14. Mai 2009 22.09 Uhr CEST
*/

public class _RemotePullConnectorStub extends org.omg.CORBA.portable.ObjectImpl implements balt.corba.autogen.RemoteConnectors.RemotePullConnector
{


  /**
       * Pull data from the connector.
       *
       * @param _src The ID of the process doing the pulling.
       * @param _query The query attached to the pull.
       */
  public org.omg.CORBA.Any pull (String _src, String _query)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("pull", true);
                balt.corba.autogen.FrameworkBasics.FrameworkProcessIDHelper.write ($out, _src);
                balt.corba.autogen.FrameworkData.RemoteFrameworkQueryHelper.write ($out, _query);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return pull (_src, _query        );
            } finally {
                _releaseReply ($in);
            }
  } // pull


  /**
       * Register a pull receiver process with the connector.
       * 
       * @param _pr The process that receives pulls.
       */
  public void registerPullReceiver (balt.corba.autogen.RemoteConnectors.RemotePullReceiver _pr)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("registerPullReceiver", true);
                balt.corba.autogen.RemoteConnectors.RemotePullReceiverHelper.write ($out, _pr);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                registerPullReceiver (_pr        );
            } finally {
                _releaseReply ($in);
            }
  } // registerPullReceiver

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:RemoteConnectors/RemotePullConnector:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _RemotePullConnectorStub
