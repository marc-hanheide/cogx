// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "RemoteConnector.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



RemoteConnectors::RemotePushReceiver_ptr RemoteConnectors::RemotePushReceiver_Helper::_nil() {
  return ::RemoteConnectors::RemotePushReceiver::_nil();
}

::CORBA::Boolean RemoteConnectors::RemotePushReceiver_Helper::is_nil(::RemoteConnectors::RemotePushReceiver_ptr p) {
  return ::CORBA::is_nil(p);

}

void RemoteConnectors::RemotePushReceiver_Helper::release(::RemoteConnectors::RemotePushReceiver_ptr p) {
  ::CORBA::release(p);
}

void RemoteConnectors::RemotePushReceiver_Helper::marshalObjRef(::RemoteConnectors::RemotePushReceiver_ptr obj, cdrStream& s) {
  ::RemoteConnectors::RemotePushReceiver::_marshalObjRef(obj, s);
}

RemoteConnectors::RemotePushReceiver_ptr RemoteConnectors::RemotePushReceiver_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RemoteConnectors::RemotePushReceiver::_unmarshalObjRef(s);
}

void RemoteConnectors::RemotePushReceiver_Helper::duplicate(::RemoteConnectors::RemotePushReceiver_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RemoteConnectors::RemotePushReceiver_ptr
RemoteConnectors::RemotePushReceiver::_duplicate(::RemoteConnectors::RemotePushReceiver_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RemoteConnectors::RemotePushReceiver_ptr
RemoteConnectors::RemotePushReceiver::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RemoteConnectors::RemotePushReceiver_ptr
RemoteConnectors::RemotePushReceiver::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RemoteConnectors::RemotePushReceiver_ptr
RemoteConnectors::RemotePushReceiver::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RemotePushReceiver _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RemotePushReceiver* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RemotePushReceiver;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RemoteConnectors::RemotePushReceiver::_PD_repoId = "IDL:RemoteConnectors/RemotePushReceiver:1.0";


RemoteConnectors::_objref_RemotePushReceiver::~_objref_RemotePushReceiver() {
  
}


RemoteConnectors::_objref_RemotePushReceiver::_objref_RemotePushReceiver(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RemoteConnectors::RemotePushReceiver::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
RemoteConnectors::_objref_RemotePushReceiver::_ptrToObjRef(const char* id)
{
  if( id == ::RemoteConnectors::RemotePushReceiver::_PD_repoId )
    return (::RemoteConnectors::RemotePushReceiver_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePushReceiver::_PD_repoId) )
    return (::RemoteConnectors::RemotePushReceiver_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_cany
class _0RL_cd_9b916532f5372757_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::Any_var arg_1_;
  const ::CORBA::Any* arg_1;
};

void _0RL_cd_9b916532f5372757_00000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  (const ::CORBA::Any&) *arg_1 >>= _n;

}

void _0RL_cd_9b916532f5372757_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = new ::CORBA::Any;
  (::CORBA::Any&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_00000000* tcd = (_0RL_cd_9b916532f5372757_00000000*)cd;
  RemoteConnectors::_impl_RemotePushReceiver* impl = (RemoteConnectors::_impl_RemotePushReceiver*) svnt->_ptrToInterface(RemoteConnectors::RemotePushReceiver::_PD_repoId);
  impl->receivePushData(tcd->arg_0, *tcd->arg_1);


}

void RemoteConnectors::_objref_RemotePushReceiver::receivePushData(const char* src, const ::CORBA::Any& data)
{
  _0RL_cd_9b916532f5372757_00000000 _call_desc(_0RL_lcfn_9b916532f5372757_10000000, "receivePushData", 16);
  _call_desc.arg_0 = src;
  _call_desc.arg_1 = &(::CORBA::Any&) data;

  _invoke(_call_desc);



}
RemoteConnectors::_pof_RemotePushReceiver::~_pof_RemotePushReceiver() {}


omniObjRef*
RemoteConnectors::_pof_RemotePushReceiver::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::RemoteConnectors::_objref_RemotePushReceiver(ior, id);
}


::CORBA::Boolean
RemoteConnectors::_pof_RemotePushReceiver::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RemoteConnectors::RemotePushReceiver::_PD_repoId) )
    return 1;
  
  return 0;
}

const RemoteConnectors::_pof_RemotePushReceiver _the_pof_RemoteConnectors_mRemotePushReceiver;

RemoteConnectors::_impl_RemotePushReceiver::~_impl_RemotePushReceiver() {}


::CORBA::Boolean
RemoteConnectors::_impl_RemotePushReceiver::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "receivePushData") ) {

    _0RL_cd_9b916532f5372757_00000000 _call_desc(_0RL_lcfn_9b916532f5372757_10000000, "receivePushData", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
RemoteConnectors::_impl_RemotePushReceiver::_ptrToInterface(const char* id)
{
  if( id == ::RemoteConnectors::RemotePushReceiver::_PD_repoId )
    return (::RemoteConnectors::_impl_RemotePushReceiver*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePushReceiver::_PD_repoId) )
    return (::RemoteConnectors::_impl_RemotePushReceiver*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
RemoteConnectors::_impl_RemotePushReceiver::_mostDerivedRepoId()
{
  return ::RemoteConnectors::RemotePushReceiver::_PD_repoId;
}

RemoteConnectors::RemotePushConnector_ptr RemoteConnectors::RemotePushConnector_Helper::_nil() {
  return ::RemoteConnectors::RemotePushConnector::_nil();
}

::CORBA::Boolean RemoteConnectors::RemotePushConnector_Helper::is_nil(::RemoteConnectors::RemotePushConnector_ptr p) {
  return ::CORBA::is_nil(p);

}

void RemoteConnectors::RemotePushConnector_Helper::release(::RemoteConnectors::RemotePushConnector_ptr p) {
  ::CORBA::release(p);
}

void RemoteConnectors::RemotePushConnector_Helper::marshalObjRef(::RemoteConnectors::RemotePushConnector_ptr obj, cdrStream& s) {
  ::RemoteConnectors::RemotePushConnector::_marshalObjRef(obj, s);
}

RemoteConnectors::RemotePushConnector_ptr RemoteConnectors::RemotePushConnector_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RemoteConnectors::RemotePushConnector::_unmarshalObjRef(s);
}

void RemoteConnectors::RemotePushConnector_Helper::duplicate(::RemoteConnectors::RemotePushConnector_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RemoteConnectors::RemotePushConnector_ptr
RemoteConnectors::RemotePushConnector::_duplicate(::RemoteConnectors::RemotePushConnector_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RemoteConnectors::RemotePushConnector_ptr
RemoteConnectors::RemotePushConnector::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RemoteConnectors::RemotePushConnector_ptr
RemoteConnectors::RemotePushConnector::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RemoteConnectors::RemotePushConnector_ptr
RemoteConnectors::RemotePushConnector::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RemotePushConnector _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RemotePushConnector* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RemotePushConnector;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RemoteConnectors::RemotePushConnector::_PD_repoId = "IDL:RemoteConnectors/RemotePushConnector:1.0";


RemoteConnectors::_objref_RemotePushConnector::~_objref_RemotePushConnector() {
  
}


RemoteConnectors::_objref_RemotePushConnector::_objref_RemotePushConnector(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RemoteConnectors::RemotePushConnector::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
RemoteConnectors::_objref_RemotePushConnector::_ptrToObjRef(const char* id)
{
  if( id == ::RemoteConnectors::RemotePushConnector::_PD_repoId )
    return (::RemoteConnectors::RemotePushConnector_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePushConnector::_PD_repoId) )
    return (::RemoteConnectors::RemotePushConnector_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_00000000* tcd = (_0RL_cd_9b916532f5372757_00000000*)cd;
  RemoteConnectors::_impl_RemotePushConnector* impl = (RemoteConnectors::_impl_RemotePushConnector*) svnt->_ptrToInterface(RemoteConnectors::RemotePushConnector::_PD_repoId);
  impl->push(tcd->arg_0, *tcd->arg_1);


}

void RemoteConnectors::_objref_RemotePushConnector::push(const char* src, const ::CORBA::Any& data)
{
  _0RL_cd_9b916532f5372757_00000000 _call_desc(_0RL_lcfn_9b916532f5372757_20000000, "push", 5);
  _call_desc.arg_0 = src;
  _call_desc.arg_1 = &(::CORBA::Any&) data;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_9b916532f5372757_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_30000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
    
  
  
};

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_40000000(omniCallDescriptor*, omniServant* svnt)
{
  
  RemoteConnectors::_impl_RemotePushConnector* impl = (RemoteConnectors::_impl_RemotePushConnector*) svnt->_ptrToInterface(RemoteConnectors::RemotePushConnector::_PD_repoId);
  impl->flush();


}

void RemoteConnectors::_objref_RemotePushConnector::flush()
{
  _0RL_cd_9b916532f5372757_30000000 _call_desc(_0RL_lcfn_9b916532f5372757_40000000, "flush", 6);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_i_cRemoteConnectors_mRemotePushReceiver
class _0RL_cd_9b916532f5372757_50000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_50000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  RemoteConnectors::RemotePushReceiver_var arg_0_;
  RemoteConnectors::RemotePushReceiver_ptr arg_0;
};

void _0RL_cd_9b916532f5372757_50000000::marshalArguments(cdrStream& _n)
{
  RemoteConnectors::RemotePushReceiver::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_9b916532f5372757_50000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = RemoteConnectors::RemotePushReceiver::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_50000000* tcd = (_0RL_cd_9b916532f5372757_50000000*)cd;
  RemoteConnectors::_impl_RemotePushConnector* impl = (RemoteConnectors::_impl_RemotePushConnector*) svnt->_ptrToInterface(RemoteConnectors::RemotePushConnector::_PD_repoId);
  impl->registerPushReceiver(tcd->arg_0);


}

void RemoteConnectors::_objref_RemotePushConnector::registerPushReceiver(RemotePushReceiver_ptr pr)
{
  _0RL_cd_9b916532f5372757_50000000 _call_desc(_0RL_lcfn_9b916532f5372757_60000000, "registerPushReceiver", 21);
  _call_desc.arg_0 = pr;

  _invoke(_call_desc);



}
RemoteConnectors::_pof_RemotePushConnector::~_pof_RemotePushConnector() {}


omniObjRef*
RemoteConnectors::_pof_RemotePushConnector::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::RemoteConnectors::_objref_RemotePushConnector(ior, id);
}


::CORBA::Boolean
RemoteConnectors::_pof_RemotePushConnector::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RemoteConnectors::RemotePushConnector::_PD_repoId) )
    return 1;
  
  return 0;
}

const RemoteConnectors::_pof_RemotePushConnector _the_pof_RemoteConnectors_mRemotePushConnector;

RemoteConnectors::_impl_RemotePushConnector::~_impl_RemotePushConnector() {}


::CORBA::Boolean
RemoteConnectors::_impl_RemotePushConnector::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "push") ) {

    _0RL_cd_9b916532f5372757_00000000 _call_desc(_0RL_lcfn_9b916532f5372757_20000000, "push", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "flush") ) {

    _0RL_cd_9b916532f5372757_30000000 _call_desc(_0RL_lcfn_9b916532f5372757_40000000, "flush", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "registerPushReceiver") ) {

    _0RL_cd_9b916532f5372757_50000000 _call_desc(_0RL_lcfn_9b916532f5372757_60000000, "registerPushReceiver", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
RemoteConnectors::_impl_RemotePushConnector::_ptrToInterface(const char* id)
{
  if( id == ::RemoteConnectors::RemotePushConnector::_PD_repoId )
    return (::RemoteConnectors::_impl_RemotePushConnector*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePushConnector::_PD_repoId) )
    return (::RemoteConnectors::_impl_RemotePushConnector*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
RemoteConnectors::_impl_RemotePushConnector::_mostDerivedRepoId()
{
  return ::RemoteConnectors::RemotePushConnector::_PD_repoId;
}

RemoteConnectors::RemotePushSender_ptr RemoteConnectors::RemotePushSender_Helper::_nil() {
  return ::RemoteConnectors::RemotePushSender::_nil();
}

::CORBA::Boolean RemoteConnectors::RemotePushSender_Helper::is_nil(::RemoteConnectors::RemotePushSender_ptr p) {
  return ::CORBA::is_nil(p);

}

void RemoteConnectors::RemotePushSender_Helper::release(::RemoteConnectors::RemotePushSender_ptr p) {
  ::CORBA::release(p);
}

void RemoteConnectors::RemotePushSender_Helper::marshalObjRef(::RemoteConnectors::RemotePushSender_ptr obj, cdrStream& s) {
  ::RemoteConnectors::RemotePushSender::_marshalObjRef(obj, s);
}

RemoteConnectors::RemotePushSender_ptr RemoteConnectors::RemotePushSender_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RemoteConnectors::RemotePushSender::_unmarshalObjRef(s);
}

void RemoteConnectors::RemotePushSender_Helper::duplicate(::RemoteConnectors::RemotePushSender_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RemoteConnectors::RemotePushSender_ptr
RemoteConnectors::RemotePushSender::_duplicate(::RemoteConnectors::RemotePushSender_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RemoteConnectors::RemotePushSender_ptr
RemoteConnectors::RemotePushSender::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RemoteConnectors::RemotePushSender_ptr
RemoteConnectors::RemotePushSender::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RemoteConnectors::RemotePushSender_ptr
RemoteConnectors::RemotePushSender::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RemotePushSender _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RemotePushSender* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RemotePushSender;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RemoteConnectors::RemotePushSender::_PD_repoId = "IDL:RemoteConnectors/RemotePushSender:1.0";


RemoteConnectors::_objref_RemotePushSender::~_objref_RemotePushSender() {
  
}


RemoteConnectors::_objref_RemotePushSender::_objref_RemotePushSender(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RemoteConnectors::RemotePushSender::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
RemoteConnectors::_objref_RemotePushSender::_ptrToObjRef(const char* id)
{
  if( id == ::RemoteConnectors::RemotePushSender::_PD_repoId )
    return (::RemoteConnectors::RemotePushSender_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePushSender::_PD_repoId) )
    return (::RemoteConnectors::RemotePushSender_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cRemoteConnectors_mRemotePushConnector
class _0RL_cd_9b916532f5372757_70000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_70000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  RemoteConnectors::RemotePushConnector_var arg_0_;
  RemoteConnectors::RemotePushConnector_ptr arg_0;
};

void _0RL_cd_9b916532f5372757_70000000::marshalArguments(cdrStream& _n)
{
  RemoteConnectors::RemotePushConnector::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_9b916532f5372757_70000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = RemoteConnectors::RemotePushConnector::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_80000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_70000000* tcd = (_0RL_cd_9b916532f5372757_70000000*)cd;
  RemoteConnectors::_impl_RemotePushSender* impl = (RemoteConnectors::_impl_RemotePushSender*) svnt->_ptrToInterface(RemoteConnectors::RemotePushSender::_PD_repoId);
  impl->setPushConnector(tcd->arg_0);


}

void RemoteConnectors::_objref_RemotePushSender::setPushConnector(RemotePushConnector_ptr out)
{
  _0RL_cd_9b916532f5372757_70000000 _call_desc(_0RL_lcfn_9b916532f5372757_80000000, "setPushConnector", 17);
  _call_desc.arg_0 = out;

  _invoke(_call_desc);



}
RemoteConnectors::_pof_RemotePushSender::~_pof_RemotePushSender() {}


omniObjRef*
RemoteConnectors::_pof_RemotePushSender::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::RemoteConnectors::_objref_RemotePushSender(ior, id);
}


::CORBA::Boolean
RemoteConnectors::_pof_RemotePushSender::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RemoteConnectors::RemotePushSender::_PD_repoId) )
    return 1;
  
  return 0;
}

const RemoteConnectors::_pof_RemotePushSender _the_pof_RemoteConnectors_mRemotePushSender;

RemoteConnectors::_impl_RemotePushSender::~_impl_RemotePushSender() {}


::CORBA::Boolean
RemoteConnectors::_impl_RemotePushSender::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setPushConnector") ) {

    _0RL_cd_9b916532f5372757_70000000 _call_desc(_0RL_lcfn_9b916532f5372757_80000000, "setPushConnector", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
RemoteConnectors::_impl_RemotePushSender::_ptrToInterface(const char* id)
{
  if( id == ::RemoteConnectors::RemotePushSender::_PD_repoId )
    return (::RemoteConnectors::_impl_RemotePushSender*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePushSender::_PD_repoId) )
    return (::RemoteConnectors::_impl_RemotePushSender*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
RemoteConnectors::_impl_RemotePushSender::_mostDerivedRepoId()
{
  return ::RemoteConnectors::RemotePushSender::_PD_repoId;
}

RemoteConnectors::RemotePullReceiver_ptr RemoteConnectors::RemotePullReceiver_Helper::_nil() {
  return ::RemoteConnectors::RemotePullReceiver::_nil();
}

::CORBA::Boolean RemoteConnectors::RemotePullReceiver_Helper::is_nil(::RemoteConnectors::RemotePullReceiver_ptr p) {
  return ::CORBA::is_nil(p);

}

void RemoteConnectors::RemotePullReceiver_Helper::release(::RemoteConnectors::RemotePullReceiver_ptr p) {
  ::CORBA::release(p);
}

void RemoteConnectors::RemotePullReceiver_Helper::marshalObjRef(::RemoteConnectors::RemotePullReceiver_ptr obj, cdrStream& s) {
  ::RemoteConnectors::RemotePullReceiver::_marshalObjRef(obj, s);
}

RemoteConnectors::RemotePullReceiver_ptr RemoteConnectors::RemotePullReceiver_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RemoteConnectors::RemotePullReceiver::_unmarshalObjRef(s);
}

void RemoteConnectors::RemotePullReceiver_Helper::duplicate(::RemoteConnectors::RemotePullReceiver_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RemoteConnectors::RemotePullReceiver_ptr
RemoteConnectors::RemotePullReceiver::_duplicate(::RemoteConnectors::RemotePullReceiver_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RemoteConnectors::RemotePullReceiver_ptr
RemoteConnectors::RemotePullReceiver::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RemoteConnectors::RemotePullReceiver_ptr
RemoteConnectors::RemotePullReceiver::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RemoteConnectors::RemotePullReceiver_ptr
RemoteConnectors::RemotePullReceiver::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RemotePullReceiver _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RemotePullReceiver* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RemotePullReceiver;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RemoteConnectors::RemotePullReceiver::_PD_repoId = "IDL:RemoteConnectors/RemotePullReceiver:1.0";


RemoteConnectors::_objref_RemotePullReceiver::~_objref_RemotePullReceiver() {
  
}


RemoteConnectors::_objref_RemotePullReceiver::_objref_RemotePullReceiver(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RemoteConnectors::RemotePullReceiver::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
RemoteConnectors::_objref_RemotePullReceiver::_ptrToObjRef(const char* id)
{
  if( id == ::RemoteConnectors::RemotePullReceiver::_PD_repoId )
    return (::RemoteConnectors::RemotePullReceiver_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePullReceiver::_PD_repoId) )
    return (::RemoteConnectors::RemotePullReceiver_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cany_i_cstring_i_cstring
class _0RL_cd_9b916532f5372757_90000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_90000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::Any_var result;
};

void _0RL_cd_9b916532f5372757_90000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_9b916532f5372757_90000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_9b916532f5372757_90000000::marshalReturnedValues(cdrStream& _n)
{
  (const ::CORBA::Any&) result >>= _n;

}

void _0RL_cd_9b916532f5372757_90000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new ::CORBA::Any;
  (::CORBA::Any&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_a0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_90000000* tcd = (_0RL_cd_9b916532f5372757_90000000*)cd;
  RemoteConnectors::_impl_RemotePullReceiver* impl = (RemoteConnectors::_impl_RemotePullReceiver*) svnt->_ptrToInterface(RemoteConnectors::RemotePullReceiver::_PD_repoId);
  tcd->result = impl->receivePullQuery(tcd->arg_0, tcd->arg_1);


}

::CORBA::Any* RemoteConnectors::_objref_RemotePullReceiver::receivePullQuery(const char* src, const char* query)
{
  _0RL_cd_9b916532f5372757_90000000 _call_desc(_0RL_lcfn_9b916532f5372757_a0000000, "receivePullQuery", 17);
  _call_desc.arg_0 = src;
  _call_desc.arg_1 = query;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
RemoteConnectors::_pof_RemotePullReceiver::~_pof_RemotePullReceiver() {}


omniObjRef*
RemoteConnectors::_pof_RemotePullReceiver::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::RemoteConnectors::_objref_RemotePullReceiver(ior, id);
}


::CORBA::Boolean
RemoteConnectors::_pof_RemotePullReceiver::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RemoteConnectors::RemotePullReceiver::_PD_repoId) )
    return 1;
  
  return 0;
}

const RemoteConnectors::_pof_RemotePullReceiver _the_pof_RemoteConnectors_mRemotePullReceiver;

RemoteConnectors::_impl_RemotePullReceiver::~_impl_RemotePullReceiver() {}


::CORBA::Boolean
RemoteConnectors::_impl_RemotePullReceiver::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "receivePullQuery") ) {

    _0RL_cd_9b916532f5372757_90000000 _call_desc(_0RL_lcfn_9b916532f5372757_a0000000, "receivePullQuery", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
RemoteConnectors::_impl_RemotePullReceiver::_ptrToInterface(const char* id)
{
  if( id == ::RemoteConnectors::RemotePullReceiver::_PD_repoId )
    return (::RemoteConnectors::_impl_RemotePullReceiver*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePullReceiver::_PD_repoId) )
    return (::RemoteConnectors::_impl_RemotePullReceiver*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
RemoteConnectors::_impl_RemotePullReceiver::_mostDerivedRepoId()
{
  return ::RemoteConnectors::RemotePullReceiver::_PD_repoId;
}

RemoteConnectors::RemotePullConnector_ptr RemoteConnectors::RemotePullConnector_Helper::_nil() {
  return ::RemoteConnectors::RemotePullConnector::_nil();
}

::CORBA::Boolean RemoteConnectors::RemotePullConnector_Helper::is_nil(::RemoteConnectors::RemotePullConnector_ptr p) {
  return ::CORBA::is_nil(p);

}

void RemoteConnectors::RemotePullConnector_Helper::release(::RemoteConnectors::RemotePullConnector_ptr p) {
  ::CORBA::release(p);
}

void RemoteConnectors::RemotePullConnector_Helper::marshalObjRef(::RemoteConnectors::RemotePullConnector_ptr obj, cdrStream& s) {
  ::RemoteConnectors::RemotePullConnector::_marshalObjRef(obj, s);
}

RemoteConnectors::RemotePullConnector_ptr RemoteConnectors::RemotePullConnector_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RemoteConnectors::RemotePullConnector::_unmarshalObjRef(s);
}

void RemoteConnectors::RemotePullConnector_Helper::duplicate(::RemoteConnectors::RemotePullConnector_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RemoteConnectors::RemotePullConnector_ptr
RemoteConnectors::RemotePullConnector::_duplicate(::RemoteConnectors::RemotePullConnector_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RemoteConnectors::RemotePullConnector_ptr
RemoteConnectors::RemotePullConnector::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RemoteConnectors::RemotePullConnector_ptr
RemoteConnectors::RemotePullConnector::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RemoteConnectors::RemotePullConnector_ptr
RemoteConnectors::RemotePullConnector::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RemotePullConnector _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RemotePullConnector* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RemotePullConnector;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RemoteConnectors::RemotePullConnector::_PD_repoId = "IDL:RemoteConnectors/RemotePullConnector:1.0";


RemoteConnectors::_objref_RemotePullConnector::~_objref_RemotePullConnector() {
  
}


RemoteConnectors::_objref_RemotePullConnector::_objref_RemotePullConnector(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RemoteConnectors::RemotePullConnector::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
RemoteConnectors::_objref_RemotePullConnector::_ptrToObjRef(const char* id)
{
  if( id == ::RemoteConnectors::RemotePullConnector::_PD_repoId )
    return (::RemoteConnectors::RemotePullConnector_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePullConnector::_PD_repoId) )
    return (::RemoteConnectors::RemotePullConnector_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_90000000* tcd = (_0RL_cd_9b916532f5372757_90000000*)cd;
  RemoteConnectors::_impl_RemotePullConnector* impl = (RemoteConnectors::_impl_RemotePullConnector*) svnt->_ptrToInterface(RemoteConnectors::RemotePullConnector::_PD_repoId);
  tcd->result = impl->pull(tcd->arg_0, tcd->arg_1);


}

::CORBA::Any* RemoteConnectors::_objref_RemotePullConnector::pull(const char* src, const char* query)
{
  _0RL_cd_9b916532f5372757_90000000 _call_desc(_0RL_lcfn_9b916532f5372757_b0000000, "pull", 5);
  _call_desc.arg_0 = src;
  _call_desc.arg_1 = query;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  void_i_cRemoteConnectors_mRemotePullReceiver
class _0RL_cd_9b916532f5372757_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_c0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  RemoteConnectors::RemotePullReceiver_var arg_0_;
  RemoteConnectors::RemotePullReceiver_ptr arg_0;
};

void _0RL_cd_9b916532f5372757_c0000000::marshalArguments(cdrStream& _n)
{
  RemoteConnectors::RemotePullReceiver::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_9b916532f5372757_c0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = RemoteConnectors::RemotePullReceiver::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_c0000000* tcd = (_0RL_cd_9b916532f5372757_c0000000*)cd;
  RemoteConnectors::_impl_RemotePullConnector* impl = (RemoteConnectors::_impl_RemotePullConnector*) svnt->_ptrToInterface(RemoteConnectors::RemotePullConnector::_PD_repoId);
  impl->registerPullReceiver(tcd->arg_0);


}

void RemoteConnectors::_objref_RemotePullConnector::registerPullReceiver(RemotePullReceiver_ptr pr)
{
  _0RL_cd_9b916532f5372757_c0000000 _call_desc(_0RL_lcfn_9b916532f5372757_d0000000, "registerPullReceiver", 21);
  _call_desc.arg_0 = pr;

  _invoke(_call_desc);



}
RemoteConnectors::_pof_RemotePullConnector::~_pof_RemotePullConnector() {}


omniObjRef*
RemoteConnectors::_pof_RemotePullConnector::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::RemoteConnectors::_objref_RemotePullConnector(ior, id);
}


::CORBA::Boolean
RemoteConnectors::_pof_RemotePullConnector::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RemoteConnectors::RemotePullConnector::_PD_repoId) )
    return 1;
  
  return 0;
}

const RemoteConnectors::_pof_RemotePullConnector _the_pof_RemoteConnectors_mRemotePullConnector;

RemoteConnectors::_impl_RemotePullConnector::~_impl_RemotePullConnector() {}


::CORBA::Boolean
RemoteConnectors::_impl_RemotePullConnector::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "pull") ) {

    _0RL_cd_9b916532f5372757_90000000 _call_desc(_0RL_lcfn_9b916532f5372757_b0000000, "pull", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "registerPullReceiver") ) {

    _0RL_cd_9b916532f5372757_c0000000 _call_desc(_0RL_lcfn_9b916532f5372757_d0000000, "registerPullReceiver", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
RemoteConnectors::_impl_RemotePullConnector::_ptrToInterface(const char* id)
{
  if( id == ::RemoteConnectors::RemotePullConnector::_PD_repoId )
    return (::RemoteConnectors::_impl_RemotePullConnector*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePullConnector::_PD_repoId) )
    return (::RemoteConnectors::_impl_RemotePullConnector*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
RemoteConnectors::_impl_RemotePullConnector::_mostDerivedRepoId()
{
  return ::RemoteConnectors::RemotePullConnector::_PD_repoId;
}

RemoteConnectors::RemotePullSender_ptr RemoteConnectors::RemotePullSender_Helper::_nil() {
  return ::RemoteConnectors::RemotePullSender::_nil();
}

::CORBA::Boolean RemoteConnectors::RemotePullSender_Helper::is_nil(::RemoteConnectors::RemotePullSender_ptr p) {
  return ::CORBA::is_nil(p);

}

void RemoteConnectors::RemotePullSender_Helper::release(::RemoteConnectors::RemotePullSender_ptr p) {
  ::CORBA::release(p);
}

void RemoteConnectors::RemotePullSender_Helper::marshalObjRef(::RemoteConnectors::RemotePullSender_ptr obj, cdrStream& s) {
  ::RemoteConnectors::RemotePullSender::_marshalObjRef(obj, s);
}

RemoteConnectors::RemotePullSender_ptr RemoteConnectors::RemotePullSender_Helper::unmarshalObjRef(cdrStream& s) {
  return ::RemoteConnectors::RemotePullSender::_unmarshalObjRef(s);
}

void RemoteConnectors::RemotePullSender_Helper::duplicate(::RemoteConnectors::RemotePullSender_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

RemoteConnectors::RemotePullSender_ptr
RemoteConnectors::RemotePullSender::_duplicate(::RemoteConnectors::RemotePullSender_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

RemoteConnectors::RemotePullSender_ptr
RemoteConnectors::RemotePullSender::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


RemoteConnectors::RemotePullSender_ptr
RemoteConnectors::RemotePullSender::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

RemoteConnectors::RemotePullSender_ptr
RemoteConnectors::RemotePullSender::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_RemotePullSender _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_RemotePullSender* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_RemotePullSender;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* RemoteConnectors::RemotePullSender::_PD_repoId = "IDL:RemoteConnectors/RemotePullSender:1.0";


RemoteConnectors::_objref_RemotePullSender::~_objref_RemotePullSender() {
  
}


RemoteConnectors::_objref_RemotePullSender::_objref_RemotePullSender(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::RemoteConnectors::RemotePullSender::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
RemoteConnectors::_objref_RemotePullSender::_ptrToObjRef(const char* id)
{
  if( id == ::RemoteConnectors::RemotePullSender::_PD_repoId )
    return (::RemoteConnectors::RemotePullSender_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePullSender::_PD_repoId) )
    return (::RemoteConnectors::RemotePullSender_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cRemoteConnectors_mRemotePullConnector
class _0RL_cd_9b916532f5372757_e0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_9b916532f5372757_e0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  RemoteConnectors::RemotePullConnector_var arg_0_;
  RemoteConnectors::RemotePullConnector_ptr arg_0;
};

void _0RL_cd_9b916532f5372757_e0000000::marshalArguments(cdrStream& _n)
{
  RemoteConnectors::RemotePullConnector::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_9b916532f5372757_e0000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = RemoteConnectors::RemotePullConnector::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_9b916532f5372757_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_9b916532f5372757_e0000000* tcd = (_0RL_cd_9b916532f5372757_e0000000*)cd;
  RemoteConnectors::_impl_RemotePullSender* impl = (RemoteConnectors::_impl_RemotePullSender*) svnt->_ptrToInterface(RemoteConnectors::RemotePullSender::_PD_repoId);
  impl->setPullConnector(tcd->arg_0);


}

void RemoteConnectors::_objref_RemotePullSender::setPullConnector(RemotePullConnector_ptr out)
{
  _0RL_cd_9b916532f5372757_e0000000 _call_desc(_0RL_lcfn_9b916532f5372757_f0000000, "setPullConnector", 17);
  _call_desc.arg_0 = out;

  _invoke(_call_desc);



}
RemoteConnectors::_pof_RemotePullSender::~_pof_RemotePullSender() {}


omniObjRef*
RemoteConnectors::_pof_RemotePullSender::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::RemoteConnectors::_objref_RemotePullSender(ior, id);
}


::CORBA::Boolean
RemoteConnectors::_pof_RemotePullSender::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::RemoteConnectors::RemotePullSender::_PD_repoId) )
    return 1;
  
  return 0;
}

const RemoteConnectors::_pof_RemotePullSender _the_pof_RemoteConnectors_mRemotePullSender;

RemoteConnectors::_impl_RemotePullSender::~_impl_RemotePullSender() {}


::CORBA::Boolean
RemoteConnectors::_impl_RemotePullSender::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setPullConnector") ) {

    _0RL_cd_9b916532f5372757_e0000000 _call_desc(_0RL_lcfn_9b916532f5372757_f0000000, "setPullConnector", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
RemoteConnectors::_impl_RemotePullSender::_ptrToInterface(const char* id)
{
  if( id == ::RemoteConnectors::RemotePullSender::_PD_repoId )
    return (::RemoteConnectors::_impl_RemotePullSender*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::RemoteConnectors::RemotePullSender::_PD_repoId) )
    return (::RemoteConnectors::_impl_RemotePullSender*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
RemoteConnectors::_impl_RemotePullSender::_mostDerivedRepoId()
{
  return ::RemoteConnectors::RemotePullSender::_PD_repoId;
}

POA_RemoteConnectors::RemotePushReceiver::~RemotePushReceiver() {}

POA_RemoteConnectors::RemotePushConnector::~RemotePushConnector() {}

POA_RemoteConnectors::RemotePushSender::~RemotePushSender() {}

POA_RemoteConnectors::RemotePullReceiver::~RemotePullReceiver() {}

POA_RemoteConnectors::RemotePullConnector::~RemotePullConnector() {}

POA_RemoteConnectors::RemotePullSender::~RemotePullSender() {}

