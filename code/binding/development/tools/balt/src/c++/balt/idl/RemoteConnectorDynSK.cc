// This file is generated by omniidl (C++ backend) - omniORB_4_1. Do not edit.

#include "RemoteConnector.hh"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_1_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace RemoteConnectors { 
  const ::CORBA::TypeCode_ptr _tc_RemotePushReceiver = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePushReceiver:1.0", "RemotePushReceiver", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr RemoteConnectors::_tc_RemotePushReceiver = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePushReceiver:1.0", "RemotePushReceiver", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace RemoteConnectors { 
  const ::CORBA::TypeCode_ptr _tc_RemotePushConnector = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePushConnector:1.0", "RemotePushConnector", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr RemoteConnectors::_tc_RemotePushConnector = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePushConnector:1.0", "RemotePushConnector", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace RemoteConnectors { 
  const ::CORBA::TypeCode_ptr _tc_RemotePushSender = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePushSender:1.0", "RemotePushSender", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr RemoteConnectors::_tc_RemotePushSender = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePushSender:1.0", "RemotePushSender", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace RemoteConnectors { 
  const ::CORBA::TypeCode_ptr _tc_RemotePullReceiver = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePullReceiver:1.0", "RemotePullReceiver", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr RemoteConnectors::_tc_RemotePullReceiver = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePullReceiver:1.0", "RemotePullReceiver", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace RemoteConnectors { 
  const ::CORBA::TypeCode_ptr _tc_RemotePullConnector = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePullConnector:1.0", "RemotePullConnector", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr RemoteConnectors::_tc_RemotePullConnector = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePullConnector:1.0", "RemotePullConnector", &_0RL_tcTrack);
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace RemoteConnectors { 
  const ::CORBA::TypeCode_ptr _tc_RemotePullSender = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePullSender:1.0", "RemotePullSender", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr RemoteConnectors::_tc_RemotePullSender = CORBA::TypeCode::PR_interface_tc("IDL:RemoteConnectors/RemotePullSender:1.0", "RemotePullSender", &_0RL_tcTrack);
#endif

static void _0RL_RemoteConnectors_mRemotePushReceiver_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_RemoteConnectors_mRemotePushReceiver_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(RemoteConnectors::RemotePushReceiver::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_RemoteConnectors_mRemotePushReceiver_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePushReceiver_ptr _o)
{
  RemoteConnectors::RemotePushReceiver_ptr _no = RemoteConnectors::RemotePushReceiver::_duplicate(_o);
  _a.PR_insert(RemoteConnectors::_tc_RemotePushReceiver,
               _0RL_RemoteConnectors_mRemotePushReceiver_marshal_fn,
               _0RL_RemoteConnectors_mRemotePushReceiver_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePushReceiver_ptr* _op)
{
  _a.PR_insert(RemoteConnectors::_tc_RemotePushReceiver,
               _0RL_RemoteConnectors_mRemotePushReceiver_marshal_fn,
               _0RL_RemoteConnectors_mRemotePushReceiver_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = RemoteConnectors::RemotePushReceiver::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, RemoteConnectors::RemotePushReceiver_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(RemoteConnectors::_tc_RemotePushReceiver,
                    _0RL_RemoteConnectors_mRemotePushReceiver_unmarshal_fn,
                    _0RL_RemoteConnectors_mRemotePushReceiver_marshal_fn,
                    _0RL_RemoteConnectors_mRemotePushReceiver_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (RemoteConnectors::RemotePushReceiver_ptr)_r->_ptrToObjRef(RemoteConnectors::RemotePushReceiver::_PD_repoId);
    else
      _o = RemoteConnectors::RemotePushReceiver::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_RemoteConnectors_mRemotePushConnector_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_RemoteConnectors_mRemotePushConnector_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(RemoteConnectors::RemotePushConnector::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_RemoteConnectors_mRemotePushConnector_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePushConnector_ptr _o)
{
  RemoteConnectors::RemotePushConnector_ptr _no = RemoteConnectors::RemotePushConnector::_duplicate(_o);
  _a.PR_insert(RemoteConnectors::_tc_RemotePushConnector,
               _0RL_RemoteConnectors_mRemotePushConnector_marshal_fn,
               _0RL_RemoteConnectors_mRemotePushConnector_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePushConnector_ptr* _op)
{
  _a.PR_insert(RemoteConnectors::_tc_RemotePushConnector,
               _0RL_RemoteConnectors_mRemotePushConnector_marshal_fn,
               _0RL_RemoteConnectors_mRemotePushConnector_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = RemoteConnectors::RemotePushConnector::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, RemoteConnectors::RemotePushConnector_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(RemoteConnectors::_tc_RemotePushConnector,
                    _0RL_RemoteConnectors_mRemotePushConnector_unmarshal_fn,
                    _0RL_RemoteConnectors_mRemotePushConnector_marshal_fn,
                    _0RL_RemoteConnectors_mRemotePushConnector_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (RemoteConnectors::RemotePushConnector_ptr)_r->_ptrToObjRef(RemoteConnectors::RemotePushConnector::_PD_repoId);
    else
      _o = RemoteConnectors::RemotePushConnector::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_RemoteConnectors_mRemotePushSender_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_RemoteConnectors_mRemotePushSender_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(RemoteConnectors::RemotePushSender::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_RemoteConnectors_mRemotePushSender_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePushSender_ptr _o)
{
  RemoteConnectors::RemotePushSender_ptr _no = RemoteConnectors::RemotePushSender::_duplicate(_o);
  _a.PR_insert(RemoteConnectors::_tc_RemotePushSender,
               _0RL_RemoteConnectors_mRemotePushSender_marshal_fn,
               _0RL_RemoteConnectors_mRemotePushSender_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePushSender_ptr* _op)
{
  _a.PR_insert(RemoteConnectors::_tc_RemotePushSender,
               _0RL_RemoteConnectors_mRemotePushSender_marshal_fn,
               _0RL_RemoteConnectors_mRemotePushSender_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = RemoteConnectors::RemotePushSender::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, RemoteConnectors::RemotePushSender_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(RemoteConnectors::_tc_RemotePushSender,
                    _0RL_RemoteConnectors_mRemotePushSender_unmarshal_fn,
                    _0RL_RemoteConnectors_mRemotePushSender_marshal_fn,
                    _0RL_RemoteConnectors_mRemotePushSender_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (RemoteConnectors::RemotePushSender_ptr)_r->_ptrToObjRef(RemoteConnectors::RemotePushSender::_PD_repoId);
    else
      _o = RemoteConnectors::RemotePushSender::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_RemoteConnectors_mRemotePullReceiver_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_RemoteConnectors_mRemotePullReceiver_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(RemoteConnectors::RemotePullReceiver::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_RemoteConnectors_mRemotePullReceiver_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePullReceiver_ptr _o)
{
  RemoteConnectors::RemotePullReceiver_ptr _no = RemoteConnectors::RemotePullReceiver::_duplicate(_o);
  _a.PR_insert(RemoteConnectors::_tc_RemotePullReceiver,
               _0RL_RemoteConnectors_mRemotePullReceiver_marshal_fn,
               _0RL_RemoteConnectors_mRemotePullReceiver_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePullReceiver_ptr* _op)
{
  _a.PR_insert(RemoteConnectors::_tc_RemotePullReceiver,
               _0RL_RemoteConnectors_mRemotePullReceiver_marshal_fn,
               _0RL_RemoteConnectors_mRemotePullReceiver_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = RemoteConnectors::RemotePullReceiver::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, RemoteConnectors::RemotePullReceiver_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(RemoteConnectors::_tc_RemotePullReceiver,
                    _0RL_RemoteConnectors_mRemotePullReceiver_unmarshal_fn,
                    _0RL_RemoteConnectors_mRemotePullReceiver_marshal_fn,
                    _0RL_RemoteConnectors_mRemotePullReceiver_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (RemoteConnectors::RemotePullReceiver_ptr)_r->_ptrToObjRef(RemoteConnectors::RemotePullReceiver::_PD_repoId);
    else
      _o = RemoteConnectors::RemotePullReceiver::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_RemoteConnectors_mRemotePullConnector_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_RemoteConnectors_mRemotePullConnector_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(RemoteConnectors::RemotePullConnector::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_RemoteConnectors_mRemotePullConnector_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePullConnector_ptr _o)
{
  RemoteConnectors::RemotePullConnector_ptr _no = RemoteConnectors::RemotePullConnector::_duplicate(_o);
  _a.PR_insert(RemoteConnectors::_tc_RemotePullConnector,
               _0RL_RemoteConnectors_mRemotePullConnector_marshal_fn,
               _0RL_RemoteConnectors_mRemotePullConnector_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePullConnector_ptr* _op)
{
  _a.PR_insert(RemoteConnectors::_tc_RemotePullConnector,
               _0RL_RemoteConnectors_mRemotePullConnector_marshal_fn,
               _0RL_RemoteConnectors_mRemotePullConnector_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = RemoteConnectors::RemotePullConnector::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, RemoteConnectors::RemotePullConnector_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(RemoteConnectors::_tc_RemotePullConnector,
                    _0RL_RemoteConnectors_mRemotePullConnector_unmarshal_fn,
                    _0RL_RemoteConnectors_mRemotePullConnector_marshal_fn,
                    _0RL_RemoteConnectors_mRemotePullConnector_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (RemoteConnectors::RemotePullConnector_ptr)_r->_ptrToObjRef(RemoteConnectors::RemotePullConnector::_PD_repoId);
    else
      _o = RemoteConnectors::RemotePullConnector::_nil();
    return 1;
  }
  return 0;
}

static void _0RL_RemoteConnectors_mRemotePullSender_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_RemoteConnectors_mRemotePullSender_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(RemoteConnectors::RemotePullSender::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_RemoteConnectors_mRemotePullSender_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePullSender_ptr _o)
{
  RemoteConnectors::RemotePullSender_ptr _no = RemoteConnectors::RemotePullSender::_duplicate(_o);
  _a.PR_insert(RemoteConnectors::_tc_RemotePullSender,
               _0RL_RemoteConnectors_mRemotePullSender_marshal_fn,
               _0RL_RemoteConnectors_mRemotePullSender_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, RemoteConnectors::RemotePullSender_ptr* _op)
{
  _a.PR_insert(RemoteConnectors::_tc_RemotePullSender,
               _0RL_RemoteConnectors_mRemotePullSender_marshal_fn,
               _0RL_RemoteConnectors_mRemotePullSender_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = RemoteConnectors::RemotePullSender::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, RemoteConnectors::RemotePullSender_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(RemoteConnectors::_tc_RemotePullSender,
                    _0RL_RemoteConnectors_mRemotePullSender_unmarshal_fn,
                    _0RL_RemoteConnectors_mRemotePullSender_marshal_fn,
                    _0RL_RemoteConnectors_mRemotePullSender_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (RemoteConnectors::RemotePullSender_ptr)_r->_ptrToObjRef(RemoteConnectors::RemotePullSender::_PD_repoId);
    else
      _o = RemoteConnectors::RemotePullSender::_nil();
    return 1;
  }
  return 0;
}

