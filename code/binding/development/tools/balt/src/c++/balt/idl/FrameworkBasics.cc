// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "FrameworkBasics.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
FrameworkBasics::ProcessConfigurationMap::operator>>= (cdrStream &_n) const
{
  (const StringSeq&) m_keys >>= _n;
  (const StringSeq&) m_values >>= _n;

}

void
FrameworkBasics::ProcessConfigurationMap::operator<<= (cdrStream &_n)
{
  (StringSeq&)m_keys <<= _n;
  (StringSeq&)m_values <<= _n;

}

void
FrameworkBasics::ProcessDescription::operator>>= (cdrStream &_n) const
{
  _n.marshalString(m_processName,0);
  _n.marshalString(m_className,0);
  m_language >>= _n;
  _n.marshalString(m_hostName,0);
  (const ProcessConfigurationMap&) m_configuration >>= _n;

}

void
FrameworkBasics::ProcessDescription::operator<<= (cdrStream &_n)
{
  m_processName = _n.unmarshalString(0);
  m_className = _n.unmarshalString(0);
  (ProcessLanguage&)m_language <<= _n;
  m_hostName = _n.unmarshalString(0);
  (ProcessConfigurationMap&)m_configuration <<= _n;

}

void
FrameworkBasics::ProcessConnection::operator>>= (cdrStream &_n) const
{
  (const DescriptionList&) m_senders >>= _n;
  (const DescriptionList&) m_receivers >>= _n;
  m_connectionType >>= _n;
  _n.marshalString(m_dataType,0);
  _n.marshalString(m_connectionID,0);

}

void
FrameworkBasics::ProcessConnection::operator<<= (cdrStream &_n)
{
  (DescriptionList&)m_senders <<= _n;
  (DescriptionList&)m_receivers <<= _n;
  (FrameworkConnectionType&)m_connectionType <<= _n;
  m_dataType = _n.unmarshalString(0);
  m_connectionID = _n.unmarshalString(0);

}

void
FrameworkBasics::BALTTime::operator>>= (cdrStream &_n) const
{
  m_s >>= _n;
  m_us >>= _n;

}

void
FrameworkBasics::BALTTime::operator<<= (cdrStream &_n)
{
  (::CORBA::Long&)m_s <<= _n;
  (::CORBA::Long&)m_us <<= _n;

}

FrameworkBasics::FrameworkProcessManager_ptr FrameworkBasics::FrameworkProcessManager_Helper::_nil() {
  return ::FrameworkBasics::FrameworkProcessManager::_nil();
}

::CORBA::Boolean FrameworkBasics::FrameworkProcessManager_Helper::is_nil(::FrameworkBasics::FrameworkProcessManager_ptr p) {
  return ::CORBA::is_nil(p);

}

void FrameworkBasics::FrameworkProcessManager_Helper::release(::FrameworkBasics::FrameworkProcessManager_ptr p) {
  ::CORBA::release(p);
}

void FrameworkBasics::FrameworkProcessManager_Helper::marshalObjRef(::FrameworkBasics::FrameworkProcessManager_ptr obj, cdrStream& s) {
  ::FrameworkBasics::FrameworkProcessManager::_marshalObjRef(obj, s);
}

FrameworkBasics::FrameworkProcessManager_ptr FrameworkBasics::FrameworkProcessManager_Helper::unmarshalObjRef(cdrStream& s) {
  return ::FrameworkBasics::FrameworkProcessManager::_unmarshalObjRef(s);
}

void FrameworkBasics::FrameworkProcessManager_Helper::duplicate(::FrameworkBasics::FrameworkProcessManager_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

FrameworkBasics::FrameworkProcessManager_ptr
FrameworkBasics::FrameworkProcessManager::_duplicate(::FrameworkBasics::FrameworkProcessManager_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

FrameworkBasics::FrameworkProcessManager_ptr
FrameworkBasics::FrameworkProcessManager::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


FrameworkBasics::FrameworkProcessManager_ptr
FrameworkBasics::FrameworkProcessManager::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

FrameworkBasics::FrameworkProcessManager_ptr
FrameworkBasics::FrameworkProcessManager::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_FrameworkProcessManager _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_FrameworkProcessManager* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_FrameworkProcessManager;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* FrameworkBasics::FrameworkProcessManager::_PD_repoId = "IDL:FrameworkBasics/FrameworkProcessManager:1.0";


FrameworkBasics::_objref_FrameworkProcessManager::~_objref_FrameworkProcessManager() {
  
}


FrameworkBasics::_objref_FrameworkProcessManager::_objref_FrameworkProcessManager(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::FrameworkBasics::FrameworkProcessManager::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
FrameworkBasics::_objref_FrameworkProcessManager::_ptrToObjRef(const char* id)
{
  if( id == ::FrameworkBasics::FrameworkProcessManager::_PD_repoId )
    return (::FrameworkBasics::FrameworkProcessManager_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::FrameworkBasics::FrameworkProcessManager::_PD_repoId) )
    return (::FrameworkBasics::FrameworkProcessManager_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void_i_cFrameworkBasics_mConnectionGraph
class _0RL_cd_0b5fbf82547a7c82_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0b5fbf82547a7c82_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  FrameworkBasics::ConnectionGraph_var arg_0_;
  const FrameworkBasics::ConnectionGraph* arg_0;
};

void _0RL_cd_0b5fbf82547a7c82_00000000::marshalArguments(cdrStream& _n)
{
  (const FrameworkBasics::ConnectionGraph&) *arg_0 >>= _n;

}

void _0RL_cd_0b5fbf82547a7c82_00000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new FrameworkBasics::ConnectionGraph;
  (FrameworkBasics::ConnectionGraph&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_0b5fbf82547a7c82_00000000* tcd = (_0RL_cd_0b5fbf82547a7c82_00000000*)cd;
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->createGraph(*tcd->arg_0);


}

void FrameworkBasics::_objref_FrameworkProcessManager::createGraph(const ConnectionGraph& graph)
{
  _0RL_cd_0b5fbf82547a7c82_00000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_10000000, "createGraph", 12);
  _call_desc.arg_0 = &(ConnectionGraph&) graph;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_0b5fbf82547a7c82_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_0b5fbf82547a7c82_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
    
  
  
};

// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_30000000(omniCallDescriptor*, omniServant* svnt)
{
  
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->createRemoteConnections();


}

void FrameworkBasics::_objref_FrameworkProcessManager::createRemoteConnections()
{
  _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_30000000, "createRemoteConnections", 24);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_40000000(omniCallDescriptor*, omniServant* svnt)
{
  
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->connectGraph();


}

void FrameworkBasics::_objref_FrameworkProcessManager::connectGraph()
{
  _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_40000000, "connectGraph", 13);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_50000000(omniCallDescriptor*, omniServant* svnt)
{
  
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->startGraph();


}

void FrameworkBasics::_objref_FrameworkProcessManager::startGraph()
{
  _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_50000000, "startGraph", 11);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_60000000(omniCallDescriptor*, omniServant* svnt)
{
  
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->runGraph();


}

void FrameworkBasics::_objref_FrameworkProcessManager::runGraph()
{
  _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_60000000, "runGraph", 9);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_70000000(omniCallDescriptor*, omniServant* svnt)
{
  
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->stopGraph();


}

void FrameworkBasics::_objref_FrameworkProcessManager::stopGraph()
{
  _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_70000000, "stopGraph", 10);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_0b5fbf82547a7c82_80000000(omniCallDescriptor*, omniServant* svnt)
{
  
  FrameworkBasics::_impl_FrameworkProcessManager* impl = (FrameworkBasics::_impl_FrameworkProcessManager*) svnt->_ptrToInterface(FrameworkBasics::FrameworkProcessManager::_PD_repoId);
  impl->synchroniseWatches();


}

void FrameworkBasics::_objref_FrameworkProcessManager::synchroniseWatches()
{
  _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_80000000, "synchroniseWatches", 19);


  _invoke(_call_desc);



}
FrameworkBasics::_pof_FrameworkProcessManager::~_pof_FrameworkProcessManager() {}


omniObjRef*
FrameworkBasics::_pof_FrameworkProcessManager::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::FrameworkBasics::_objref_FrameworkProcessManager(ior, id);
}


::CORBA::Boolean
FrameworkBasics::_pof_FrameworkProcessManager::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::FrameworkBasics::FrameworkProcessManager::_PD_repoId) )
    return 1;
  
  return 0;
}

const FrameworkBasics::_pof_FrameworkProcessManager _the_pof_FrameworkBasics_mFrameworkProcessManager;

FrameworkBasics::_impl_FrameworkProcessManager::~_impl_FrameworkProcessManager() {}


::CORBA::Boolean
FrameworkBasics::_impl_FrameworkProcessManager::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "createGraph") ) {

    _0RL_cd_0b5fbf82547a7c82_00000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_10000000, "createGraph", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "createRemoteConnections") ) {

    _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_30000000, "createRemoteConnections", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "connectGraph") ) {

    _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_40000000, "connectGraph", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "startGraph") ) {

    _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_50000000, "startGraph", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "runGraph") ) {

    _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_60000000, "runGraph", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stopGraph") ) {

    _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_70000000, "stopGraph", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "synchroniseWatches") ) {

    _0RL_cd_0b5fbf82547a7c82_20000000 _call_desc(_0RL_lcfn_0b5fbf82547a7c82_80000000, "synchroniseWatches", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
FrameworkBasics::_impl_FrameworkProcessManager::_ptrToInterface(const char* id)
{
  if( id == ::FrameworkBasics::FrameworkProcessManager::_PD_repoId )
    return (::FrameworkBasics::_impl_FrameworkProcessManager*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::FrameworkBasics::FrameworkProcessManager::_PD_repoId) )
    return (::FrameworkBasics::_impl_FrameworkProcessManager*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
FrameworkBasics::_impl_FrameworkProcessManager::_mostDerivedRepoId()
{
  return ::FrameworkBasics::FrameworkProcessManager::_PD_repoId;
}

POA_FrameworkBasics::FrameworkProcessManager::~FrameworkProcessManager() {}

