<NeuralNet>
	<ConsoleData>
		<trainDataFile>prueba.nc</trainDataFile>
		<hTrainDataFiles></hTrainDataFiles>
		<trainDataFraction>1</trainDataFraction>
		<testDataFile>valid.nc</testDataFile>
		<hTestDataFiles></hTestDataFiles>
		<testDataFraction>1</testDataFraction>
		<validationDataFile></validationDataFile>
		<hValDataFiles></hValDataFiles>
		<randomSeed>0</randomSeed>
		<totalEpochs>-1</totalEpochs>
		<initWeightRange>0.1</initWeightRange>
		<initErrorTest>0</initErrorTest>
		<gradTest>0</gradTest>
		<gradTestPerturbation>1e-05</gradTestPerturbation>
		<gradTestSeq>0</gradTestSeq>
		<overwriteSaves>1</overwriteSaves>
		<staticNoise>0</staticNoise>
		<epochsPerErrCheck>5</epochsPerErrCheck>
		<epochsSinceErrCheck>0</epochsSinceErrCheck>
		<maxTestsNoBest>10</maxTestsNoBest>
		<epoch>0</epoch>
		<minStopError>0</minStopError>
		<batchLearn>0</batchLearn>
		<shuffleTrainData>1</shuffleTrainData>
		<stopErrorType>base</stopErrorType>
		<saveAfterNSeqs>0</saveAfterNSeqs>
		<timeStepsPerInput>1</timeStepsPerInput>
		<inputOverlap>0</inputOverlap>
	</ConsoleData>
	<Net task="regression" multidirectional = "0">
		<Levels>
			<Lstm size="10" numBlocks="10" cellsPerBlock="1" actFn="tanh tanh logistic" peepholes="1" forgetGates="1"/>
		</Levels>
		<Connections>
			<Standard from="bias" to="hidden"/>
			<Standard from="input" to="hidden"/>
			<Recurrent from="hidden" to="hidden"/>
			<Standard from="bias" to="output"/>
			<Standard from="hidden" to="output"/>
		</Connections>
	</Net>
	<ExportedData>
		<Object name="output">
			<Param name="actThreshold" val="-1"/>
			<Param name="maxPrefixes" val="50000"/>
			<Param name="nBest" val="0"/>
		</Object>
		<Object name="trainer">
			<Param name="learnRate" val="0.0001"/>
			<Param name="momentum" val="0.9"/>
		</Object>
	</ExportedData>
</NeuralNet>
