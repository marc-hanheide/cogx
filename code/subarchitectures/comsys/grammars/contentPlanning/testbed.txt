






			=================================================
			DO NOT USE THIS FILE ANYMORE FOR ADDING NEW STUFF
				   USE testbed.xml INSTEAD 
		        =================================================









<!-- ===== WITHOUT OVERALL STRUCTURE ==== -->


<!-- Simple input w/o overall structure: -->

@b1:entity(ball)  
@c1:quality(red)
@e1:event(somethinghappens)

@e1:action(walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)) )
@e1:action(walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)) ^ <Patient>(d1:entity ^ dog) )
@e1:action(walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)) ^ <Patient>(d1:entity ^ dog) ^ <Beneficiary>(w1:entity ^ woman))
@e1:action(walk ^ <SOmeOtherFeat>bla ^ <MyRel>(b1:physical ^ robot ^ <Size>(s1:quality ^ big)))

<!-- Delimitation w/o overall structure -->

@b1:physical(ball ^ <InfoStatus>familiar)  
@b1:physical(ball ^ <Unique>true)  
@b1:physical(ball ^ <Unique>false ^ <InfoStatus>familiar)  


<!-- Quantification and number w/o overall structure -->

@b1:physical(ball)  
@b1:physical(ball ^ <Quantity>0)  
@b1:physical(ball ^ <Quantity>1)  
@b1:physical(ball ^ <Quantity>2) <!-- any number; but they don't generate, though LF correct AFAICS! -->
@b1:physical(ball ^ <Quantity>multiple)
@b1:physical(ball ^ <Quantity>unknown)  
@b1:physical(ball ^ <Quantity>dkfhjdfk)  <!-- doesn't generate, of course -->


<!-- Attributes w/o overall structure-->

<!-- simple features: old, still works now: -->	
@b1:entity(ball ^ <Size>big)
@b1:entity(ball ^ <Color>blue)
@b1:entity(thing ^ <Shape>round)
@b1:entity(book ^ <Name>Borland)

@b1:physical(ball ^ <Size>big ^ <Color>red)
@b1:entity(book ^ <Shape>square ^ <Name>Borland)

<!-- relations -->
@b1:physical(ball ^ <TopIn>(b2:entity ^ box))
@b1:physical(ball ^ <TopOn>(b2:entity ^ box))
@b1:physical(ball ^ <TopAt>(b2:entity ^ box))
@b1:physical(ball ^ <NearTo>(b2:entity ^ box))
@b1:physical(ball ^ <NextTo>(b2:entity ^ box))

<!-- Owner ??? -->				   
<!-- FarFrom ??? -->				   

<!-- relations instead of simple features: doesn't work now, to be changed at some point: -->
@b1:physical(ball ^ <Size>(s1:quality ^ big))
@b1:physical(ball ^ <Color>(s2:quality ^ blue))
@b1:physical(ball ^ <Size>(s1:quality ^ big) ^ <Color>(s2:quality ^ red))
@b1:physical(thing ^ <Shape>(s2:quality ^ round))
@b1:physical(book ^ <Name>(s2:entity ^ Borland))


<!-- Lists w/o overall structure -->
@e1:entity(and ^ <First>(b1:physical ^ ball) ^ <Next>(b2:physical ^ box))  
@e1:entity(and ^ <First>(b1:physical ^ ball) ^ <Next>(e2:entity ^ and <First>(b2:physical ^ box ^ <Next>(b3:physical ^ mug)))  @e1:entity(and ^ <First>(b1:physical ^ ball) ^ <Next>(e2:entity ^ and ^ <First>(b2:physical ^ box) ^ <Next>(b3:physical ^ mug)))  

@e1:entity(and ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(b2:physical ^ box ^ <Shape>tall))  

@e1:entity(and ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(b2:physical ^ box ^ <NextTo>(b3:entity ^ mug ^ <Shape>tall)))  

@e1:entity(and ^ <First>(b1:physical ^ ball ^ <Color>red) ^ <Next>(e2:entity ^ and <First>(b2:physical ^ box ^ <Size>big ^ <Next>(b3:physical ^ mug ^ <Shape>tall)))  <!-- doesn't generate; why? -->

@e1:entity(and ^ <First>(b1:physical ^ ball ^ <Size>big) ^ <Next>(b2:physical ^ box ^ <Size>small))  <!-- will not generate because nominals are reused in modifiers -> wrong graph structure -->





<!- ===============  WITH OVERALL STRUCTURE ============ -->


<!-- Simple input with overall structure -->

@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball)
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(b1:entity ^ ball)
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(c1:quality ^ red)
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Modality>somemod ^ <Content>(e1:event ^ somethinghappens)
@d1:dvp(c-goal  ^ <SpeechAct>question  ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(e1:event ^ somethinghappens)
@d1:dvp(c-goal  ^ <SpeechAct>directive  ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(e1:event ^ somethinghappens)
@d1:dvp(c-goal  ^ <SpeechAct>commitment  ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(e1:event ^ somethinghappens)
@d1:dvp(c-goal  ^ <SpeechAct>unknown  ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(e1:event ^ somethinghappens)
@d1:dvp(c-goal                        ^ <Relation>accept  ^  <Modality>somemod ^ <Content>(e1:event ^ somethinghappens)


<!-- inserting a perception verb-structure: (doesn't work as should)-->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Modality>vision ^ <Content>(b1:physical ^ ball))


<!-- Simple input with embedding with overall structure -->

@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(e1:action ^ walk ^ <Actor>(b1:physical ^ robot ^ <Size>(s1:quality ^ big))))

<!-- Simple acknowledgments, without context-sensitive content -->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>accept)
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>reject) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>alreadyTrue) 


<!-- Simple greetings with overall structure-->
@d1:dvp(c-goal  ^ <SpeechAct>greeting)



<!-- Transitivity: Ascription -->

<!-- new version -->
<!-- quality-properties -->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:quality ^ big))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Size>(b3:quality ^ big))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Shape>(b3:quality ^ big))) 

<!-- relational properties -->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <TopIn>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <TopOn>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <NearTo>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <FarFrom>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <NextTo>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <LeftOf>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <RightOf>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <Owner>(b3:entity ^ robot)))  <!-- not working -->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <Owner>(b3:person ^ GJ)))  <!-- not working -->


@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball)  ^ <FarFrom>(b3:entity ^ box ^ <InfoStatus>familiar)))

 <!-- with familiar Target it does not work: scope-replacement does not happen: -->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ ball ^ <InfoStatus>familiar)  ^ <FarFrom>(b3:entity ^ box))) 
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <InfoStatus>familiar)  ^ <Shape>(b3:quality ^ big))) 


<!-- ascription yes/no questions -->
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:quality ^ big))) 


<!-- ascription wh-questions -->

<!-- question target; does not work: scope-replacement does not happen -->
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <Questioned>true)  ^ <Color>(b3:quality ^ color) ))


<!-- question property -->
<!-- original --> 
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <InfoStatus>familiar)  ^ <Property>(b3:quality ^ color) ^ <Question>property  ))

@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Property>(b3:quality ^ red) ^ <Question>target  ))
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <Size>big)  ^ <Property>(b3:quality ^ red) ^ <Question>target  ))

<!-- new --> 
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:quality ^ color ^ <Questioned>true))  )
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Size>(b3:quality ^ size ^ <Questioned>true))  )
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Shape>(b3:quality ^ shape ^ <Questioned>true))  )

@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Color>(b3:entity ^ color ^ <Questioned>true ^ <Color>red))  ) 

<!-- with familiar target also does not work -->
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box ^ <InfoStatus>familiar)  ^ <Shape>(b3:quality ^ shape ^ <Questioned>true))  )

<!-- idea to do: simpler input: -->
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Shape>(b3:quality ^ <Questioned>true))  )

<!-- question location -->
@d1:dvp(c-goal  ^ <SpeechAct>question  ^  <Content>(e1:ascription ^ <Target>(b2:entity ^ box)  ^ <Location>(b3:m-location ^ <Questioned>true))  )







<!-- ---------- Entities ONLY --------- -->

<!-- Delimitation with structure -->

@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <InfoStatus>familiar))


<!-- Quantification and number with overall structure -->

@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball))
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Quantity>0))
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Quantity>1))
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Quantity>2)) <!-- any number -->
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Quantity>multiple))
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Quantity>unknown))
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Quantity>dkfhjdfk))


<!-- Color and size w/o overall structure-->

@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Color>(s1:quality ^ blue)))
@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Size>(s2:quality ^ big))

<!-- Two properties -->

@d1:dvp(c-goal  ^ <SpeechAct>somesa  ^ <Relation>somerel  ^  <Modality>somemod ^ <Content>(b1:physical ^ ball ^ <Size>(s1:quality ^ big) ^ <Color>(s2:quality ^ red)))


<!-- Lists with overall structure -->
@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer ^ <Content>(e1:entity(and ^ <First>(b1:physical ^ ball ^ <Size>big) ^ Next(b2:physical ^ box ^ <Size>small)))

@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer ^ <Content>(@e1:entity(and ^ <First>(b1:physical ^ ball ^ <Size>big) ^ Next(e2:entity ^ and ^ <First>(b2:physical ^ box ^ <Size>small) ^ <Next>(b3:physical ^ mug ^ <Color>red))))

<!-- when adding perception works, add here one with <Modality>vision -->



<!-- =======  OPENING ENGAGEMENTS  ====== -->

@d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>help)		

<realizations>
<string>could you help me please</string>
<string>could you tell me something please</string>
<string>I am sorry but I can not find a book</string>
</realizations>

@d1:dvp(c-goal ^ <SpeechAct>greeting)

<realizations>
<string>hi</string>
<string>hi there</string>
<string>hello</string>
</realizations>

@d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>greet)

<realizations>
<string>hi</string>
<string>hi there</string>
<string>hello</string>
</realizations>


:p @d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>close)

<realizations>
<string>bye bye</string>
<string>bye bye and thanks for all the fish</string>
</realizations>

:p @d1:dvp(c-goal ^ <SpeechAct>gainAttention ^ <AttentionType>kill)
<realizations>
<string>I am sorry but I have to come for you</string>
</realizations>


<!-- =======  BELOW IS STUFF UNDER (RE-)CONSTRUCTION  ====== -->

<!-- Location / Spatial relation -->
<!- not yet, but intending something like this: -->
<!--@b1:physical(ball ^ <Left-of>b2:entity(box))


<!-- Mood and tense -->

@d1:dvp(c-goal  ^ <SpeechAct>assertion  ^ <Relation>answer  ^  <Modality>vision ^ <Content>(e1:event ^ somethinghappens))

@e1:event(somethinghappens ^ <SpeechAct>question)
@e1:event(somethinghappens ^ <SpeechAct>directive)
@e1:event(somethinghappens ^ <SpeechAct>commitment)
@e1:event(somethinghappens ^ <SpeechAct>unknown)



<!-- more to come ->
