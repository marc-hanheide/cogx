%-------------------------------------------------------------------------
% ENGAGEMENT
%-------------------------------------------------------------------------

understand : event : utter(S, H, Nom) <-
	i : sort(Nom, greeting),
	int_id(Int),
	int : agent(Int, S) / p(1.0),
	int : post(Int, state(['engagement-open', agent(S), agent(H)])) / p(1.0).

%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

understand : event : utter(S, H, Nom) <-
	i : sort(Nom, closing),
	int_id(Int),
	int : agent(Int, S) / p(1.0),
	int : post(Int, state(['engagement-closed', agent(S), agent(H)])) / p(1.0).

%-------------------------------------------------------------------------

understand : event : utter(S, H, Nom) <-
	i : sort(Nom, communication),
	i : prop(Nom, thank),
	int_id(Int),
	int : agent(Int, S) / p(1.0),
	int : post(Int, state([thanked, agent(S), patient(H)])) / p(1.0).

%-------------------------------------------------------------------------

appreciation_marker(fine).
appreciation_marker(right).
appreciation_marker(cool).

understand : event : utter(S, H, Nom) <-
	i : sort(Nom, marker),
	i : prop(Nom, Prop),
	appreciation_marker(Prop),
	int_id(Int),
	int : agent(Int, S) / p(1.0),
	int : post(Int, state([appreciated, agent(S), patient(H)])) / p(1.0).

%-------------------------------------------------------------------------
