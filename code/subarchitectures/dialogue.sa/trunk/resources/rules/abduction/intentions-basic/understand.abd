int_id(i1).
mirror_id(idm).

disjoint([p(x), p(y), p(z)]).

%understand : event : utter(S, H, Nom) <-
%	loop_this(Nom).

%loop_this(X).

%loop_this(Nom) <-
%	loop_this(Nom).

% X is Y
understand : event : utter(S, H, Nom) <-
	i : sort(Nom, ascription),
	i : 'feat_Mood'(Nom, ind),
	i : 'feat_Tense'(Nom, pres),
	polarity(Nom, Polarity),
	i : 'rel_Subject'(Nom, SubjNom),
	i : 'rel_Cop-Restr'(Nom, RestrNom),
	i : 'rel_Cop-Scope'(Nom, ScopeNom),
	int_id(Int),
	int : agent(Int, S) / -0.1,
	assert_restr(S, H, Int, SubjNom, RestrNom),
	assert_scope(S, H, Int, SubjNom, Polarity, ScopeNom),

	% mirroring
	mirror_id(MInt),
	int : agent(MInt, H) / -0.1,
	assert_restr(H, S, MInt, SubjNom, RestrNom),
	assert_scope(H, S, MInt, SubjNom, Polarity, ScopeNom).

%-------------------------------------------------------------------------

% is X Y
understand : event : utter(S, H, Nom) <-
	i : sort(Nom, ascription),
	i : 'feat_Mood'(Nom, int),
	i : 'feat_Tense'(Nom, pres),
	i : 'rel_Subject'(Nom, SubjNom),
	i : 'rel_Cop-Restr'(Nom, RestrNom),
	i : 'rel_Cop-Scope'(Nom, ScopeNom),
	int_id(Int),
	int : agent(Int, S) / -0.1,
	assert_restr(S, H, Int, SubjNom, RestrNom),
	query_scope(S, H, Int, SubjNom, ScopeNom).

query_scope(S, H, Int, Ref, Nom) <-
	query_prop(Nom, Prop, Value),
	int : pre(Int, private(S), rpv(Ref, Prop, not(or(Value, not(Value))))) / -0.1,
	int : pre(Int, attrib(S, H), rpv(Ref, Prop, or(Value, not(Value)))) / -0.1,
	int : post(Int, shared(S, H), rpv(Ref, Prop, or(Value, not(Value)))) / -0.1.

%-------------------------------------------------------------------------

% find X
understand : event : utter(S, H, Nom) <-
	i : sort(Nom, 'action-non-motion'),
	i : 'feat_Mood'(Nom, imp),
	i : 'rel_Actor'(Nom, ActorNom),
		i : prop(ActorNom, addressee),
	find_ref(Nom, RefNom),
	int_id(Int),
	int : agent(Int, S) / -0.1,
	assert_restr(S, H, Int, RefNom, RefNom),
	i : prop(Nom, ActionProp),
	action_effects(S, H, Int, RefNom, ActionProp).


action_effects(S, H, Int, Ref, find) <-
	int : pre(Int, private(H), rpv(Ref, 'Location', unknown)) / -0.1,
	int : post(Int, shared(S, H), rpv(Ref, 'Location', not(unknown))) / -0.1.


% NOTE: this is a hack. A proper parse would be sufficiently clear.
find_ref(Nom, RefNom) <-
	i : 'rel_Patient'(Nom, RefNom),
	i : sort(RefNom, thing).

find_ref(Nom, RefNom) <-
	i : 'rel_Recipient'(Nom, RefNom),
	i : sort(RefNom, thing).

%-------------------------------------------------------------------------
