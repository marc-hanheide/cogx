<!-- Inner build file for a module in the CogX system -->
<project name="execution" default="compile" basedir=".">
	<property name="projectroot.dir" value="${basedir}/../.." />
	<property file="${projectroot.dir}/build.properties" />

	<!-- =================================================================== -->
	<!-- Add JAR files to classpath                                          -->
	<!-- =================================================================== -->
	<path id="build.classpath">
        <fileset dir="${jar.dir}" includes="*.jar" erroronmissingdir="false"/>
		<pathelement path="${ice.jar}" />
		<pathelement path="${cast.jar}" />
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Controls what is compiled -->
	<property name="src.dir" value="./src/java" />
	<property name="slice.dir" value="./src/slice" />

	<!-- Includes the slice2java task from Ice. Requires ant-ice.jar to be in your classpath -->
	<taskdef name="slice2java" classname="Slice2JavaTask" />


	<!-- =================================================================== -->
	<!-- Preparation                                                         -->
	<!-- =================================================================== -->
	<target name="prepare" description="any project-specific init">
		<mkdir dir="${output.dir}" />
	</target>






	<!-- =================================================================== -->
	<!-- Source generation                                                   -->
	<!-- =================================================================== -->
	<target name="slice-execution" depends="prepare" description="generates source from slice">
		<slice2java tie="true" outputdir="${src.dir}">
			<fileset dir="${slice.dir}" includes="Execution.ice" />
			<includepath>
				<pathelement path="${slice.dir}" />
				<pathelement path="${castslice.dir}" />
				<pathelement path="${plannerslice.dir}" />
				<pathelement path="${beliefslice.dir}" />
                <pathelement path="${castbeliefslice.dir}" />
			</includepath>
		</slice2java>
	</target>


	<target name="slice" depends="slice-execution" description="generates source from slice" />

	<!-- =================================================================== -->
	<!-- Expand libraries                                                    -->
	<!-- =================================================================== -->

	<target name="expandlibs" depends="prepare">
		<echo message="Copying external libraries for execution.sa to ${jar.dir}" />
    	<copy todir="${jar.dir}">
	    <fileset dir="./lib">
	        <include name="**/*.jar"/>
		</fileset>
    	</copy>
	</target>


	<!-- =================================================================== -->
	<!-- slice file compilation                                              -->
	<!-- =================================================================== -->
	<target name="compile-slice" depends="slice" description="compiles autogenerated classes">
		<javac srcdir="${src.dir}/execution/slice" destdir="${output.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
	</target>


	<!-- =================================================================== -->
	<!-- Basic compilation                                                   -->
	<!-- =================================================================== -->
	<target name="compile" depends="compile-slice,expandlibs" description="compiles the source code">
		<javac srcdir="${src.dir}" destdir="${output.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<!-- =================================================================== -->
	<!-- Cleanup                                                             -->
	<!-- =================================================================== -->
	<property name="generated.dir" value="execution/slice" />

	<target name="clean">
		<delete file="${src.dir}/.depend" />
		<delete dir="${src.dir}/${generated.dir}" />
		<delete dir="${output.dir}/${generated.dir}" />
	</target>


</project>
