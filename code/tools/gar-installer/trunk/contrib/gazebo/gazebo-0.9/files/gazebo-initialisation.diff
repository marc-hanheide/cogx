diff -ru gazebo-0.9.0/libgazebo/IfaceFactory.cc gazebo-0.9.0-new/libgazebo/IfaceFactory.cc
--- gazebo-0.9.0/libgazebo/IfaceFactory.cc	2009-07-08 20:00:40.000000000 +0200
+++ gazebo-0.9.0-new/libgazebo/IfaceFactory.cc	2011-04-28 23:02:52.000000000 +0200
@@ -33,21 +33,21 @@
 
 using namespace gazebo;
 
-std::map<std::string, IfaceFactoryFn> IfaceFactory::ifaces;
+//std::map<std::string, IfaceFactoryFn> IfaceFactory::ifaces;
 
 // Register a iface class.  Use by dynamically loaded modules
 void IfaceFactory::RegisterIface(std::string classname, IfaceFactoryFn factoryfn)
 {
-  ifaces[classname] = factoryfn;
+    getIfaces()[classname] = factoryfn;
 }
 
 // Create a new instance of a iface.  Used by the world when reading
 // the world file.
 Iface *IfaceFactory::NewIface(const std::string &classname)
 {
-  if (ifaces.find(classname) != ifaces.end())
+    if (getIfaces().find(classname) != getIfaces().end())
   {
-    return (ifaces[classname]) ();
+      return (getIfaces()[classname]) ();
   }
   else
   {
Nur in gazebo-0.9.0-new/libgazebo: IfaceFactory.cc~.
diff -ru gazebo-0.9.0/libgazebo/IfaceFactory.hh gazebo-0.9.0-new/libgazebo/IfaceFactory.hh
--- gazebo-0.9.0/libgazebo/IfaceFactory.hh	2009-07-08 20:00:40.000000000 +0200
+++ gazebo-0.9.0-new/libgazebo/IfaceFactory.hh	2011-04-28 23:01:30.000000000 +0200
@@ -63,7 +63,8 @@
     public: static Iface *NewIface(const std::string &classname);
   
     // A list of registered iface classes
-    private: static std::map<std::string, IfaceFactoryFn> ifaces;
+    // private: static std::map<std::string, IfaceFactoryFn> ifaces;
+  private: static std::map<std::string, IfaceFactoryFn> &getIfaces() { static std::map<std::string, IfaceFactoryFn> iface; return iface; };
   
   };
 
Nur in gazebo-0.9.0-new/libgazebo: IfaceFactory.hh~.
diff -ru gazebo-0.9.0/server/CMakeLists.txt gazebo-0.9.0-new/server/CMakeLists.txt
--- gazebo-0.9.0/server/CMakeLists.txt	2009-07-08 20:00:39.000000000 +0200
+++ gazebo-0.9.0-new/server/CMakeLists.txt	2011-04-28 23:58:39.000000000 +0200
@@ -108,7 +108,7 @@
 
 LIST_TO_STRING(GAZEBO_CFLAGS "${gazeboserver_cflags}")
 
-SET_SOURCE_FILES_PROPERTIES(${gazeboserver_sources} PROPERTIES COMPILE_FLAGS "${GAZEBO_CFLAGS} ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE}}")
+SET_SOURCE_FILES_PROPERTIES(${gazeboserver_sources} PROPERTIES COMPILE_FLAGS "${GAZEBO_CFLAGS} ${ODE_CFLAGS} ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE}}")
 
 IF (CMAKE_LINK_FLAGS_${CMAKE_BUILD_TYPE})
   SET_SOURCE_FILES_PROPERTIES(${gazeboserver_sources} PROPERTIES LINK_FLAGS 
Nur in gazebo-0.9.0-new/server: CMakeLists.txt~.
diff -ru gazebo-0.9.0/server/controllers/ControllerFactory.cc gazebo-0.9.0-new/server/controllers/ControllerFactory.cc
--- gazebo-0.9.0/server/controllers/ControllerFactory.cc	2009-07-08 20:00:39.000000000 +0200
+++ gazebo-0.9.0-new/server/controllers/ControllerFactory.cc	2011-04-28 23:13:08.000000000 +0200
@@ -40,13 +40,13 @@
 
 using namespace gazebo;
 
-std::map<std::string, ControllerFactoryFn> ControllerFactory::controllers;
+// std::map<std::string, ControllerFactoryFn> ControllerFactory::controllers;
 
 ////////////////////////////////////////////////////////////////////////////////
 // Register a controller class.  Use by dynamically loaded modules
 void ControllerFactory::RegisterController(std::string type, std::string classname, ControllerFactoryFn factoryfn)
 {
-  controllers[classname] = factoryfn;
+    getControllers()[classname] = factoryfn;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -54,9 +54,9 @@
 // the world file.
 Controller *ControllerFactory::NewController(const std::string &classname, Entity *parent)
 {
-  if (controllers[classname])
+    if (getControllers()[classname])
   {
-    return (controllers[classname]) (parent);
+      return (getControllers()[classname]) (parent);
   }
   else
   {
Nur in gazebo-0.9.0-new/server/controllers: ControllerFactory.cc~.
diff -ru gazebo-0.9.0/server/controllers/ControllerFactory.hh gazebo-0.9.0-new/server/controllers/ControllerFactory.hh
--- gazebo-0.9.0/server/controllers/ControllerFactory.hh	2009-07-08 20:00:39.000000000 +0200
+++ gazebo-0.9.0-new/server/controllers/ControllerFactory.hh	2011-04-28 23:11:38.000000000 +0200
@@ -63,7 +63,8 @@
   public: static void LoadPlugin(const std::string &plugin, const std::string &classname);
 
   // A list of registered controller classes
-  private: static std::map<std::string, ControllerFactoryFn> controllers;
+  // private: static std::map<std::string, ControllerFactoryFn> controllers;
+  private: static std::map<std::string, ControllerFactoryFn> &getControllers() { static std::map<std::string, ControllerFactoryFn> controllers; return controllers; };
 
 };
 
Nur in gazebo-0.9.0-new/server/controllers: ControllerFactory.hh~.
Nur in gazebo-0.9.0-new/server/physics: Geom.cc~.
diff -ru gazebo-0.9.0/server/sensors/SensorFactory.cc gazebo-0.9.0-new/server/sensors/SensorFactory.cc
--- gazebo-0.9.0/server/sensors/SensorFactory.cc	2009-07-08 20:00:39.000000000 +0200
+++ gazebo-0.9.0-new/server/sensors/SensorFactory.cc	2011-04-28 23:10:14.000000000 +0200
@@ -31,14 +31,14 @@
 
 using namespace gazebo;
 
-std::map<std::string, SensorFactoryFn> SensorFactory::sensors;
+// std::map<std::string, SensorFactoryFn> SensorFactory::sensors;
 
 
 // Register a model class.  Use by dynamically loaded modules
 void SensorFactory::RegisterSensor(std::string type, std::string classname,
                                    SensorFactoryFn factoryfn)
 {
-  sensors[classname] = factoryfn;
+    getSensors()[classname] = factoryfn;
 }
 
 
@@ -46,9 +46,9 @@
 // the world file.
 Sensor *SensorFactory::NewSensor(const std::string &classname, Body *body)
 {
-  if (sensors[classname])
+    if (getSensors()[classname])
   {
-    return (sensors[classname]) (body);
+      return (getSensors()[classname]) (body);
   }
 
   return NULL;
Nur in gazebo-0.9.0-new/server/sensors: SensorFactory.cc~.
diff -ru gazebo-0.9.0/server/sensors/SensorFactory.hh gazebo-0.9.0-new/server/sensors/SensorFactory.hh
--- gazebo-0.9.0/server/sensors/SensorFactory.hh	2009-07-08 20:00:39.000000000 +0200
+++ gazebo-0.9.0-new/server/sensors/SensorFactory.hh	2011-04-28 23:09:47.000000000 +0200
@@ -62,7 +62,8 @@
   public: static Sensor *NewSensor(const std::string &classname, Body *body);
 
   /// \brief A list of registered sensor classes
-  private: static std::map<std::string, SensorFactoryFn> sensors;
+  // private: static std::map<std::string, SensorFactoryFn> sensors;
+  private: static std::map<std::string, SensorFactoryFn> &getSensors() { static std::map<std::string, SensorFactoryFn> sensors; return sensors; };
 };
 
 
Nur in gazebo-0.9.0-new/server/sensors: SensorFactory.hh~.
