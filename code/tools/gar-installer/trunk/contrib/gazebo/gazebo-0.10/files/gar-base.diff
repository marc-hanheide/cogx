diff -ru orig-gazebo-0.10.0/CMakeLists.txt gazebo-0.10.0/CMakeLists.txt
--- orig-gazebo-0.10.0/CMakeLists.txt	2010-01-13 22:58:32.000000000 +0100
+++ gazebo-0.10.0/CMakeLists.txt	2011-11-18 11:48:49.923500337 +0100
@@ -94,7 +94,7 @@
   ########################################
   # Make the gazebo rc file
   CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/cmake/gazeborc.cmake ${PROJECT_BINARY_DIR}/.gazeborc @ONLY)
-  INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/.gazeborc DESTINATION $ENV{HOME}/)
+  # DON'T INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/.gazeborc DESTINATION $ENV{HOME}/)
  
   include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR})
   
diff -ru orig-gazebo-0.10.0/libgazebo/IfaceFactory.cc gazebo-0.10.0/libgazebo/IfaceFactory.cc
--- orig-gazebo-0.10.0/libgazebo/IfaceFactory.cc	2010-01-13 22:58:32.000000000 +0100
+++ gazebo-0.10.0/libgazebo/IfaceFactory.cc	2011-11-18 11:48:49.923500337 +0100
@@ -33,21 +33,21 @@
 
 using namespace gazebo;
 
-std::map<std::string, IfaceFactoryFn> IfaceFactory::ifaces;
+//std::map<std::string, IfaceFactoryFn> IfaceFactory::ifaces;
 
 // Register a iface class.  Use by dynamically loaded modules
 void IfaceFactory::RegisterIface(std::string classname, IfaceFactoryFn factoryfn)
 {
-  ifaces[classname] = factoryfn;
+    getIfaces()[classname] = factoryfn;
 }
 
 // Create a new instance of a iface.  Used by the world when reading
 // the world file.
 Iface *IfaceFactory::NewIface(const std::string &classname)
 {
-  if (ifaces.find(classname) != ifaces.end())
+    if (getIfaces().find(classname) != getIfaces().end())
   {
-    return (ifaces[classname]) ();
+      return (getIfaces()[classname]) ();
   }
   else
   {
diff -ru orig-gazebo-0.10.0/libgazebo/IfaceFactory.hh gazebo-0.10.0/libgazebo/IfaceFactory.hh
--- orig-gazebo-0.10.0/libgazebo/IfaceFactory.hh	2010-01-13 22:58:32.000000000 +0100
+++ gazebo-0.10.0/libgazebo/IfaceFactory.hh	2011-11-18 11:48:49.923500337 +0100
@@ -63,7 +63,8 @@
     public: static Iface *NewIface(const std::string &classname);
   
     // A list of registered iface classes
-    private: static std::map<std::string, IfaceFactoryFn> ifaces;
+    // private: static std::map<std::string, IfaceFactoryFn> ifaces;
+  private: static std::map<std::string, IfaceFactoryFn> &getIfaces() { static std::map<std::string, IfaceFactoryFn> iface; return iface; };
   
   };
 
diff -ru orig-gazebo-0.10.0/Media/materials/scripts/Gazebo.material gazebo-0.10.0/Media/materials/scripts/Gazebo.material
--- orig-gazebo-0.10.0/Media/materials/scripts/Gazebo.material	2010-01-13 22:58:33.000000000 +0100
+++ gazebo-0.10.0/Media/materials/scripts/Gazebo.material	2011-11-18 11:56:37.047500337 +0100
@@ -55,7 +55,7 @@
     pass
     {
       scene_blend add
-      lightning on 
+      lighting on 
       iteration per_light point
 
       fragment_program_ref Gazebo/PointLightFS
@@ -1125,7 +1125,7 @@
     {
       ambient 1.0 1.0 1.0 1.0
       diffuse 1.0 1.0 1.0 1.0
-      specular 0.1 0.1 0.1
+      specular 0.1 0.1 0.1 1
       emissive 0 0 0
       shading phong
     }
@@ -1140,7 +1140,7 @@
     {
       ambient 0.0 0.0 0.0 1.0
       diffuse 0.0 0.0 0.0 1.0
-      specular 0.2 0.2 0.2
+      specular 0.2 0.2 0.2 1
       emissive 0.0 0.0 0.0
       shading phong
     }
@@ -1155,7 +1155,7 @@
     {
       ambient 0.85 0.85 0.85 1.0
       diffuse 0.85 0.85 0.85 1.0
-      specular 0.0 0.0 0.0
+      specular 0.0 0.0 0.0 0
       emissive 0.0 0.0 0.0
       shading phong
     }
@@ -1171,7 +1171,7 @@
     {
       ambient 0.65 0.65 0.65 1.0
       diffuse 0.65 0.65 0.65 1.0
-      specular 0.0 0.0 0.0
+      specular 0.0 0.0 0.0 0
       emissive 0.0 0.0 0.0
       shading phong
     }
@@ -1186,7 +1186,7 @@
     {
       ambient 0.58 0.6 0.612 1.0
       diffuse 0.58 0.6 0.612 1.0
-      specular 1.0 1.0 1.0
+      specular 1.0 1.0 1.0 1
       emissive 0 0 0
       shading phong
     }
@@ -1201,7 +1201,7 @@
     {
       ambient 0.38 0.4 0.412 1.0
       diffuse 0.38 0.4 0.412 1.0
-      specular 0.1 0.1 0.1
+      specular 0.1 0.1 0.1 1
       emissive 0 0 0
       shading phong
     }
diff -ru orig-gazebo-0.10.0/server/CMakeLists.txt gazebo-0.10.0/server/CMakeLists.txt
--- orig-gazebo-0.10.0/server/CMakeLists.txt	2010-01-13 22:58:33.000000000 +0100
+++ gazebo-0.10.0/server/CMakeLists.txt	2011-11-18 11:48:49.923500337 +0100
@@ -138,7 +138,7 @@
 
 LIST_TO_STRING(GAZEBO_CFLAGS "${gazeboserver_cflags}")
 
-SET_SOURCE_FILES_PROPERTIES(${gazeboserver_sources} PROPERTIES COMPILE_FLAGS "${GAZEBO_CFLAGS} ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE}}")
+SET_SOURCE_FILES_PROPERTIES(${gazeboserver_sources} PROPERTIES COMPILE_FLAGS "${GAZEBO_CFLAGS} ${ODE_CFLAGS} ${CMAKE_C_FLAGS_${CMAKE_BUILD_TYPE}}")
 
 IF (CMAKE_LINK_FLAGS_${CMAKE_BUILD_TYPE})
   SET_SOURCE_FILES_PROPERTIES(${gazeboserver_sources} PROPERTIES LINK_FLAGS 
@@ -159,7 +159,7 @@
                                    assimp
 )
 
-target_link_libraries( gazebo_server ${libtool_library} ${freeimage_library} gazebo gazebo_rendering gazebo_physics )
+target_link_libraries( gazebo_server ${libtool_library} ${freeimage_library} gazebo gazebo_rendering gazebo_physics xml2)
 
 if (INCLUDE_BULLET)
   target_link_libraries(gazebo-exec gazebo_physics_bullet ${bullet_link_libs})
diff -ru orig-gazebo-0.10.0/server/controllers/ControllerFactory.cc gazebo-0.10.0/server/controllers/ControllerFactory.cc
--- orig-gazebo-0.10.0/server/controllers/ControllerFactory.cc	2010-01-13 22:58:33.000000000 +0100
+++ gazebo-0.10.0/server/controllers/ControllerFactory.cc	2011-11-18 11:48:49.923500337 +0100
@@ -41,13 +41,13 @@
 
 using namespace gazebo;
 
-std::map<std::string, ControllerFactoryFn> ControllerFactory::controllers;
+// std::map<std::string, ControllerFactoryFn> ControllerFactory::controllers;
 
 ////////////////////////////////////////////////////////////////////////////////
 // Register a controller class.  Use by dynamically loaded modules
 void ControllerFactory::RegisterController(std::string type, std::string classname, ControllerFactoryFn factoryfn)
 {
-  controllers[classname] = factoryfn;
+    getControllers()[classname] = factoryfn;
 }
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -55,9 +55,9 @@
 // the world file.
 Controller *ControllerFactory::NewController(const std::string &classname, Entity *parent)
 {
-  if (controllers[classname])
+    if (getControllers()[classname])
   {
-    return (controllers[classname]) (parent);
+      return (getControllers()[classname]) (parent);
   }
   else
   {
diff -ru orig-gazebo-0.10.0/server/controllers/ControllerFactory.hh gazebo-0.10.0/server/controllers/ControllerFactory.hh
--- orig-gazebo-0.10.0/server/controllers/ControllerFactory.hh	2010-01-13 22:58:33.000000000 +0100
+++ gazebo-0.10.0/server/controllers/ControllerFactory.hh	2011-11-18 11:48:49.923500337 +0100
@@ -63,7 +63,8 @@
   public: static void LoadPlugin(const std::string &plugin, const std::string &classname);
 
   // A list of registered controller classes
-  private: static std::map<std::string, ControllerFactoryFn> controllers;
+  // private: static std::map<std::string, ControllerFactoryFn> controllers;
+  private: static std::map<std::string, ControllerFactoryFn> &getControllers() { static std::map<std::string, ControllerFactoryFn> controllers; return controllers; };
 
 };
 
diff -ru orig-gazebo-0.10.0/server/sensors/SensorFactory.cc gazebo-0.10.0/server/sensors/SensorFactory.cc
--- orig-gazebo-0.10.0/server/sensors/SensorFactory.cc	2010-01-13 22:58:33.000000000 +0100
+++ gazebo-0.10.0/server/sensors/SensorFactory.cc	2011-11-18 11:48:49.927500337 +0100
@@ -32,14 +32,14 @@
 
 using namespace gazebo;
 
-std::map<std::string, SensorFactoryFn> SensorFactory::sensors;
+// std::map<std::string, SensorFactoryFn> SensorFactory::sensors;
 
 
 // Register a model class.  Use by dynamically loaded modules
 void SensorFactory::RegisterSensor(std::string type, std::string classname,
                                    SensorFactoryFn factoryfn)
 {
-  sensors[classname] = factoryfn;
+    getSensors()[classname] = factoryfn;
 }
 
 
@@ -47,9 +47,9 @@
 // the world file.
 Sensor *SensorFactory::NewSensor(const std::string &classname, Body *body)
 {
-  if (sensors[classname])
+  if (getSensors()[classname])
   {
-    Sensor *sensor = (sensors[classname]) (body);
+    Sensor *sensor = (getSensors()[classname]) (body);
     SensorManager::Instance()->AddSensor(sensor);
     return sensor;
   }
diff -ru orig-gazebo-0.10.0/server/sensors/SensorFactory.hh gazebo-0.10.0/server/sensors/SensorFactory.hh
--- orig-gazebo-0.10.0/server/sensors/SensorFactory.hh	2010-01-13 22:58:33.000000000 +0100
+++ gazebo-0.10.0/server/sensors/SensorFactory.hh	2011-11-18 11:48:49.927500337 +0100
@@ -62,7 +62,8 @@
   public: static Sensor *NewSensor(const std::string &classname, Body *body);
 
   /// \brief A list of registered sensor classes
-  private: static std::map<std::string, SensorFactoryFn> sensors;
+  // private: static std::map<std::string, SensorFactoryFn> sensors;
+  private: static std::map<std::string, SensorFactoryFn> &getSensors() { static std::map<std::string, SensorFactoryFn> sensors; return sensors; };
 };
 
 
