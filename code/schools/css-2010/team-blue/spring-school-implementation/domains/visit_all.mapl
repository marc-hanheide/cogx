(define (domain cogx)

	(:requirements :mapl :adl :object-fluents)
	
	(:types 
		place place_id - object
		robot - agent
	)
	
	(:predicates
		(connected ?n1 - place ?n2 - place)
		(visited ?p - place)
		(investigated ?p - place)
;		(detected ?p - place)
    	)	

	(:functions
	        (is-in ?r - robot) - place
 	)
	
;;; actions ;;;

	(:action move
	 :agent (?a - robot)
	 :parameters (?to - place)
	 :variables (?from - place)
	 :precondition (and
		  (= (is-in ?a) ?from)
	          (or (connected ?from ?to)
	            (connected ?to ?from))
		  (investigated ?from)
		)
	 :effect (and
		(assign (is-in ?a) ?to)
                (visited ?to)
		(update (visited ?to) true)
	))


	(:action look-for-objects
	 :agent (?a - robot)
	 :variables (?loc - place)
	 :precondition (and
		 (= (is-in ?a) ?loc)
		 (not (investigated (is-in ?a)))
		)
	 :effect (and
		   (investigated ?loc)
		   (update (investigated ?loc) true)
		   (forall (?nb - place) 
			(when   (connected ?nb ?loc)
				(and 
				  (investigated ?nb)
				  (update (investigated ?nb) true)
				)
			 )
		   )
		 )
	)


;	(:action ask-for-your-name
;	 :agent (?a - robot)
;	 :parameters (?to - place)
;	 :variables (?from - place)
;	 :precondition (and
;		(= (is-in ?a) ?from)
;	        (or (connected ?from ?to)
;	            (connected ?to ?from))
;		)
;	 :effect (and
;		(assign (is-in ?a) ?to)
;                (investigated ?to)
;		(update (investigated ?to) true)
;	))
;


)
