(define (domain task2)

        (:requirements :mapl :adl :object-fluents)

        (:types
                place place_name place_id name comaroom room_name - object
                robot - agent
                visualobject person - movable		
        )

	(:predicates
                (connected ?loc1 - place ?loc2  - place)
                (checked_for_objects ?loc - place)
                (started ?a - robot)
		(ready_to_move_to_report_pos ?a - robot)
		(ready_to_report ?a - robot)
                (finished ?a - robot)
		(detected ?v - visualobject)
                (have_all_info_about ?p - person)
        ;        (locked_due_to_missing_object_information)
	)

        (:functions
                (is-in ?r - movable) - place
                (is-in ?r - robot) - place
		(name ?o - visualobject) - object
		(placeid ?loc - place) - place_id
		(start_place ?r - robot) - place
                (person-name ?p - person) - name
                (record ?p - person) - name
                (in-room ?loc - place) - comaroom
                (concepts ?r - comaroom) - room_name
                (is-in-room ?m - movable) - comaroom
        )

        (:constants
                NO_RECORD - visualobject
        )

        (:action start
                 :agent (?a - robot)
		 :variables (?at - place)
                 :precondition (and (not (started ?a)) (= (is-in ?a) ?at))
                 :effect (and
                                (started ?a)
				(assign (start_place ?a) ?at)
                                (update (started ?a) true)
				(update (start_place ?a) ?at)
                         )
        )

        (:action move
	         :agent (?a - robot)
	         :parameters (?to - place)
		 :variables (?from - place)
		 :precondition (and
				   (started ?a)
                       ;            (not (locked_due_to_missing_object_information))
				   (= (is-in ?a) ?from)
	                	   (or (connected ?from ?to)
	            		       (connected ?to ?from))
			       )
                 :effect (assign (is-in ?a) ?to)
        )

        (:action look-for-people-and-objects
                 :agent (?a - robot)
                 :variables (?at - place)
                 :precondition (and 
		 	       	    (started ?a) 
                     ;               (not (locked_due_to_missing_object_information))
				    (not (checked_for_objects ?at)) 
				    (= (is-in ?a) ?at)
			       )
                 :effect (and 
                              (checked_for_objects ?at)
			      (update (checked_for_objects ?at) true)
                         )
        )

        (:action ask-for-your-name
                 :agent(?a - robot)
                 :parameters (?p - person)
                 :variables (?at - place)
                 :precondition (and 
                                    (started ?a)
                        ;            (not (locked_due_to_missing_object_information))
                                    (not (kval ?a (person-name ?p))) 
                                    (= (is-in ?a) ?at) 
                                    (= (is-in ?p) ?at)
                               )
                 :effect (kval ?a (person-name ?p))
        )

        (:action ask-for-your-record
                 :agent(?a - robot)
                 :parameters (?p - person)
                 :variables (?at - place)
                 :precondition (and 
                                    (started ?a)
                     ;               (not (locked_due_to_missing_object_information))
                                    (not (kval ?a (record ?p)))
                                    (kval ?a (person-name ?p)) 
                                    (= (is-in ?a) ?at) 
                                    (= (is-in ?p) ?at)
                               )
                 :effect (kval ?a (record ?p))
        )

	(:action move_to_report_pos
                 :agent (?a - robot)
                 :parameters (?to - place)
                 :precondition (and
				 (started ?a)
                      ;           (not (locked_due_to_missing_object_information))
				 (= (start_place ?a) ?to)
				 (ready_to_move_to_report_pos ?a)
                               )
                 :effect       (and 
		 	       	    (ready_to_report ?a) 
				    (assign (is-in ?a) ?to)
				    (update (ready_to_report ?a) true)
			       )
        )

	(:action move_to_report_pos
                :agent (?a - robot)
                :parameters (?to - place)
                :precondition (and
				      (started ?a)
                    ;                  (not (locked_due_to_missing_object_information))
				      (= (start_place ?a) ?to)
				      (ready_to_move_to_report_pos ?a)
                              )
                :effect       (and 
		 	       	    (ready_to_report ?a) 
				    (assign (is-in ?a) ?to)
			    	    (update (ready_to_report ?a) true)
			       )
       )

        (:action report
                 :agent (?a - robot)
                 :precondition (and
                                 (ready_to_report ?a)
                               )
                 :effect       (and
				  (finished ?a)
				  (update (finished ?a) true)
        		       )
        )

        ; (:action derive_object_comaroom
        ;          :agent (?a - robot)
        ;          :parameters (?v - visualobject ?c - comaroom)
        ;          :variables (?loc - place)
        ;          :precondition (and
        ;                            (started ?a)
        ;                            (= (is-in ?v) ?loc)
        ;                            (= (in-room ?loc) ?c)
        ;                        )
        ;          :effect (and
        ;                       (assign (is-in-room ?v) ?c)
        ;                       (update (is-in-room ?v) ?c)
        ;                  )
        ; )
                 
        ; (:derived (locked_due_to_missing_object_information)
        ;            (forall (?a - robot)
        ;                   (exists (?v - visualobject)
        ;                           (not (kval ?a (is-in-room ?v)))
        ;                   )
        ;            )
        ; )

        (:derived (have_all_info_about ?p - person)
                  (forall (?a - robot) 
                         (and
                               (kval ?a (person-name ?p))
                               (kval ?a (record ?p))
                         )
                  )
        )

	(:derived (ready_to_move_to_report_pos ?a - robot)
                  (and
                        (exists (?v1 ?v2 ?v3 - visualobject)
		  	   (and 
			       (not (= ?v1 ?v2))
			       (not (= ?v1 ?v3))
			       (not (= ?v2 ?v3))
                               (not (= ?v1 NO_RECORD))
                               (not (= ?v2 NO_RECORD))
                               (not (= ?v3 NO_RECORD))
			       (detected ?v1)
			       (detected ?v2)
			       (detected ?v3)
			   )
		        )
                        (forall (?p - person) (have_all_info_about ?p))
                  )
	)

	(:derived (ready_to_move_to_report_pos ?a - robot)
                  (and
                        (forall (?loc - place) (checked_for_objects ?loc))
                        (forall (?p - person) (have_all_info_about ?p))
                  )
	)

 ;       (:derived (assign (is-in-room ?loc - place) ?n - room_name)
 ;                 (exists (?c - comaroom) (and (= (in-room ?loc) ?c) (= (concepts ?c) ?n)))
 ;       )		  
)